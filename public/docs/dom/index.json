{
  "entries": [
    { "name": "AbortController", "path": "abortcontroller", "type": "Fetch" },
    {
      "name": "AbortController.abort",
      "path": "abortcontroller/abort",
      "type": "Fetch"
    },
    {
      "name": "AbortController.constructor",
      "path": "abortcontroller/abortcontroller",
      "type": "Fetch"
    },
    {
      "name": "AbortController.signal",
      "path": "abortcontroller/signal",
      "type": "Fetch"
    },
    { "name": "AbortSignal", "path": "abortsignal", "type": "Fetch" },
    {
      "name": "AbortSignal.abort",
      "path": "abortsignal/abort",
      "type": "Fetch"
    },
    {
      "name": "AbortSignal.abort event",
      "path": "abortsignal/abort_event",
      "type": "Fetch"
    },
    {
      "name": "AbortSignal.aborted",
      "path": "abortsignal/aborted",
      "type": "Fetch"
    },
    {
      "name": "AbortSignal.onabort",
      "path": "abortsignal/onabort",
      "type": "Fetch"
    },
    {
      "name": "AbsoluteOrientationSensor",
      "path": "absoluteorientationsensor",
      "type": "Sensors"
    },
    {
      "name": "AbsoluteOrientationSensor.constructor",
      "path": "absoluteorientationsensor/absoluteorientationsensor",
      "type": "Sensors"
    },
    {
      "name": "AbstractRange",
      "path": "abstractrange",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractRange.collapsed",
      "path": "abstractrange/collapsed",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractRange.endContainer",
      "path": "abstractrange/endcontainer",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractRange.endOffset",
      "path": "abstractrange/endoffset",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractRange.startContainer",
      "path": "abstractrange/startcontainer",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractRange.startOffset",
      "path": "abstractrange/startoffset",
      "type": "Miscellaneous"
    },
    {
      "name": "AbstractWorker",
      "path": "abstractworker",
      "type": "Web Workers"
    },
    {
      "name": "AbstractWorker.onerror",
      "path": "abstractworker/onerror",
      "type": "Web Workers"
    },
    { "name": "Accelerometer", "path": "accelerometer", "type": "Sensors" },
    {
      "name": "Accelerometer.constructor",
      "path": "accelerometer/accelerometer",
      "type": "Sensors"
    },
    { "name": "Accelerometer.x", "path": "accelerometer/x", "type": "Sensors" },
    { "name": "Accelerometer.y", "path": "accelerometer/y", "type": "Sensors" },
    { "name": "Accelerometer.z", "path": "accelerometer/z", "type": "Sensors" },
    { "name": "AddressErrors", "path": "addresserrors", "type": "Payments" },
    {
      "name": "AddressErrors.addressLine",
      "path": "addresserrors/addressline",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.city",
      "path": "addresserrors/city",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.country",
      "path": "addresserrors/country",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.dependentLocality",
      "path": "addresserrors/dependentlocality",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.languageCode",
      "path": "addresserrors/languagecode",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.organization",
      "path": "addresserrors/organization",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.phone",
      "path": "addresserrors/phone",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.postalCode",
      "path": "addresserrors/postalcode",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.recipient",
      "path": "addresserrors/recipient",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.region",
      "path": "addresserrors/region",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.regionCode",
      "path": "addresserrors/regioncode",
      "type": "Payments"
    },
    {
      "name": "AddressErrors.sortingCode",
      "path": "addresserrors/sortingcode",
      "type": "Payments"
    },
    { "name": "AesCbcParams", "path": "aescbcparams", "type": "Cryptography" },
    { "name": "AesCtrParams", "path": "aesctrparams", "type": "Cryptography" },
    { "name": "AesGcmParams", "path": "aesgcmparams", "type": "Cryptography" },
    {
      "name": "AesKeyGenParams",
      "path": "aeskeygenparams",
      "type": "Cryptography"
    },
    {
      "name": "Ambient Light Events",
      "path": "ambient_light_events",
      "type": "Ambient Light"
    },
    {
      "name": "AmbientLightSensor",
      "path": "ambientlightsensor",
      "type": "Ambient Light"
    },
    {
      "name": "AmbientLightSensor.constructor",
      "path": "ambientlightsensor/ambientlightsensor",
      "type": "Ambient Light"
    },
    {
      "name": "AmbientLightSensor.illuminance",
      "path": "ambientlightsensor/illuminance",
      "type": "Ambient Light"
    },
    { "name": "AnalyserNode", "path": "analysernode", "type": "Audio" },
    {
      "name": "AnalyserNode.constructor",
      "path": "analysernode/analysernode",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.fftSize",
      "path": "analysernode/fftsize",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.frequencyBinCount",
      "path": "analysernode/frequencybincount",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.getByteFrequencyData",
      "path": "analysernode/getbytefrequencydata",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.getByteTimeDomainData",
      "path": "analysernode/getbytetimedomaindata",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.getFloatFrequencyData",
      "path": "analysernode/getfloatfrequencydata",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.getFloatTimeDomainData",
      "path": "analysernode/getfloattimedomaindata",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.maxDecibels",
      "path": "analysernode/maxdecibels",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.minDecibels",
      "path": "analysernode/mindecibels",
      "type": "Audio"
    },
    {
      "name": "AnalyserNode.smoothingTimeConstant",
      "path": "analysernode/smoothingtimeconstant",
      "type": "Audio"
    },
    {
      "name": "ANGLE instanced arrays",
      "path": "angle_instanced_arrays",
      "type": "WebGL"
    },
    { "name": "Animation", "path": "animation", "type": "Animation" },
    {
      "name": "Animation.cancel",
      "path": "animation/cancel",
      "type": "Animation"
    },
    {
      "name": "Animation.commitStyles",
      "path": "animation/commitstyles",
      "type": "Animation"
    },
    {
      "name": "Animation.constructor",
      "path": "animation/animation",
      "type": "Animation"
    },
    {
      "name": "Animation.currentTime",
      "path": "animation/currenttime",
      "type": "Animation"
    },
    {
      "name": "Animation.effect",
      "path": "animation/effect",
      "type": "Animation"
    },
    {
      "name": "Animation.finish",
      "path": "animation/finish",
      "type": "Animation"
    },
    {
      "name": "Animation.finished",
      "path": "animation/finished",
      "type": "Animation"
    },
    { "name": "Animation.id", "path": "animation/id", "type": "Animation" },
    {
      "name": "Animation.oncancel",
      "path": "animation/oncancel",
      "type": "Animation"
    },
    {
      "name": "Animation.onfinish",
      "path": "animation/onfinish",
      "type": "Animation"
    },
    {
      "name": "Animation.onremove",
      "path": "animation/onremove",
      "type": "Animation"
    },
    {
      "name": "Animation.pause",
      "path": "animation/pause",
      "type": "Animation"
    },
    {
      "name": "Animation.pending",
      "path": "animation/pending",
      "type": "Animation"
    },
    {
      "name": "Animation.persist",
      "path": "animation/persist",
      "type": "Animation"
    },
    { "name": "Animation.play", "path": "animation/play", "type": "Animation" },
    {
      "name": "Animation.playbackRate",
      "path": "animation/playbackrate",
      "type": "Animation"
    },
    {
      "name": "Animation.playState",
      "path": "animation/playstate",
      "type": "Animation"
    },
    {
      "name": "Animation.ready",
      "path": "animation/ready",
      "type": "Animation"
    },
    {
      "name": "Animation.replaceState",
      "path": "animation/replacestate",
      "type": "Animation"
    },
    {
      "name": "Animation.reverse",
      "path": "animation/reverse",
      "type": "Animation"
    },
    {
      "name": "Animation.startTime",
      "path": "animation/starttime",
      "type": "Animation"
    },
    {
      "name": "Animation.timeline",
      "path": "animation/timeline",
      "type": "Animation"
    },
    {
      "name": "Animation.updatePlaybackRate",
      "path": "animation/updateplaybackrate",
      "type": "Animation"
    },
    {
      "name": "AnimationEffect",
      "path": "animationeffect",
      "type": "Animation"
    },
    {
      "name": "AnimationEffect.getComputedTiming",
      "path": "animationeffect/getcomputedtiming",
      "type": "Animation"
    },
    {
      "name": "AnimationEffect.getTiming",
      "path": "animationeffect/gettiming",
      "type": "Animation"
    },
    {
      "name": "AnimationEffect.updateTiming",
      "path": "animationeffect/updatetiming",
      "type": "Animation"
    },
    { "name": "AnimationEvent", "path": "animationevent", "type": "Animation" },
    {
      "name": "AnimationEvent.animationName",
      "path": "animationevent/animationname",
      "type": "Animation"
    },
    {
      "name": "AnimationEvent.constructor",
      "path": "animationevent/animationevent",
      "type": "Animation"
    },
    {
      "name": "AnimationEvent.elapsedTime",
      "path": "animationevent/elapsedtime",
      "type": "Animation"
    },
    {
      "name": "AnimationEvent.initAnimationEvent",
      "path": "animationevent/initanimationevent",
      "type": "Animation"
    },
    {
      "name": "AnimationEvent.pseudoElement",
      "path": "animationevent/pseudoelement",
      "type": "Animation"
    },
    {
      "name": "AnimationPlaybackEvent",
      "path": "animationplaybackevent",
      "type": "Animation"
    },
    {
      "name": "AnimationPlaybackEvent.constructor",
      "path": "animationplaybackevent/animationplaybackevent",
      "type": "Animation"
    },
    {
      "name": "AnimationPlaybackEvent.currentTime",
      "path": "animationplaybackevent/currenttime",
      "type": "Animation"
    },
    {
      "name": "AnimationPlaybackEvent.timelineTime",
      "path": "animationplaybackevent/timelinetime",
      "type": "Animation"
    },
    {
      "name": "AnimationTimeline",
      "path": "animationtimeline",
      "type": "Animation"
    },
    {
      "name": "AnimationTimeline.currentTime",
      "path": "animationtimeline/currenttime",
      "type": "Animation"
    },
    {
      "name": "ArrayBufferView",
      "path": "arraybufferview",
      "type": "Miscellaneous"
    },
    { "name": "Attr", "path": "attr", "type": "Nodes" },
    { "name": "Attr.localName", "path": "attr/localname", "type": "Nodes" },
    {
      "name": "Attr.namespaceURI",
      "path": "attr/namespaceuri",
      "type": "Nodes"
    },
    { "name": "Attr.prefix", "path": "attr/prefix", "type": "Nodes" },
    { "name": "AudioBuffer", "path": "audiobuffer", "type": "Audio" },
    {
      "name": "AudioBuffer.constructor",
      "path": "audiobuffer/audiobuffer",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.copyFromChannel",
      "path": "audiobuffer/copyfromchannel",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.copyToChannel",
      "path": "audiobuffer/copytochannel",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.duration",
      "path": "audiobuffer/duration",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.getChannelData",
      "path": "audiobuffer/getchanneldata",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.length",
      "path": "audiobuffer/length",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.numberOfChannels",
      "path": "audiobuffer/numberofchannels",
      "type": "Audio"
    },
    {
      "name": "AudioBuffer.sampleRate",
      "path": "audiobuffer/samplerate",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode",
      "path": "audiobuffersourcenode",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.buffer",
      "path": "audiobuffersourcenode/buffer",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.constructor",
      "path": "audiobuffersourcenode/audiobuffersourcenode",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.detune",
      "path": "audiobuffersourcenode/detune",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.loop",
      "path": "audiobuffersourcenode/loop",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.loopEnd",
      "path": "audiobuffersourcenode/loopend",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.loopStart",
      "path": "audiobuffersourcenode/loopstart",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.playbackRate",
      "path": "audiobuffersourcenode/playbackrate",
      "type": "Audio"
    },
    {
      "name": "AudioBufferSourceNode.start",
      "path": "audiobuffersourcenode/start",
      "type": "Audio"
    },
    {
      "name": "AudioConfiguration",
      "path": "audioconfiguration",
      "type": "Audio"
    },
    { "name": "AudioContext", "path": "audiocontext", "type": "Audio" },
    {
      "name": "AudioContext.baseLatency",
      "path": "audiocontext/baselatency",
      "type": "Audio"
    },
    {
      "name": "AudioContext.close",
      "path": "audiocontext/close",
      "type": "Audio"
    },
    {
      "name": "AudioContext.constructor",
      "path": "audiocontext/audiocontext",
      "type": "Audio"
    },
    {
      "name": "AudioContext.createJavaScriptNode",
      "path": "audiocontext/createjavascriptnode",
      "type": "Audio"
    },
    {
      "name": "AudioContext.createMediaElementSource",
      "path": "audiocontext/createmediaelementsource",
      "type": "Audio"
    },
    {
      "name": "AudioContext.createMediaStreamDestination",
      "path": "audiocontext/createmediastreamdestination",
      "type": "Audio"
    },
    {
      "name": "AudioContext.createMediaStreamSource",
      "path": "audiocontext/createmediastreamsource",
      "type": "Audio"
    },
    {
      "name": "AudioContext.createMediaStreamTrackSource",
      "path": "audiocontext/createmediastreamtracksource",
      "type": "Audio"
    },
    {
      "name": "AudioContext.getOutputTimestamp",
      "path": "audiocontext/getoutputtimestamp",
      "type": "Audio"
    },
    {
      "name": "AudioContext.outputLatency",
      "path": "audiocontext/outputlatency",
      "type": "Audio"
    },
    {
      "name": "AudioContext.resume",
      "path": "audiocontext/resume",
      "type": "Audio"
    },
    {
      "name": "AudioContext.suspend",
      "path": "audiocontext/suspend",
      "type": "Audio"
    },
    {
      "name": "AudioContextLatencyCategory",
      "path": "audiocontextlatencycategory",
      "type": "Audio"
    },
    {
      "name": "AudioContextOptions",
      "path": "audiocontextoptions",
      "type": "Audio"
    },
    {
      "name": "AudioContextOptions.latencyHint",
      "path": "audiocontextoptions/latencyhint",
      "type": "Audio"
    },
    {
      "name": "AudioContextOptions.sampleRate",
      "path": "audiocontextoptions/samplerate",
      "type": "Audio"
    },
    {
      "name": "AudioDestinationNode",
      "path": "audiodestinationnode",
      "type": "Audio"
    },
    {
      "name": "AudioDestinationNode.maxChannelCount",
      "path": "audiodestinationnode/maxchannelcount",
      "type": "Audio"
    },
    { "name": "AudioListener", "path": "audiolistener", "type": "Audio" },
    {
      "name": "AudioListener.dopplerFactor",
      "path": "audiolistener/dopplerfactor",
      "type": "Audio"
    },
    {
      "name": "AudioListener.forwardX",
      "path": "audiolistener/forwardx",
      "type": "Audio"
    },
    {
      "name": "AudioListener.forwardY",
      "path": "audiolistener/forwardy",
      "type": "Audio"
    },
    {
      "name": "AudioListener.forwardZ",
      "path": "audiolistener/forwardz",
      "type": "Audio"
    },
    {
      "name": "AudioListener.positionX",
      "path": "audiolistener/positionx",
      "type": "Audio"
    },
    {
      "name": "AudioListener.positionY",
      "path": "audiolistener/positiony",
      "type": "Audio"
    },
    {
      "name": "AudioListener.positionZ",
      "path": "audiolistener/positionz",
      "type": "Audio"
    },
    {
      "name": "AudioListener.setOrientation",
      "path": "audiolistener/setorientation",
      "type": "Audio"
    },
    {
      "name": "AudioListener.setPosition",
      "path": "audiolistener/setposition",
      "type": "Audio"
    },
    {
      "name": "AudioListener.speedOfSound",
      "path": "audiolistener/speedofsound",
      "type": "Audio"
    },
    {
      "name": "AudioListener.upX",
      "path": "audiolistener/upx",
      "type": "Audio"
    },
    {
      "name": "AudioListener.upY",
      "path": "audiolistener/upy",
      "type": "Audio"
    },
    {
      "name": "AudioListener.upZ",
      "path": "audiolistener/upz",
      "type": "Audio"
    },
    { "name": "AudioNode", "path": "audionode", "type": "Audio" },
    {
      "name": "AudioNode.channelCount",
      "path": "audionode/channelcount",
      "type": "Audio"
    },
    {
      "name": "AudioNode.channelCountMode",
      "path": "audionode/channelcountmode",
      "type": "Audio"
    },
    {
      "name": "AudioNode.channelInterpretation",
      "path": "audionode/channelinterpretation",
      "type": "Audio"
    },
    {
      "name": "AudioNode.connect",
      "path": "audionode/connect",
      "type": "Audio"
    },
    {
      "name": "AudioNode.context",
      "path": "audionode/context",
      "type": "Audio"
    },
    {
      "name": "AudioNode.disconnect",
      "path": "audionode/disconnect",
      "type": "Audio"
    },
    {
      "name": "AudioNode.numberOfInputs",
      "path": "audionode/numberofinputs",
      "type": "Audio"
    },
    {
      "name": "AudioNode.numberOfOutputs",
      "path": "audionode/numberofoutputs",
      "type": "Audio"
    },
    { "name": "AudioNodeOptions", "path": "audionodeoptions", "type": "Audio" },
    { "name": "AudioParam", "path": "audioparam", "type": "Audio" },
    {
      "name": "AudioParam.cancelAndHoldAtTime",
      "path": "audioparam/cancelandholdattime",
      "type": "Audio"
    },
    {
      "name": "AudioParam.cancelScheduledValues",
      "path": "audioparam/cancelscheduledvalues",
      "type": "Audio"
    },
    {
      "name": "AudioParam.defaultValue",
      "path": "audioparam/defaultvalue",
      "type": "Audio"
    },
    {
      "name": "AudioParam.exponentialRampToValueAtTime",
      "path": "audioparam/exponentialramptovalueattime",
      "type": "Audio"
    },
    {
      "name": "AudioParam.linearRampToValueAtTime",
      "path": "audioparam/linearramptovalueattime",
      "type": "Audio"
    },
    {
      "name": "AudioParam.maxValue",
      "path": "audioparam/maxvalue",
      "type": "Audio"
    },
    {
      "name": "AudioParam.minValue",
      "path": "audioparam/minvalue",
      "type": "Audio"
    },
    {
      "name": "AudioParam.setTargetAtTime",
      "path": "audioparam/settargetattime",
      "type": "Audio"
    },
    {
      "name": "AudioParam.setValueAtTime",
      "path": "audioparam/setvalueattime",
      "type": "Audio"
    },
    {
      "name": "AudioParam.setValueCurveAtTime",
      "path": "audioparam/setvaluecurveattime",
      "type": "Audio"
    },
    { "name": "AudioParam.value", "path": "audioparam/value", "type": "Audio" },
    {
      "name": "AudioParamDescriptor",
      "path": "audioparamdescriptor",
      "type": "Audio"
    },
    { "name": "AudioParamMap", "path": "audioparammap", "type": "Audio" },
    {
      "name": "AudioProcessingEvent",
      "path": "audioprocessingevent",
      "type": "Audio"
    },
    {
      "name": "AudioScheduledSourceNode",
      "path": "audioscheduledsourcenode",
      "type": "Audio"
    },
    {
      "name": "AudioScheduledSourceNode.ended event",
      "path": "audioscheduledsourcenode/ended_event",
      "type": "Audio"
    },
    {
      "name": "AudioScheduledSourceNode.onended",
      "path": "audioscheduledsourcenode/onended",
      "type": "Audio"
    },
    {
      "name": "AudioScheduledSourceNode.start",
      "path": "audioscheduledsourcenode/start",
      "type": "Audio"
    },
    {
      "name": "AudioScheduledSourceNode.stop",
      "path": "audioscheduledsourcenode/stop",
      "type": "Audio"
    },
    { "name": "AudioTrack", "path": "audiotrack", "type": "Audio" },
    {
      "name": "AudioTrack.enabled",
      "path": "audiotrack/enabled",
      "type": "Audio"
    },
    { "name": "AudioTrack.id", "path": "audiotrack/id", "type": "Audio" },
    { "name": "AudioTrack.kind", "path": "audiotrack/kind", "type": "Audio" },
    { "name": "AudioTrack.label", "path": "audiotrack/label", "type": "Audio" },
    {
      "name": "AudioTrack.language",
      "path": "audiotrack/language",
      "type": "Audio"
    },
    {
      "name": "AudioTrack.sourceBuffer",
      "path": "audiotrack/sourcebuffer",
      "type": "Audio"
    },
    { "name": "AudioTrackList", "path": "audiotracklist", "type": "Audio" },
    {
      "name": "AudioTrackList.addtrack event",
      "path": "audiotracklist/addtrack_event",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.change event",
      "path": "audiotracklist/change_event",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.getTrackById",
      "path": "audiotracklist/gettrackbyid",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.length",
      "path": "audiotracklist/length",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.onaddtrack",
      "path": "audiotracklist/onaddtrack",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.onchange",
      "path": "audiotracklist/onchange",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.onremovetrack",
      "path": "audiotracklist/onremovetrack",
      "type": "Audio"
    },
    {
      "name": "AudioTrackList.removetrack event",
      "path": "audiotracklist/removetrack_event",
      "type": "Audio"
    },
    { "name": "AudioWorklet", "path": "audioworklet", "type": "Audio" },
    {
      "name": "AudioWorkletGlobalScope",
      "path": "audioworkletglobalscope",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletGlobalScope.registerProcessor",
      "path": "audioworkletglobalscope/registerprocessor",
      "type": "Audio"
    },
    { "name": "AudioWorkletNode", "path": "audioworkletnode", "type": "Audio" },
    {
      "name": "AudioWorkletNode.constructor",
      "path": "audioworkletnode/audioworkletnode",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletNode.onprocessorerror",
      "path": "audioworkletnode/onprocessorerror",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletNode.parameters",
      "path": "audioworkletnode/parameters",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletNode.port",
      "path": "audioworkletnode/port",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletNodeOptions",
      "path": "audioworkletnodeoptions",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletProcessor",
      "path": "audioworkletprocessor",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletProcessor.constructor",
      "path": "audioworkletprocessor/audioworkletprocessor",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletProcessor.parameterDescriptors",
      "path": "audioworkletprocessor/parameterdescriptors",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletProcessor.port",
      "path": "audioworkletprocessor/port",
      "type": "Audio"
    },
    {
      "name": "AudioWorkletProcessor.process",
      "path": "audioworkletprocessor/process",
      "type": "Audio"
    },
    {
      "name": "AuthenticatorAssertionResponse",
      "path": "authenticatorassertionresponse",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAssertionResponse.authenticatorData",
      "path": "authenticatorassertionresponse/authenticatordata",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAssertionResponse.signature",
      "path": "authenticatorassertionresponse/signature",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAssertionResponse.userHandle",
      "path": "authenticatorassertionresponse/userhandle",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAttestationResponse",
      "path": "authenticatorattestationresponse",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAttestationResponse.attestationObject",
      "path": "authenticatorattestationresponse/attestationobject",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorAttestationResponse.getTransports",
      "path": "authenticatorattestationresponse/gettransports",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorResponse",
      "path": "authenticatorresponse",
      "type": "Credential Management"
    },
    {
      "name": "AuthenticatorResponse.clientDataJSON",
      "path": "authenticatorresponse/clientdatajson",
      "type": "Credential Management"
    },
    {
      "name": "Background Fetch API",
      "path": "background_fetch_api",
      "type": "Fetch"
    },
    {
      "name": "Background Tasks API",
      "path": "background_tasks_api",
      "type": "Scheduling"
    },
    {
      "name": "BackgroundFetchEvent",
      "path": "backgroundfetchevent",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchEvent.constructor",
      "path": "backgroundfetchevent/backgroundfetchevent",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchEvent.registration",
      "path": "backgroundfetchevent/registration",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchManager",
      "path": "backgroundfetchmanager",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchManager.fetch",
      "path": "backgroundfetchmanager/fetch",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchManager.get",
      "path": "backgroundfetchmanager/get",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchManager.getIds",
      "path": "backgroundfetchmanager/getids",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRecord",
      "path": "backgroundfetchrecord",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRecord.request",
      "path": "backgroundfetchrecord/request",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRecord.responseReady",
      "path": "backgroundfetchrecord/responseready",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration",
      "path": "backgroundfetchregistration",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.abort",
      "path": "backgroundfetchregistration/abort",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.downloaded",
      "path": "backgroundfetchregistration/downloaded",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.downloadTotal",
      "path": "backgroundfetchregistration/downloadtotal",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.failureReason",
      "path": "backgroundfetchregistration/failurereason",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.id",
      "path": "backgroundfetchregistration/id",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.match",
      "path": "backgroundfetchregistration/match",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.matchAll",
      "path": "backgroundfetchregistration/matchall",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.onprogress",
      "path": "backgroundfetchregistration/onprogress",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.recordsAvailable",
      "path": "backgroundfetchregistration/recordsavailable",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.result",
      "path": "backgroundfetchregistration/result",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.uploaded",
      "path": "backgroundfetchregistration/uploaded",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchRegistration.uploadTotal",
      "path": "backgroundfetchregistration/uploadtotal",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchUpdateUIEvent",
      "path": "backgroundfetchupdateuievent",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchUpdateUIEvent.constructor",
      "path": "backgroundfetchupdateuievent/backgroundfetchupdateuievent",
      "type": "Fetch"
    },
    {
      "name": "BackgroundFetchUpdateUIEvent.updateUI",
      "path": "backgroundfetchupdateuievent/updateui",
      "type": "Fetch"
    },
    { "name": "Badging API", "path": "badging_api", "type": "Miscellaneous" },
    {
      "name": "Barcode Detection API",
      "path": "barcode_detection_api",
      "type": "Miscellaneous"
    },
    {
      "name": "BarcodeDetector",
      "path": "barcodedetector",
      "type": "Miscellaneous"
    },
    {
      "name": "BarcodeDetector.constructor",
      "path": "barcodedetector/barcodedetector",
      "type": "Miscellaneous"
    },
    {
      "name": "BarcodeDetector.detect",
      "path": "barcodedetector/detect",
      "type": "Miscellaneous"
    },
    {
      "name": "BarcodeDetector.getSupportedFormats",
      "path": "barcodedetector/getsupportedformats",
      "type": "Miscellaneous"
    },
    { "name": "BaseAudioContext", "path": "baseaudiocontext", "type": "Audio" },
    {
      "name": "BaseAudioContext.audioWorklet",
      "path": "baseaudiocontext/audioworklet",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createAnalyser",
      "path": "baseaudiocontext/createanalyser",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createBiquadFilter",
      "path": "baseaudiocontext/createbiquadfilter",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createBuffer",
      "path": "baseaudiocontext/createbuffer",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createBufferSource",
      "path": "baseaudiocontext/createbuffersource",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createChannelMerger",
      "path": "baseaudiocontext/createchannelmerger",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createChannelSplitter",
      "path": "baseaudiocontext/createchannelsplitter",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createConstantSource",
      "path": "baseaudiocontext/createconstantsource",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createConvolver",
      "path": "baseaudiocontext/createconvolver",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createDelay",
      "path": "baseaudiocontext/createdelay",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createDynamicsCompressor",
      "path": "baseaudiocontext/createdynamicscompressor",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createGain",
      "path": "baseaudiocontext/creategain",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createIIRFilter",
      "path": "baseaudiocontext/createiirfilter",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createOscillator",
      "path": "baseaudiocontext/createoscillator",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createPanner",
      "path": "baseaudiocontext/createpanner",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createPeriodicWave",
      "path": "baseaudiocontext/createperiodicwave",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createScriptProcessor",
      "path": "baseaudiocontext/createscriptprocessor",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createStereoPanner",
      "path": "baseaudiocontext/createstereopanner",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.createWaveShaper",
      "path": "baseaudiocontext/createwaveshaper",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.currentTime",
      "path": "baseaudiocontext/currenttime",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.decodeAudioData",
      "path": "baseaudiocontext/decodeaudiodata",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.destination",
      "path": "baseaudiocontext/destination",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.listener",
      "path": "baseaudiocontext/listener",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.onstatechange",
      "path": "baseaudiocontext/onstatechange",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.sampleRate",
      "path": "baseaudiocontext/samplerate",
      "type": "Audio"
    },
    {
      "name": "BaseAudioContext.state",
      "path": "baseaudiocontext/state",
      "type": "Audio"
    },
    {
      "name": "BasicCardRequest",
      "path": "basiccardrequest",
      "type": "Payments"
    },
    {
      "name": "BasicCardRequest.supportedNetworks",
      "path": "basiccardrequest/supportednetworks",
      "type": "Payments"
    },
    {
      "name": "BasicCardRequest.supportedTypes",
      "path": "basiccardrequest/supportedtypes",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse",
      "path": "basiccardresponse",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.billingAddress",
      "path": "basiccardresponse/billingaddress",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.cardholderName",
      "path": "basiccardresponse/cardholdername",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.cardNumber",
      "path": "basiccardresponse/cardnumber",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.cardSecurityCode",
      "path": "basiccardresponse/cardsecuritycode",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.expiryMonth",
      "path": "basiccardresponse/expirymonth",
      "type": "Payments"
    },
    {
      "name": "BasicCardResponse.expiryYear",
      "path": "basiccardresponse/expiryyear",
      "type": "Payments"
    },
    {
      "name": "Battery Status API",
      "path": "battery_status_api",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager",
      "path": "batterymanager",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.charging",
      "path": "batterymanager/charging",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.chargingTime",
      "path": "batterymanager/chargingtime",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.dischargingTime",
      "path": "batterymanager/dischargingtime",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.level",
      "path": "batterymanager/level",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.onchargingchange",
      "path": "batterymanager/onchargingchange",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.onchargingtimechange",
      "path": "batterymanager/onchargingtimechange",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.ondischargingtimechange",
      "path": "batterymanager/ondischargingtimechange",
      "type": "Battery Status"
    },
    {
      "name": "BatteryManager.onlevelchange",
      "path": "batterymanager/onlevelchange",
      "type": "Battery Status"
    },
    { "name": "Beacon API", "path": "beacon_api", "type": "Miscellaneous" },
    {
      "name": "BeforeInstallPromptEvent",
      "path": "beforeinstallpromptevent",
      "type": "Events"
    },
    {
      "name": "BeforeInstallPromptEvent.prompt",
      "path": "beforeinstallpromptevent/prompt",
      "type": "Events"
    },
    {
      "name": "BeforeUnloadEvent",
      "path": "beforeunloadevent",
      "type": "Events"
    },
    { "name": "BiquadFilterNode", "path": "biquadfilternode", "type": "Audio" },
    {
      "name": "BiquadFilterNode.constructor",
      "path": "biquadfilternode/biquadfilternode",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.detune",
      "path": "biquadfilternode/detune",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.frequency",
      "path": "biquadfilternode/frequency",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.gain",
      "path": "biquadfilternode/gain",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.getFrequencyResponse",
      "path": "biquadfilternode/getfrequencyresponse",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.Q",
      "path": "biquadfilternode/q",
      "type": "Audio"
    },
    {
      "name": "BiquadFilterNode.type",
      "path": "biquadfilternode/type",
      "type": "Audio"
    },
    { "name": "Blob", "path": "blob", "type": "File" },
    { "name": "Blob.arrayBuffer", "path": "blob/arraybuffer", "type": "File" },
    { "name": "Blob.constructor", "path": "blob/blob", "type": "File" },
    { "name": "Blob.size", "path": "blob/size", "type": "File" },
    { "name": "Blob.slice", "path": "blob/slice", "type": "File" },
    { "name": "Blob.stream", "path": "blob/stream", "type": "File" },
    { "name": "Blob.text", "path": "blob/text", "type": "File" },
    { "name": "Blob.type", "path": "blob/type", "type": "File" },
    { "name": "BlobBuilder", "path": "blobbuilder", "type": "Miscellaneous" },
    { "name": "BlobEvent", "path": "blobevent", "type": "Media Streams" },
    {
      "name": "BlobEvent.constructor",
      "path": "blobevent/blobevent",
      "type": "Media Streams"
    },
    {
      "name": "BlobEvent.data",
      "path": "blobevent/data",
      "type": "Media Streams"
    },
    {
      "name": "BlobEvent.timecode",
      "path": "blobevent/timecode",
      "type": "Media Streams"
    },
    { "name": "Bluetooth", "path": "bluetooth", "type": "Miscellaneous" },
    {
      "name": "Bluetooth.getAvailability",
      "path": "bluetooth/getavailability",
      "type": "Miscellaneous"
    },
    {
      "name": "Bluetooth.getDevices",
      "path": "bluetooth/getdevices",
      "type": "Miscellaneous"
    },
    {
      "name": "Bluetooth.onavailabilitychanged",
      "path": "bluetooth/onavailabilitychanged",
      "type": "Miscellaneous"
    },
    {
      "name": "Bluetooth.referringDevice",
      "path": "bluetooth/referringdevice",
      "type": "Miscellaneous"
    },
    {
      "name": "Bluetooth.requestDevice",
      "path": "bluetooth/requestdevice",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData",
      "path": "bluetoothadvertisingdata",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData.appearance",
      "path": "bluetoothadvertisingdata/appearance",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData.manufacturerData",
      "path": "bluetoothadvertisingdata/manufacturerdata",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData.rssi",
      "path": "bluetoothadvertisingdata/rssi",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData.serviceData",
      "path": "bluetoothadvertisingdata/servicedata",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothAdvertisingData.txPower",
      "path": "bluetoothadvertisingdata/txpower",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties",
      "path": "bluetoothcharacteristicproperties",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.authenticatedSignedWrites",
      "path": "bluetoothcharacteristicproperties/authenticatedsignedwrites",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.broadcast",
      "path": "bluetoothcharacteristicproperties/broadcast",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.indicate",
      "path": "bluetoothcharacteristicproperties/indicate",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.notify",
      "path": "bluetoothcharacteristicproperties/notify",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.read",
      "path": "bluetoothcharacteristicproperties/read",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.reliableWrite",
      "path": "bluetoothcharacteristicproperties/reliablewrite",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.writableAuxiliar",
      "path": "bluetoothcharacteristicproperties/writableauxiliar",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.write",
      "path": "bluetoothcharacteristicproperties/write",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothCharacteristicProperties.writeWithoutRespponse",
      "path": "bluetoothcharacteristicproperties/writewithoutrespponse",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice",
      "path": "bluetoothdevice",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.adData",
      "path": "bluetoothdevice/addata",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.connectGATT",
      "path": "bluetoothdevice/connectgatt",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.deviceClass",
      "path": "bluetoothdevice/deviceclass",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.gatt",
      "path": "bluetoothdevice/gatt",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.gattServer",
      "path": "bluetoothdevice/gattserver",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.id",
      "path": "bluetoothdevice/id",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.name",
      "path": "bluetoothdevice/name",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.paired",
      "path": "bluetoothdevice/paired",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.productID",
      "path": "bluetoothdevice/productid",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.productVersion",
      "path": "bluetoothdevice/productversion",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.uuids",
      "path": "bluetoothdevice/uuids",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.vendorID",
      "path": "bluetoothdevice/vendorid",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothDevice.vendorIDSource",
      "path": "bluetoothdevice/vendoridsource",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic",
      "path": "bluetoothremotegattcharacteristic",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.getDescriptor",
      "path": "bluetoothremotegattcharacteristic/getdescriptor",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.getDescriptors",
      "path": "bluetoothremotegattcharacteristic/getdescriptors",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.properties",
      "path": "bluetoothremotegattcharacteristic/properties",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.readValue",
      "path": "bluetoothremotegattcharacteristic/readvalue",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.service",
      "path": "bluetoothremotegattcharacteristic/service",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.startNotifications",
      "path": "bluetoothremotegattcharacteristic/startnotifications",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.stopNotifications",
      "path": "bluetoothremotegattcharacteristic/stopnotifications",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.uuid",
      "path": "bluetoothremotegattcharacteristic/uuid",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.value",
      "path": "bluetoothremotegattcharacteristic/value",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTCharacteristic.writeValue",
      "path": "bluetoothremotegattcharacteristic/writevalue",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor",
      "path": "bluetoothremotegattdescriptor",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor.characteristic",
      "path": "bluetoothremotegattdescriptor/characteristic",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor.readValue",
      "path": "bluetoothremotegattdescriptor/readvalue",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor.uuid",
      "path": "bluetoothremotegattdescriptor/uuid",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor.value",
      "path": "bluetoothremotegattdescriptor/value",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTDescriptor.writeValue",
      "path": "bluetoothremotegattdescriptor/writevalue",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer",
      "path": "bluetoothremotegattserver",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.connect",
      "path": "bluetoothremotegattserver/connect",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.connected",
      "path": "bluetoothremotegattserver/connected",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.device",
      "path": "bluetoothremotegattserver/device",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.disconnect",
      "path": "bluetoothremotegattserver/disconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.getPrimaryService",
      "path": "bluetoothremotegattserver/getprimaryservice",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTServer.getPrimaryServices",
      "path": "bluetoothremotegattserver/getprimaryservices",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService",
      "path": "bluetoothremotegattservice",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.device",
      "path": "bluetoothremotegattservice/device",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.getCharacteristic",
      "path": "bluetoothremotegattservice/getcharacteristic",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.getCharacteristics",
      "path": "bluetoothremotegattservice/getcharacteristics",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.getIncludedService",
      "path": "bluetoothremotegattservice/getincludedservice",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.getIncludedServices",
      "path": "bluetoothremotegattservice/getincludedservices",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.isPrimary",
      "path": "bluetoothremotegattservice/isprimary",
      "type": "Miscellaneous"
    },
    {
      "name": "BluetoothRemoteGATTService.uuid",
      "path": "bluetoothremotegattservice/uuid",
      "type": "Miscellaneous"
    },
    { "name": "Body", "path": "body", "type": "Fetch" },
    { "name": "Body.arrayBuffer", "path": "body/arraybuffer", "type": "Fetch" },
    { "name": "Body.blob", "path": "body/blob", "type": "Fetch" },
    { "name": "Body.body", "path": "body/body", "type": "Fetch" },
    { "name": "Body.bodyUsed", "path": "body/bodyused", "type": "Fetch" },
    { "name": "Body.formData", "path": "body/formdata", "type": "Fetch" },
    { "name": "Body.json", "path": "body/json", "type": "Fetch" },
    { "name": "Body.text", "path": "body/text", "type": "Fetch" },
    {
      "name": "Broadcast Channel API",
      "path": "broadcast_channel_api",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel",
      "path": "broadcastchannel",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.close",
      "path": "broadcastchannel/close",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.constructor",
      "path": "broadcastchannel/broadcastchannel",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.message event",
      "path": "broadcastchannel/message_event",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.messageerror event",
      "path": "broadcastchannel/messageerror_event",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.name",
      "path": "broadcastchannel/name",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.onmessage",
      "path": "broadcastchannel/onmessage",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.onmessageerror",
      "path": "broadcastchannel/onmessageerror",
      "type": "Broadcast Channel"
    },
    {
      "name": "BroadcastChannel.postMessage",
      "path": "broadcastchannel/postmessage",
      "type": "Broadcast Channel"
    },
    { "name": "BudgetService", "path": "budgetservice", "type": "Budget" },
    {
      "name": "BudgetService.reserve",
      "path": "budgetservice/reserve",
      "type": "Budget"
    },
    { "name": "BufferSource", "path": "buffersource", "type": "Miscellaneous" },
    {
      "name": "ByteLengthQueuingStrategy",
      "path": "bytelengthqueuingstrategy",
      "type": "Media Streams"
    },
    {
      "name": "ByteLengthQueuingStrategy.constructor",
      "path": "bytelengthqueuingstrategy/bytelengthqueuingstrategy",
      "type": "Media Streams"
    },
    {
      "name": "ByteLengthQueuingStrategy.size",
      "path": "bytelengthqueuingstrategy/size",
      "type": "Media Streams"
    },
    { "name": "ByteString", "path": "bytestring", "type": "Miscellaneous" },
    { "name": "Cache", "path": "cache", "type": "Service Workers" },
    { "name": "Cache.add", "path": "cache/add", "type": "Service Workers" },
    {
      "name": "Cache.addAll",
      "path": "cache/addall",
      "type": "Service Workers"
    },
    {
      "name": "Cache.delete",
      "path": "cache/delete",
      "type": "Service Workers"
    },
    { "name": "Cache.keys", "path": "cache/keys", "type": "Service Workers" },
    { "name": "Cache.match", "path": "cache/match", "type": "Service Workers" },
    {
      "name": "Cache.matchAll",
      "path": "cache/matchall",
      "type": "Service Workers"
    },
    { "name": "Cache.put", "path": "cache/put", "type": "Service Workers" },
    { "name": "CacheStorage", "path": "cachestorage", "type": "Storage" },
    {
      "name": "CacheStorage.delete",
      "path": "cachestorage/delete",
      "type": "Storage"
    },
    {
      "name": "CacheStorage.has",
      "path": "cachestorage/has",
      "type": "Storage"
    },
    {
      "name": "CacheStorage.keys",
      "path": "cachestorage/keys",
      "type": "Storage"
    },
    {
      "name": "CacheStorage.match",
      "path": "cachestorage/match",
      "type": "Storage"
    },
    {
      "name": "CacheStorage.open",
      "path": "cachestorage/open",
      "type": "Storage"
    },
    { "name": "Canvas API", "path": "canvas_api", "type": "Canvas" },
    {
      "name": "Canvas API: A basic ray-caster",
      "path": "canvas_api/a_basic_ray-caster",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Advanced animations",
      "path": "canvas_api/tutorial/advanced_animations",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Applying styles and colors",
      "path": "canvas_api/tutorial/applying_styles_and_colors",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Basic animations",
      "path": "canvas_api/tutorial/basic_animations",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Basic usage",
      "path": "canvas_api/tutorial/basic_usage",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Compositing",
      "path": "canvas_api/tutorial/compositing",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Compositing.Example",
      "path": "canvas_api/tutorial/compositing/example",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Drawing shapes",
      "path": "canvas_api/tutorial/drawing_shapes",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Drawing text",
      "path": "canvas_api/tutorial/drawing_text",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Finale",
      "path": "canvas_api/tutorial/finale",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Hit regions and accessibility",
      "path": "canvas_api/tutorial/hit_regions_and_accessibility",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Manipulating video using canvas",
      "path": "canvas_api/manipulating_video_using_canvas",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Optimizing canvas",
      "path": "canvas_api/tutorial/optimizing_canvas",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Pixel manipulation with canvas",
      "path": "canvas_api/tutorial/pixel_manipulation_with_canvas",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Transformations",
      "path": "canvas_api/tutorial/transformations",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Tutorial",
      "path": "canvas_api/tutorial",
      "type": "Canvas"
    },
    {
      "name": "Canvas API: Using images",
      "path": "canvas_api/tutorial/using_images",
      "type": "Canvas"
    },
    {
      "name": "CanvasCaptureMediaStreamTrack",
      "path": "canvascapturemediastreamtrack",
      "type": "Canvas"
    },
    {
      "name": "CanvasCaptureMediaStreamTrack.canvas",
      "path": "canvascapturemediastreamtrack/canvas",
      "type": "Canvas"
    },
    {
      "name": "CanvasCaptureMediaStreamTrack.requestFrame",
      "path": "canvascapturemediastreamtrack/requestframe",
      "type": "Canvas"
    },
    { "name": "CanvasGradient", "path": "canvasgradient", "type": "Canvas" },
    {
      "name": "CanvasGradient.addColorStop",
      "path": "canvasgradient/addcolorstop",
      "type": "Canvas"
    },
    {
      "name": "CanvasImageSource",
      "path": "canvasimagesource",
      "type": "Canvas"
    },
    { "name": "CanvasPattern", "path": "canvaspattern", "type": "Canvas" },
    {
      "name": "CanvasPattern.setTransform",
      "path": "canvaspattern/settransform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D",
      "path": "canvasrenderingcontext2d",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.addHitRegion",
      "path": "canvasrenderingcontext2d/addhitregion",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.arc",
      "path": "canvasrenderingcontext2d/arc",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.arcTo",
      "path": "canvasrenderingcontext2d/arcto",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.beginPath",
      "path": "canvasrenderingcontext2d/beginpath",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.bezierCurveTo",
      "path": "canvasrenderingcontext2d/beziercurveto",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.canvas",
      "path": "canvasrenderingcontext2d/canvas",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.clearHitRegions",
      "path": "canvasrenderingcontext2d/clearhitregions",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.clearRect",
      "path": "canvasrenderingcontext2d/clearrect",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.clip",
      "path": "canvasrenderingcontext2d/clip",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.closePath",
      "path": "canvasrenderingcontext2d/closepath",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.createConicGradient",
      "path": "canvasrenderingcontext2d/createconicgradient",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.createImageData",
      "path": "canvasrenderingcontext2d/createimagedata",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.createLinearGradient",
      "path": "canvasrenderingcontext2d/createlineargradient",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.createPattern",
      "path": "canvasrenderingcontext2d/createpattern",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.createRadialGradient",
      "path": "canvasrenderingcontext2d/createradialgradient",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.currentTransform",
      "path": "canvasrenderingcontext2d/currenttransform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.direction",
      "path": "canvasrenderingcontext2d/direction",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.drawFocusIfNeeded",
      "path": "canvasrenderingcontext2d/drawfocusifneeded",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.drawImage",
      "path": "canvasrenderingcontext2d/drawimage",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.drawWidgetAsOnScreen",
      "path": "canvasrenderingcontext2d/drawwidgetasonscreen",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.drawWindow",
      "path": "canvasrenderingcontext2d/drawwindow",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.ellipse",
      "path": "canvasrenderingcontext2d/ellipse",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.fill",
      "path": "canvasrenderingcontext2d/fill",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.fillRect",
      "path": "canvasrenderingcontext2d/fillrect",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.fillStyle",
      "path": "canvasrenderingcontext2d/fillstyle",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.fillText",
      "path": "canvasrenderingcontext2d/filltext",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.filter",
      "path": "canvasrenderingcontext2d/filter",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.font",
      "path": "canvasrenderingcontext2d/font",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.getContextAttributes",
      "path": "canvasrenderingcontext2d/getcontextattributes",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.getImageData",
      "path": "canvasrenderingcontext2d/getimagedata",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.getLineDash",
      "path": "canvasrenderingcontext2d/getlinedash",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.getTransform",
      "path": "canvasrenderingcontext2d/gettransform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.globalAlpha",
      "path": "canvasrenderingcontext2d/globalalpha",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.globalCompositeOperation",
      "path": "canvasrenderingcontext2d/globalcompositeoperation",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.imageSmoothingEnabled",
      "path": "canvasrenderingcontext2d/imagesmoothingenabled",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.imageSmoothingQuality",
      "path": "canvasrenderingcontext2d/imagesmoothingquality",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.isPointInPath",
      "path": "canvasrenderingcontext2d/ispointinpath",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.isPointInStroke",
      "path": "canvasrenderingcontext2d/ispointinstroke",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.lineCap",
      "path": "canvasrenderingcontext2d/linecap",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.lineDashOffset",
      "path": "canvasrenderingcontext2d/linedashoffset",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.lineJoin",
      "path": "canvasrenderingcontext2d/linejoin",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.lineTo",
      "path": "canvasrenderingcontext2d/lineto",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.lineWidth",
      "path": "canvasrenderingcontext2d/linewidth",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.measureText",
      "path": "canvasrenderingcontext2d/measuretext",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.miterLimit",
      "path": "canvasrenderingcontext2d/miterlimit",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.moveTo",
      "path": "canvasrenderingcontext2d/moveto",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.putImageData",
      "path": "canvasrenderingcontext2d/putimagedata",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.quadraticCurveTo",
      "path": "canvasrenderingcontext2d/quadraticcurveto",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.rect",
      "path": "canvasrenderingcontext2d/rect",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.removeHitRegion",
      "path": "canvasrenderingcontext2d/removehitregion",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.resetTransform",
      "path": "canvasrenderingcontext2d/resettransform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.restore",
      "path": "canvasrenderingcontext2d/restore",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.rotate",
      "path": "canvasrenderingcontext2d/rotate",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.save",
      "path": "canvasrenderingcontext2d/save",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.scale",
      "path": "canvasrenderingcontext2d/scale",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.scrollPathIntoView",
      "path": "canvasrenderingcontext2d/scrollpathintoview",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.setLineDash",
      "path": "canvasrenderingcontext2d/setlinedash",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.setTransform",
      "path": "canvasrenderingcontext2d/settransform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.shadowBlur",
      "path": "canvasrenderingcontext2d/shadowblur",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.shadowColor",
      "path": "canvasrenderingcontext2d/shadowcolor",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.shadowOffsetX",
      "path": "canvasrenderingcontext2d/shadowoffsetx",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.shadowOffsetY",
      "path": "canvasrenderingcontext2d/shadowoffsety",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.stroke",
      "path": "canvasrenderingcontext2d/stroke",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.strokeRect",
      "path": "canvasrenderingcontext2d/strokerect",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.strokeStyle",
      "path": "canvasrenderingcontext2d/strokestyle",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.strokeText",
      "path": "canvasrenderingcontext2d/stroketext",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.textAlign",
      "path": "canvasrenderingcontext2d/textalign",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.textBaseline",
      "path": "canvasrenderingcontext2d/textbaseline",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.transform",
      "path": "canvasrenderingcontext2d/transform",
      "type": "Canvas"
    },
    {
      "name": "CanvasRenderingContext2D.translate",
      "path": "canvasrenderingcontext2d/translate",
      "type": "Canvas"
    },
    { "name": "CaretPosition", "path": "caretposition", "type": "CSS" },
    { "name": "CDATASection", "path": "cdatasection", "type": "Miscellaneous" },
    {
      "name": "Channel Messaging API",
      "path": "channel_messaging_api",
      "type": "Channel Messaging"
    },
    {
      "name": "Channel Messaging API: Using channel messaging",
      "path": "channel_messaging_api/using_channel_messaging",
      "type": "Channel Messaging"
    },
    {
      "name": "ChannelMergerNode",
      "path": "channelmergernode",
      "type": "Audio"
    },
    {
      "name": "ChannelMergerNode.constructor",
      "path": "channelmergernode/channelmergernode",
      "type": "Audio"
    },
    {
      "name": "ChannelSplitterNode",
      "path": "channelsplitternode",
      "type": "Audio"
    },
    {
      "name": "ChannelSplitterNode.constructor",
      "path": "channelsplitternode/channelsplitternode",
      "type": "Audio"
    },
    { "name": "CharacterData", "path": "characterdata", "type": "Nodes" },
    {
      "name": "CharacterData.appendData",
      "path": "characterdata/appenddata",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.data",
      "path": "characterdata/data",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.deleteData",
      "path": "characterdata/deletedata",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.insertData",
      "path": "characterdata/insertdata",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.length",
      "path": "characterdata/length",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.replaceData",
      "path": "characterdata/replacedata",
      "type": "Nodes"
    },
    {
      "name": "CharacterData.substringData",
      "path": "characterdata/substringdata",
      "type": "Nodes"
    },
    { "name": "ChildNode", "path": "childnode", "type": "Nodes" },
    { "name": "ChildNode.after", "path": "childnode/after", "type": "Nodes" },
    { "name": "ChildNode.before", "path": "childnode/before", "type": "Nodes" },
    { "name": "ChildNode.remove", "path": "childnode/remove", "type": "Nodes" },
    {
      "name": "ChildNode.replaceWith",
      "path": "childnode/replacewith",
      "type": "Nodes"
    },
    { "name": "Client", "path": "client", "type": "Service Workers" },
    {
      "name": "Client.frameType",
      "path": "client/frametype",
      "type": "Service Workers"
    },
    { "name": "Client.id", "path": "client/id", "type": "Service Workers" },
    {
      "name": "Client.postMessage",
      "path": "client/postmessage",
      "type": "Service Workers"
    },
    { "name": "Client.type", "path": "client/type", "type": "Service Workers" },
    { "name": "Client.url", "path": "client/url", "type": "Service Workers" },
    { "name": "Clients", "path": "clients", "type": "Service Workers" },
    {
      "name": "Clients.claim",
      "path": "clients/claim",
      "type": "Service Workers"
    },
    { "name": "Clients.get", "path": "clients/get", "type": "Service Workers" },
    {
      "name": "Clients.matchAll",
      "path": "clients/matchall",
      "type": "Service Workers"
    },
    {
      "name": "Clients.openWindow",
      "path": "clients/openwindow",
      "type": "Service Workers"
    },
    { "name": "Clipboard", "path": "clipboard", "type": "Clipboard" },
    { "name": "Clipboard API", "path": "clipboard_api", "type": "Clipboard" },
    { "name": "Clipboard.read", "path": "clipboard/read", "type": "Clipboard" },
    {
      "name": "Clipboard.readText",
      "path": "clipboard/readtext",
      "type": "Clipboard"
    },
    {
      "name": "Clipboard.write",
      "path": "clipboard/write",
      "type": "Clipboard"
    },
    {
      "name": "Clipboard.writeText",
      "path": "clipboard/writetext",
      "type": "Clipboard"
    },
    { "name": "ClipboardEvent", "path": "clipboardevent", "type": "Clipboard" },
    {
      "name": "ClipboardEvent.clipboardData",
      "path": "clipboardevent/clipboarddata",
      "type": "Clipboard"
    },
    {
      "name": "ClipboardEvent.constructor",
      "path": "clipboardevent/clipboardevent",
      "type": "Clipboard"
    },
    { "name": "ClipboardItem", "path": "clipboarditem", "type": "Clipboard" },
    {
      "name": "ClipboardItem.constructor",
      "path": "clipboarditem/clipboarditem",
      "type": "Clipboard"
    },
    {
      "name": "ClipboardItem.getType",
      "path": "clipboarditem/gettype",
      "type": "Clipboard"
    },
    {
      "name": "ClipboardItem.presentationStyle",
      "path": "clipboarditem/presentationstyle",
      "type": "Clipboard"
    },
    {
      "name": "ClipboardItem.types",
      "path": "clipboarditem/types",
      "type": "Clipboard"
    },
    { "name": "CloseEvent", "path": "closeevent", "type": "Web Sockets" },
    {
      "name": "CloseEvent.constructor",
      "path": "closeevent/closeevent",
      "type": "Events"
    },
    {
      "name": "CloseEvent.initCloseEvent",
      "path": "closeevent/initcloseevent",
      "type": "Events"
    },
    { "name": "Comment", "path": "comment", "type": "Nodes" },
    {
      "name": "Comment.constructor",
      "path": "comment/comment",
      "type": "Nodes"
    },
    {
      "name": "CompositionEvent",
      "path": "compositionevent",
      "type": "Events"
    },
    {
      "name": "CompositionEvent.constructor",
      "path": "compositionevent/compositionevent",
      "type": "Events"
    },
    {
      "name": "CompositionEvent.data",
      "path": "compositionevent/data",
      "type": "Events"
    },
    {
      "name": "CompositionEvent.initCompositionEvent",
      "path": "compositionevent/initcompositionevent",
      "type": "Events"
    },
    {
      "name": "CompositionEvent.locale",
      "path": "compositionevent/locale",
      "type": "Events"
    },
    {
      "name": "Compression Streams API",
      "path": "compression_streams_api",
      "type": "Media Streams"
    },
    {
      "name": "CompressionStream",
      "path": "compressionstream",
      "type": "Media Streams"
    },
    {
      "name": "CompressionStream.constructor",
      "path": "compressionstream/compressionstream",
      "type": "Media Streams"
    },
    {
      "name": "CompressionStream.readable",
      "path": "compressionstream/readable",
      "type": "Media Streams"
    },
    {
      "name": "CompressionStream.writable",
      "path": "compressionstream/writable",
      "type": "Media Streams"
    },
    { "name": "Console", "path": "console", "type": "Miscellaneous" },
    { "name": "Console API", "path": "console_api", "type": "Miscellaneous" },
    { "name": "console.assert", "path": "console/assert", "type": "Console" },
    {
      "name": "Console.clear",
      "path": "console/clear",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.count",
      "path": "console/count",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.countReset",
      "path": "console/countreset",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.debug",
      "path": "console/debug",
      "type": "Miscellaneous"
    },
    { "name": "Console.dir", "path": "console/dir", "type": "Miscellaneous" },
    {
      "name": "Console.dirxml",
      "path": "console/dirxml",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.error",
      "path": "console/error",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.group",
      "path": "console/group",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.groupCollapsed",
      "path": "console/groupcollapsed",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.groupEnd",
      "path": "console/groupend",
      "type": "Miscellaneous"
    },
    { "name": "Console.info", "path": "console/info", "type": "Miscellaneous" },
    { "name": "Console.log", "path": "console/log", "type": "Miscellaneous" },
    {
      "name": "Console.profile",
      "path": "console/profile",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.profileEnd",
      "path": "console/profileend",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.table",
      "path": "console/table",
      "type": "Miscellaneous"
    },
    { "name": "Console.time", "path": "console/time", "type": "Miscellaneous" },
    {
      "name": "Console.timeEnd",
      "path": "console/timeend",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.timeLog",
      "path": "console/timelog",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.timeStamp",
      "path": "console/timestamp",
      "type": "Miscellaneous"
    },
    {
      "name": "Console.trace",
      "path": "console/trace",
      "type": "Miscellaneous"
    },
    { "name": "Console.warn", "path": "console/warn", "type": "Miscellaneous" },
    {
      "name": "ConstantSourceNode",
      "path": "constantsourcenode",
      "type": "Audio"
    },
    {
      "name": "ConstantSourceNode.constructor",
      "path": "constantsourcenode/constantsourcenode",
      "type": "Audio"
    },
    {
      "name": "ConstantSourceNode.offset",
      "path": "constantsourcenode/offset",
      "type": "Audio"
    },
    { "name": "ConstrainBoolean", "path": "constrainboolean", "type": "Media" },
    {
      "name": "ConstrainDOMString",
      "path": "constraindomstring",
      "type": "Media"
    },
    { "name": "ConstrainDouble", "path": "constraindouble", "type": "Media" },
    {
      "name": "Constraint validation",
      "path": "constraint_validation",
      "type": "Miscellaneous"
    },
    { "name": "ConstrainULong", "path": "constrainulong", "type": "Media" },
    {
      "name": "Contact Picker API",
      "path": "contact_picker_api",
      "type": "Miscellaneous"
    },
    {
      "name": "ContactsManager",
      "path": "contactsmanager",
      "type": "Miscellaneous"
    },
    {
      "name": "ContactsManager.getProperties",
      "path": "contactsmanager/getproperties",
      "type": "Miscellaneous"
    },
    {
      "name": "ContactsManager.select",
      "path": "contactsmanager/select",
      "type": "Miscellaneous"
    },
    {
      "name": "Content Index API",
      "path": "content_index_api",
      "type": "Miscellaneous"
    },
    { "name": "ContentIndex", "path": "contentindex", "type": "Miscellaneous" },
    {
      "name": "ContentIndex.add",
      "path": "contentindex/add",
      "type": "Miscellaneous"
    },
    {
      "name": "ContentIndex.delete",
      "path": "contentindex/delete",
      "type": "Miscellaneous"
    },
    {
      "name": "ContentIndex.getAll",
      "path": "contentindex/getall",
      "type": "Miscellaneous"
    },
    {
      "name": "ContentIndexEvent",
      "path": "contentindexevent",
      "type": "Events"
    },
    {
      "name": "ContentIndexEvent.constructor",
      "path": "contentindexevent/contentindexevent",
      "type": "Events"
    },
    {
      "name": "ContentIndexEvent.id",
      "path": "contentindexevent/id",
      "type": "Events"
    },
    { "name": "ConvolverNode", "path": "convolvernode", "type": "Audio" },
    {
      "name": "ConvolverNode.buffer",
      "path": "convolvernode/buffer",
      "type": "Audio"
    },
    {
      "name": "ConvolverNode.constructor",
      "path": "convolvernode/convolvernode",
      "type": "Audio"
    },
    {
      "name": "ConvolverNode.normalize",
      "path": "convolvernode/normalize",
      "type": "Audio"
    },
    {
      "name": "Cookie Store API",
      "path": "cookie_store_api",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieChangeEvent",
      "path": "cookiechangeevent",
      "type": "Events"
    },
    {
      "name": "CookieChangeEvent.changed",
      "path": "cookiechangeevent/changed",
      "type": "Events"
    },
    {
      "name": "CookieChangeEvent.constructor",
      "path": "cookiechangeevent/cookiechangeevent",
      "type": "Events"
    },
    {
      "name": "CookieChangeEvent.deleted",
      "path": "cookiechangeevent/deleted",
      "type": "Events"
    },
    { "name": "CookieStore", "path": "cookiestore", "type": "Miscellaneous" },
    {
      "name": "CookieStore.delete",
      "path": "cookiestore/delete",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStore.get",
      "path": "cookiestore/get",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStore.getAll",
      "path": "cookiestore/getall",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStore.onchange",
      "path": "cookiestore/onchange",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStore.set",
      "path": "cookiestore/set",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStoreManager",
      "path": "cookiestoremanager",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStoreManager.getSubscriptions",
      "path": "cookiestoremanager/getsubscriptions",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStoreManager.subscribe",
      "path": "cookiestoremanager/subscribe",
      "type": "Miscellaneous"
    },
    {
      "name": "CookieStoreManager.unsubscribe",
      "path": "cookiestoremanager/unsubscribe",
      "type": "Miscellaneous"
    },
    {
      "name": "CountQueuingStrategy",
      "path": "countqueuingstrategy",
      "type": "Media Streams"
    },
    {
      "name": "CountQueuingStrategy.constructor",
      "path": "countqueuingstrategy/countqueuingstrategy",
      "type": "Media Streams"
    },
    {
      "name": "CountQueuingStrategy.size",
      "path": "countqueuingstrategy/size",
      "type": "Media Streams"
    },
    {
      "name": "CrashReportBody",
      "path": "crashreportbody",
      "type": "Miscellaneous"
    },
    {
      "name": "Credential",
      "path": "credential",
      "type": "Credential Management"
    },
    {
      "name": "Credential Management API",
      "path": "credential_management_api",
      "type": "Credential Management"
    },
    {
      "name": "Credential.id",
      "path": "credential/id",
      "type": "Credential Management"
    },
    {
      "name": "Credential.type",
      "path": "credential/type",
      "type": "Credential Management"
    },
    {
      "name": "CredentialsContainer",
      "path": "credentialscontainer",
      "type": "Credential Management"
    },
    {
      "name": "CredentialsContainer.create",
      "path": "credentialscontainer/create",
      "type": "Credential Management"
    },
    {
      "name": "CredentialsContainer.get",
      "path": "credentialscontainer/get",
      "type": "Credential Management"
    },
    {
      "name": "CredentialsContainer.preventSilentAccess",
      "path": "credentialscontainer/preventsilentaccess",
      "type": "Credential Management"
    },
    {
      "name": "CredentialsContainer.store",
      "path": "credentialscontainer/store",
      "type": "Credential Management"
    },
    { "name": "Crypto", "path": "crypto", "type": "Cryptography" },
    {
      "name": "Crypto.getRandomValues",
      "path": "crypto/getrandomvalues",
      "type": "Cryptography"
    },
    {
      "name": "Crypto.subtle",
      "path": "crypto/subtle",
      "type": "Cryptography"
    },
    { "name": "CryptoKey", "path": "cryptokey", "type": "Cryptography" },
    {
      "name": "CryptoKeyPair",
      "path": "cryptokeypair",
      "type": "Cryptography"
    },
    { "name": "CSS", "path": "css", "type": "CSS" },
    {
      "name": "CSS Counter Styles",
      "path": "css_counter_styles",
      "type": "CSS"
    },
    {
      "name": "CSS Declaration",
      "path": "css_object_model/css_declaration",
      "type": "CSS"
    },
    {
      "name": "CSS Declaration Block",
      "path": "css_object_model/css_declaration_block",
      "type": "CSS"
    },
    {
      "name": "CSS Font Loading API",
      "path": "css_font_loading_api",
      "type": "CSS"
    },
    { "name": "CSS Object Model", "path": "css_object_model", "type": "CSS" },
    { "name": "CSS Painting API", "path": "css_painting_api", "type": "CSS" },
    {
      "name": "CSS Painting API: Guide",
      "path": "css_painting_api/guide",
      "type": "CSS"
    },
    {
      "name": "CSS Properties and Values API",
      "path": "css_properties_and_values_api",
      "type": "CSS"
    },
    {
      "name": "CSS Properties and Values API: guide",
      "path": "css_properties_and_values_api/guide",
      "type": "CSS"
    },
    { "name": "CSS Typed OM API", "path": "css_typed_om_api", "type": "CSS" },
    {
      "name": "CSS Typed OM API: Guide",
      "path": "css_typed_om_api/guide",
      "type": "CSS"
    },
    { "name": "CSS.escape", "path": "css/escape", "type": "CSS" },
    {
      "name": "CSS.factory functions",
      "path": "css/factory_functions",
      "type": "CSS"
    },
    { "name": "CSS.paintWorklet", "path": "css/paintworklet", "type": "CSS" },
    {
      "name": "CSS.RegisterProperty",
      "path": "css/registerproperty",
      "type": "CSS"
    },
    { "name": "CSS.supports", "path": "css/supports", "type": "CSS" },
    { "name": "CSSAnimation", "path": "cssanimation", "type": "CSS" },
    {
      "name": "CSSAnimation.animationName",
      "path": "cssanimation/animationname",
      "type": "CSS"
    },
    { "name": "CSSConditionRule", "path": "cssconditionrule", "type": "CSS" },
    {
      "name": "CSSConditionRule.conditionText",
      "path": "cssconditionrule/conditiontext",
      "type": "CSS"
    },
    {
      "name": "CSSCounterStyleRule",
      "path": "csscounterstylerule",
      "type": "CSS"
    },
    { "name": "CSSFontFaceRule", "path": "cssfontfacerule", "type": "CSS" },
    {
      "name": "CSSFontFaceRule.style",
      "path": "cssfontfacerule/style",
      "type": "CSS"
    },
    { "name": "CSSGroupingRule", "path": "cssgroupingrule", "type": "CSS" },
    {
      "name": "CSSGroupingRule.cssRules",
      "path": "cssgroupingrule/cssrules",
      "type": "CSS"
    },
    {
      "name": "CSSGroupingRule.deleteRule",
      "path": "cssgroupingrule/deleterule",
      "type": "CSS"
    },
    {
      "name": "CSSGroupingRule.insertRule",
      "path": "cssgroupingrule/insertrule",
      "type": "CSS"
    },
    { "name": "CSSImageValue", "path": "cssimagevalue", "type": "CSS" },
    { "name": "CSSImportRule", "path": "cssimportrule", "type": "CSS" },
    {
      "name": "CSSImportRule.href",
      "path": "cssimportrule/href",
      "type": "CSS"
    },
    {
      "name": "CSSImportRule.media",
      "path": "cssimportrule/media",
      "type": "CSS"
    },
    {
      "name": "CSSImportRule.stylesheet",
      "path": "cssimportrule/stylesheet",
      "type": "CSS"
    },
    { "name": "CSSKeyframeRule", "path": "csskeyframerule", "type": "CSS" },
    {
      "name": "CSSKeyframeRule.keyText",
      "path": "csskeyframerule/keytext",
      "type": "CSS"
    },
    {
      "name": "CSSkeyframeRule.style",
      "path": "csskeyframerule/style",
      "type": "CSS"
    },
    { "name": "CSSKeyframesRule", "path": "csskeyframesrule", "type": "CSS" },
    {
      "name": "CSSKeyframesRule.appendRule",
      "path": "csskeyframesrule/appendrule",
      "type": "CSS"
    },
    {
      "name": "CSSKeyframesRule.cssRules",
      "path": "csskeyframesrule/cssrules",
      "type": "CSS"
    },
    {
      "name": "CSSKeyframesRule.deleteRule",
      "path": "csskeyframesrule/deleterule",
      "type": "CSS"
    },
    {
      "name": "CSSKeyframesRule.findRule",
      "path": "csskeyframesrule/findrule",
      "type": "CSS"
    },
    {
      "name": "CSSKeyframesRule.name",
      "path": "csskeyframesrule/name",
      "type": "CSS"
    },
    { "name": "CSSKeywordValue", "path": "csskeywordvalue", "type": "CSS" },
    {
      "name": "CSSKeywordValue.constructor",
      "path": "csskeywordvalue/csskeywordvalue",
      "type": "CSS"
    },
    {
      "name": "CSSKeywordValue.value",
      "path": "csskeywordvalue/value",
      "type": "CSS"
    },
    { "name": "CSSMathInvert", "path": "cssmathinvert", "type": "CSS" },
    {
      "name": "CSSMathInvert.constructor",
      "path": "cssmathinvert/cssmathinvert",
      "type": "CSS"
    },
    {
      "name": "CSSMathInvert.value",
      "path": "cssmathinvert/value",
      "type": "CSS"
    },
    { "name": "CSSMathMax", "path": "cssmathmax", "type": "CSS" },
    {
      "name": "CSSMathMax.constructor",
      "path": "cssmathmax/cssmathmax",
      "type": "CSS"
    },
    { "name": "CSSMathMax.values", "path": "cssmathmax/values", "type": "CSS" },
    { "name": "CSSMathMin", "path": "cssmathmin", "type": "CSS" },
    {
      "name": "CSSMathMin.constructor",
      "path": "cssmathmin/cssmathmin",
      "type": "CSS"
    },
    { "name": "CSSMathMin.values", "path": "cssmathmin/values", "type": "CSS" },
    { "name": "CSSMathNegate", "path": "cssmathnegate", "type": "CSS" },
    {
      "name": "CSSMathNegate.constructor",
      "path": "cssmathnegate/cssmathnegate",
      "type": "CSS"
    },
    {
      "name": "CSSMathNegate.value",
      "path": "cssmathnegate/value",
      "type": "CSS"
    },
    { "name": "CSSMathProduct", "path": "cssmathproduct", "type": "CSS" },
    {
      "name": "CSSMathProduct.constructor",
      "path": "cssmathproduct/cssmathproduct",
      "type": "CSS"
    },
    {
      "name": "CSSMathProduct.values",
      "path": "cssmathproduct/values",
      "type": "CSS"
    },
    { "name": "CSSMathSum", "path": "cssmathsum", "type": "CSS" },
    {
      "name": "CSSMathSum.constructor",
      "path": "cssmathsum/cssmathsum",
      "type": "CSS"
    },
    { "name": "CSSMathSum.values", "path": "cssmathsum/values", "type": "CSS" },
    { "name": "CSSMathValue", "path": "cssmathvalue", "type": "CSS" },
    {
      "name": "CSSMathValue.operator",
      "path": "cssmathvalue/operator",
      "type": "CSS"
    },
    {
      "name": "CSSMatrixComponent",
      "path": "cssmatrixcomponent",
      "type": "CSS"
    },
    {
      "name": "CSSMatrixComponent.constructor",
      "path": "cssmatrixcomponent/cssmatrixcomponent",
      "type": "CSS"
    },
    {
      "name": "CSSMatrixComponent.matrix",
      "path": "cssmatrixcomponent/matrix",
      "type": "CSS"
    },
    { "name": "CSSMediaRule", "path": "cssmediarule", "type": "CSS" },
    {
      "name": "CSSMediaRule.media",
      "path": "cssmediarule/media",
      "type": "CSS"
    },
    { "name": "CSSNamespaceRule", "path": "cssnamespacerule", "type": "CSS" },
    {
      "name": "CSSNamespaceRule.namespaceURI",
      "path": "cssnamespacerule/namespaceuri",
      "type": "CSS"
    },
    {
      "name": "CSSNamespaceRule.prefix",
      "path": "cssnamespacerule/prefix",
      "type": "CSS"
    },
    { "name": "CSSNumericArray", "path": "cssnumericarray", "type": "CSS" },
    {
      "name": "CSSNumericArray.length",
      "path": "cssnumericarray/length",
      "type": "CSS"
    },
    { "name": "CSSNumericValue", "path": "cssnumericvalue", "type": "CSS" },
    {
      "name": "CSSNumericValue.add",
      "path": "cssnumericvalue/add",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.div",
      "path": "cssnumericvalue/div",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.equals",
      "path": "cssnumericvalue/equals",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.max",
      "path": "cssnumericvalue/max",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.min",
      "path": "cssnumericvalue/min",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.mul",
      "path": "cssnumericvalue/mul",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.parse",
      "path": "cssnumericvalue/parse",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.sub",
      "path": "cssnumericvalue/sub",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.sum",
      "path": "cssnumericvalue/sum",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.to",
      "path": "cssnumericvalue/to",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.toSum",
      "path": "cssnumericvalue/tosum",
      "type": "CSS"
    },
    {
      "name": "CSSNumericValue.type",
      "path": "cssnumericvalue/type",
      "type": "CSS"
    },
    { "name": "CSSOMString", "path": "cssomstring", "type": "CSS" },
    { "name": "CSSPageRule", "path": "csspagerule", "type": "CSS" },
    {
      "name": "CSSPageRule.selectorText",
      "path": "csspagerule/selectortext",
      "type": "CSS"
    },
    { "name": "CSSPageRule.style", "path": "csspagerule/style", "type": "CSS" },
    { "name": "CSSPerspective", "path": "cssperspective", "type": "CSS" },
    {
      "name": "CSSPerspective.constructor",
      "path": "cssperspective/cssperspective",
      "type": "CSS"
    },
    {
      "name": "CSSPerspective.length",
      "path": "cssperspective/length",
      "type": "CSS"
    },
    { "name": "CSSPositionValue", "path": "csspositionvalue", "type": "CSS" },
    {
      "name": "CSSPositionValue.constructor",
      "path": "csspositionvalue/csspositionvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPositionValue.x",
      "path": "csspositionvalue/x",
      "type": "CSS"
    },
    {
      "name": "CSSPositionValue.y",
      "path": "csspositionvalue/y",
      "type": "CSS"
    },
    { "name": "CSSPrimitiveValue", "path": "cssprimitivevalue", "type": "CSS" },
    {
      "name": "CSSPrimitiveValue.getCounterValue",
      "path": "cssprimitivevalue/getcountervalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.getFloatValue",
      "path": "cssprimitivevalue/getfloatvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.getRectValue",
      "path": "cssprimitivevalue/getrectvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.getRGBColorValue",
      "path": "cssprimitivevalue/getrgbcolorvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.getStringValue",
      "path": "cssprimitivevalue/getstringvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.primitiveType",
      "path": "cssprimitivevalue/primitivetype",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.setFloatValue",
      "path": "cssprimitivevalue/setfloatvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPrimitiveValue.setStringValue",
      "path": "cssprimitivevalue/setstringvalue",
      "type": "CSS"
    },
    { "name": "CSSPropertyRule", "path": "csspropertyrule", "type": "CSS" },
    {
      "name": "CSSPropertyRule.inherits",
      "path": "csspropertyrule/inherits",
      "type": "CSS"
    },
    {
      "name": "CSSPropertyRule.initialvalue",
      "path": "csspropertyrule/initialvalue",
      "type": "CSS"
    },
    {
      "name": "CSSPropertyRule.name",
      "path": "csspropertyrule/name",
      "type": "CSS"
    },
    {
      "name": "CSSPropertyRule.syntax",
      "path": "csspropertyrule/syntax",
      "type": "CSS"
    },
    { "name": "CSSPseudoElement", "path": "csspseudoelement", "type": "CSS" },
    {
      "name": "CSSPseudoElement.element",
      "path": "csspseudoelement/element",
      "type": "CSS"
    },
    {
      "name": "CSSPseudoElement.type",
      "path": "csspseudoelement/type",
      "type": "CSS"
    },
    { "name": "CSSRotate", "path": "cssrotate", "type": "CSS" },
    { "name": "CSSRotate.angle", "path": "cssrotate/angle", "type": "CSS" },
    {
      "name": "CSSRotate.constructor",
      "path": "cssrotate/cssrotate",
      "type": "CSS"
    },
    { "name": "CSSRotate.x", "path": "cssrotate/x", "type": "CSS" },
    { "name": "CSSRotate.y", "path": "cssrotate/y", "type": "CSS" },
    { "name": "CSSRotate.z", "path": "cssrotate/z", "type": "CSS" },
    { "name": "CSSRule", "path": "cssrule", "type": "CSS" },
    { "name": "CSSRule.cssText", "path": "cssrule/csstext", "type": "CSS" },
    {
      "name": "CSSRule.parentRule",
      "path": "cssrule/parentrule",
      "type": "CSS"
    },
    {
      "name": "CSSRule.parentStyleSheet",
      "path": "cssrule/parentstylesheet",
      "type": "CSS"
    },
    { "name": "CSSRule.type", "path": "cssrule/type", "type": "CSS" },
    { "name": "CSSRuleList", "path": "cssrulelist", "type": "CSS" },
    { "name": "CSSScale", "path": "cssscale", "type": "CSS" },
    {
      "name": "CSSScale.constructor",
      "path": "cssscale/cssscale",
      "type": "CSS"
    },
    { "name": "CSSScale.x", "path": "cssscale/x", "type": "CSS" },
    { "name": "CSSScale.y", "path": "cssscale/y", "type": "CSS" },
    { "name": "CSSScale.z", "path": "cssscale/z", "type": "CSS" },
    { "name": "CSSSkew", "path": "cssskew", "type": "CSS" },
    { "name": "CSSSkew.ax", "path": "cssskew/ax", "type": "CSS" },
    { "name": "CSSSkew.ay", "path": "cssskew/ay", "type": "CSS" },
    { "name": "CSSSkew.constructor", "path": "cssskew/cssskew", "type": "CSS" },
    { "name": "CSSSkewX", "path": "cssskewx", "type": "CSS" },
    { "name": "CSSSkewX.ax", "path": "cssskewx/ax", "type": "CSS" },
    {
      "name": "CSSSkewX.constructor",
      "path": "cssskewx/cssskewx",
      "type": "CSS"
    },
    { "name": "CSSSkewY", "path": "cssskewy", "type": "CSS" },
    { "name": "CSSSkewY.ay", "path": "cssskewy/ay", "type": "CSS" },
    {
      "name": "CSSSkewY.constructor",
      "path": "cssskewy/cssskewy",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration",
      "path": "cssstyledeclaration",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.cssFloat",
      "path": "cssstyledeclaration/cssfloat",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.cssText",
      "path": "cssstyledeclaration/csstext",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.getPropertyCSSValue",
      "path": "cssstyledeclaration/getpropertycssvalue",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.getPropertyPriority",
      "path": "cssstyledeclaration/getpropertypriority",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.getPropertyValue",
      "path": "cssstyledeclaration/getpropertyvalue",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.item",
      "path": "cssstyledeclaration/item",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.length",
      "path": "cssstyledeclaration/length",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.parentRule",
      "path": "cssstyledeclaration/parentrule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.removeProperty",
      "path": "cssstyledeclaration/removeproperty",
      "type": "CSS"
    },
    {
      "name": "CSSStyleDeclaration.setProperty",
      "path": "cssstyledeclaration/setproperty",
      "type": "CSS"
    },
    { "name": "CSSStyleRule", "path": "cssstylerule", "type": "CSS" },
    {
      "name": "CSSStyleRule.selectorText",
      "path": "cssstylerule/selectortext",
      "type": "CSS"
    },
    {
      "name": "CSSStyleRule.style",
      "path": "cssstylerule/style",
      "type": "CSS"
    },
    {
      "name": "CSSStyleRule.styleMap",
      "path": "cssstylerule/stylemap",
      "type": "CSS"
    },
    { "name": "CSSStyleSheet", "path": "cssstylesheet", "type": "CSS" },
    {
      "name": "CSSStyleSheet.addRule",
      "path": "cssstylesheet/addrule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.cssRules",
      "path": "cssstylesheet/cssrules",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.deleteRule",
      "path": "cssstylesheet/deleterule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.insertRule",
      "path": "cssstylesheet/insertrule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.ownerRule",
      "path": "cssstylesheet/ownerrule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.removeRule",
      "path": "cssstylesheet/removerule",
      "type": "CSS"
    },
    {
      "name": "CSSStyleSheet.rules",
      "path": "cssstylesheet/rules",
      "type": "CSS"
    },
    { "name": "CSSStyleValue", "path": "cssstylevalue", "type": "CSS" },
    {
      "name": "CSSStyleValue.parse",
      "path": "cssstylevalue/parse",
      "type": "CSS"
    },
    {
      "name": "CSSStyleValue.parseAll",
      "path": "cssstylevalue/parseall",
      "type": "CSS"
    },
    { "name": "CSSSupportsRule", "path": "csssupportsrule", "type": "CSS" },
    {
      "name": "CSSTransformComponent",
      "path": "csstransformcomponent",
      "type": "CSS"
    },
    {
      "name": "CSSTransformComponent.is2D",
      "path": "csstransformcomponent/is2d",
      "type": "CSS"
    },
    {
      "name": "CSSTransformComponent.toMatrix",
      "path": "csstransformcomponent/tomatrix",
      "type": "CSS"
    },
    {
      "name": "CSSTransformComponent.toString",
      "path": "csstransformcomponent/tostring",
      "type": "CSS"
    },
    { "name": "CSSTransformValue", "path": "csstransformvalue", "type": "CSS" },
    {
      "name": "CSSTransformValue.constructor",
      "path": "csstransformvalue/csstransformvalue",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.entries",
      "path": "csstransformvalue/entries",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.forEach",
      "path": "csstransformvalue/foreach",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.is2D",
      "path": "csstransformvalue/is2d",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.keys",
      "path": "csstransformvalue/keys",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.length",
      "path": "csstransformvalue/length",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.toMatrix",
      "path": "csstransformvalue/tomatrix",
      "type": "CSS"
    },
    {
      "name": "CSSTransformValue.values",
      "path": "csstransformvalue/values",
      "type": "CSS"
    },
    { "name": "CSSTransition", "path": "csstransition", "type": "CSS" },
    {
      "name": "CSSTransition.transitionProperty",
      "path": "csstransition/transitionproperty",
      "type": "CSS"
    },
    { "name": "CSSTranslate", "path": "csstranslate", "type": "CSS" },
    {
      "name": "CSSTranslate.constructor",
      "path": "csstranslate/csstranslate",
      "type": "CSS"
    },
    { "name": "CSSTranslate.x", "path": "csstranslate/x", "type": "CSS" },
    { "name": "CSSTranslate.y", "path": "csstranslate/y", "type": "CSS" },
    { "name": "CSSTranslate.z", "path": "csstranslate/z", "type": "CSS" },
    { "name": "CSSUnitValue", "path": "cssunitvalue", "type": "CSS" },
    {
      "name": "CSSUnitValue.constructor",
      "path": "cssunitvalue/cssunitvalue",
      "type": "CSS"
    },
    { "name": "CSSUnitValue.unit", "path": "cssunitvalue/unit", "type": "CSS" },
    {
      "name": "CSSUnitValue.value",
      "path": "cssunitvalue/value",
      "type": "CSS"
    },
    { "name": "CSSUnparsedValue", "path": "cssunparsedvalue", "type": "CSS" },
    {
      "name": "CSSUnparsedValue.constructor",
      "path": "cssunparsedvalue/cssunparsedvalue",
      "type": "CSS"
    },
    {
      "name": "CSSUnparsedValue.entries",
      "path": "cssunparsedvalue/entries",
      "type": "CSS"
    },
    {
      "name": "CSSUnparsedValue.forEach",
      "path": "cssunparsedvalue/foreach",
      "type": "CSS"
    },
    {
      "name": "CSSUnparsedValue.keys",
      "path": "cssunparsedvalue/keys",
      "type": "CSS"
    },
    {
      "name": "CSSUnparsedValue.length",
      "path": "cssunparsedvalue/length",
      "type": "CSS"
    },
    {
      "name": "CSSUnparsedValue.values",
      "path": "cssunparsedvalue/values",
      "type": "CSS"
    },
    { "name": "CSSValue", "path": "cssvalue", "type": "CSS" },
    { "name": "CSSValue.cssText", "path": "cssvalue/csstext", "type": "CSS" },
    {
      "name": "CSSValue.cssValueType",
      "path": "cssvalue/cssvaluetype",
      "type": "CSS"
    },
    { "name": "CSSValueList", "path": "cssvaluelist", "type": "CSS" },
    { "name": "CSSValueList.item", "path": "cssvaluelist/item", "type": "CSS" },
    {
      "name": "CSSValueList.length",
      "path": "cssvaluelist/length",
      "type": "CSS"
    },
    {
      "name": "CSSVariableReferenceValue",
      "path": "cssvariablereferencevalue",
      "type": "CSS"
    },
    {
      "name": "CSSVariableReferenceValue.constructor",
      "path": "cssvariablereferencevalue/cssvariablereferencevalue",
      "type": "CSS"
    },
    {
      "name": "CSSVariableReferenceValue.fallback",
      "path": "cssvariablereferencevalue/fallback",
      "type": "CSS"
    },
    {
      "name": "CSSVariableReferenceValue.variable",
      "path": "cssvariablereferencevalue/variable",
      "type": "CSS"
    },
    {
      "name": "CustomElementRegistry",
      "path": "customelementregistry",
      "type": "Custom Elements"
    },
    {
      "name": "CustomElementRegistry.define",
      "path": "customelementregistry/define",
      "type": "Custom Elements"
    },
    {
      "name": "CustomElementRegistry.get",
      "path": "customelementregistry/get",
      "type": "Custom Elements"
    },
    {
      "name": "CustomElementRegistry.upgrade",
      "path": "customelementregistry/upgrade",
      "type": "Custom Elements"
    },
    {
      "name": "CustomElementRegistry.whenDefined",
      "path": "customelementregistry/whendefined",
      "type": "Custom Elements"
    },
    { "name": "CustomEvent", "path": "customevent", "type": "Events" },
    {
      "name": "CustomEvent.constructor",
      "path": "customevent/customevent",
      "type": "Events"
    },
    {
      "name": "CustomEvent.detail",
      "path": "customevent/detail",
      "type": "Events"
    },
    {
      "name": "CustomEvent.initCustomEvent",
      "path": "customevent/initcustomevent",
      "type": "Events"
    },
    { "name": "DataTransfer", "path": "datatransfer", "type": "Drag & Drop" },
    {
      "name": "DataTransfer.addElement",
      "path": "datatransfer/addelement",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.clearData",
      "path": "datatransfer/cleardata",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.constructor",
      "path": "datatransfer/datatransfer",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.dropEffect",
      "path": "datatransfer/dropeffect",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.effectAllowed",
      "path": "datatransfer/effectallowed",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.files",
      "path": "datatransfer/files",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.getData",
      "path": "datatransfer/getdata",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.items",
      "path": "datatransfer/items",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozClearDataAt",
      "path": "datatransfer/mozcleardataat",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozCursor",
      "path": "datatransfer/mozcursor",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozGetDataAt",
      "path": "datatransfer/mozgetdataat",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozItemCount",
      "path": "datatransfer/mozitemcount",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozSetDataAt",
      "path": "datatransfer/mozsetdataat",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozSourceNode",
      "path": "datatransfer/mozsourcenode",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozTypesAt",
      "path": "datatransfer/moztypesat",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.mozUserCancelled",
      "path": "datatransfer/mozusercancelled",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.setData",
      "path": "datatransfer/setdata",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.setDragImage",
      "path": "datatransfer/setdragimage",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransfer.types",
      "path": "datatransfer/types",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem",
      "path": "datatransferitem",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.getAsFile",
      "path": "datatransferitem/getasfile",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.getAsFileSystemHandle",
      "path": "datatransferitem/getasfilesystemhandle",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.getAsString",
      "path": "datatransferitem/getasstring",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.kind",
      "path": "datatransferitem/kind",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.type",
      "path": "datatransferitem/type",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItem.webkitGetAsEntry",
      "path": "datatransferitem/webkitgetasentry",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList",
      "path": "datatransferitemlist",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList.add",
      "path": "datatransferitemlist/add",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList.clear",
      "path": "datatransferitemlist/clear",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList.DataTransferItem",
      "path": "datatransferitemlist/datatransferitem",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList.length",
      "path": "datatransferitemlist/length",
      "type": "Drag & Drop"
    },
    {
      "name": "DataTransferItemList.remove",
      "path": "datatransferitemlist/remove",
      "type": "Drag & Drop"
    },
    {
      "name": "DecompressionStream",
      "path": "decompressionstream",
      "type": "Media Streams"
    },
    {
      "name": "DecompressionStream.constructor",
      "path": "decompressionstream/decompressionstream",
      "type": "Media Streams"
    },
    {
      "name": "DecompressionStream.readable",
      "path": "decompressionstream/readable",
      "type": "Media Streams"
    },
    {
      "name": "DecompressionStream.writable",
      "path": "decompressionstream/writable",
      "type": "Media Streams"
    },
    {
      "name": "DedicatedWorkerGlobalScope",
      "path": "dedicatedworkerglobalscope",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.close",
      "path": "dedicatedworkerglobalscope/close",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.message event",
      "path": "dedicatedworkerglobalscope/message_event",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.messageerror event",
      "path": "dedicatedworkerglobalscope/messageerror_event",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.name",
      "path": "dedicatedworkerglobalscope/name",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.onmessage",
      "path": "dedicatedworkerglobalscope/onmessage",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.onmessageerror",
      "path": "dedicatedworkerglobalscope/onmessageerror",
      "type": "Web Workers"
    },
    {
      "name": "DedicatedWorkerGlobalScope.postMessage",
      "path": "dedicatedworkerglobalscope/postmessage",
      "type": "Web Workers"
    },
    { "name": "DelayNode", "path": "delaynode", "type": "Audio" },
    {
      "name": "DelayNode.constructor",
      "path": "delaynode/delaynode",
      "type": "Audio"
    },
    {
      "name": "DelayNode.delayTime",
      "path": "delaynode/delaytime",
      "type": "Audio"
    },
    {
      "name": "DeprecationReportBody",
      "path": "deprecationreportbody",
      "type": "Miscellaneous"
    },
    {
      "name": "Determining the dimensions of elements",
      "path": "css_object_model/determining_the_dimensions_of_elements",
      "type": "Miscellaneous"
    },
    {
      "name": "Device Memory API",
      "path": "device_memory_api",
      "type": "Miscellaneous"
    },
    {
      "name": "DeviceLightEvent",
      "path": "devicelightevent",
      "type": "Ambient Light"
    },
    {
      "name": "DeviceLightEvent.Using light sensors",
      "path": "devicelightevent/using_light_sensors",
      "type": "Ambient Light"
    },
    {
      "name": "DeviceMotionEvent",
      "path": "devicemotionevent",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEvent.acceleration",
      "path": "devicemotionevent/acceleration",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEvent.accelerationIncludingGravity",
      "path": "devicemotionevent/accelerationincludinggravity",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEvent.constructor",
      "path": "devicemotionevent/devicemotionevent",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEvent.interval",
      "path": "devicemotionevent/interval",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEvent.rotationRate",
      "path": "devicemotionevent/rotationrate",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventAcceleration",
      "path": "devicemotioneventacceleration",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventAcceleration.x",
      "path": "devicemotioneventacceleration/x",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventAcceleration.y",
      "path": "devicemotioneventacceleration/y",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventAcceleration.z",
      "path": "devicemotioneventacceleration/z",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventRotationRate",
      "path": "devicemotioneventrotationrate",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventRotationRate.alpha",
      "path": "devicemotioneventrotationrate/alpha",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventRotationRate.beta",
      "path": "devicemotioneventrotationrate/beta",
      "type": "Events"
    },
    {
      "name": "DeviceMotionEventRotationRate.gamma",
      "path": "devicemotioneventrotationrate/gamma",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent",
      "path": "deviceorientationevent",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent.absolute",
      "path": "deviceorientationevent/absolute",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent.alpha",
      "path": "deviceorientationevent/alpha",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent.beta",
      "path": "deviceorientationevent/beta",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent.constructor",
      "path": "deviceorientationevent/deviceorientationevent",
      "type": "Events"
    },
    {
      "name": "DeviceOrientationEvent.gamma",
      "path": "deviceorientationevent/gamma",
      "type": "Events"
    },
    {
      "name": "DeviceProximityEvent",
      "path": "deviceproximityevent",
      "type": "Events"
    },
    {
      "name": "DirectoryEntrySync",
      "path": "directoryentrysync",
      "type": "File"
    },
    {
      "name": "DirectoryReaderSync",
      "path": "directoryreadersync",
      "type": "File"
    },
    {
      "name": "DisplayMediaStreamConstraints",
      "path": "displaymediastreamconstraints",
      "type": "Media Streams"
    },
    {
      "name": "DisplayMediaStreamConstraints.audio",
      "path": "displaymediastreamconstraints/audio",
      "type": "Media Streams"
    },
    {
      "name": "DisplayMediaStreamConstraints.video",
      "path": "displaymediastreamconstraints/video",
      "type": "Media Streams"
    },
    { "name": "Document", "path": "document", "type": "CSS" },
    {
      "name": "Document Object Model",
      "path": "document_object_model",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Examples",
      "path": "document_object_model/examples",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: How to create a DOM tree",
      "path": "document_object_model/how_to_create_a_dom_tree",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Introduction",
      "path": "document_object_model/introduction",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Locating DOM elements using selectors",
      "path": "document_object_model/locating_dom_elements_using_selectors",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Traversing an HTML table with JavaScript and DOM Interfaces",
      "path": "document_object_model/traversing_an_html_table_with_javascript_and_dom_interfaces",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Using the W3C DOM Level 1 Core",
      "path": "document_object_model/using_the_w3c_dom_level_1_core",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Using the W3C DOM Level 1 Core.Example",
      "path": "document_object_model/using_the_w3c_dom_level_1_core/example",
      "type": "DOM"
    },
    {
      "name": "Document Object Model: Whitespace",
      "path": "document_object_model/whitespace",
      "type": "DOM"
    },
    {
      "name": "Document.activeElement",
      "path": "document/activeelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.adoptNode",
      "path": "document/adoptnode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.alinkColor",
      "path": "document/alinkcolor",
      "type": "Miscellaneous"
    },
    { "name": "Document.all", "path": "document/all", "type": "Miscellaneous" },
    {
      "name": "Document.anchors",
      "path": "document/anchors",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.animationcancel event",
      "path": "document/animationcancel_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.animationend event",
      "path": "document/animationend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.animationiteration event",
      "path": "document/animationiteration_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.animationstart event",
      "path": "document/animationstart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.append",
      "path": "document/append",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.applets",
      "path": "document/applets",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.bgColor",
      "path": "document/bgcolor",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.body",
      "path": "document/body",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.caretPositionFromPoint",
      "path": "document/caretpositionfrompoint",
      "type": "CSS"
    },
    {
      "name": "Document.caretRangeFromPoint",
      "path": "document/caretrangefrompoint",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.characterSet",
      "path": "document/characterset",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.childElementCount",
      "path": "document/childelementcount",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.children",
      "path": "document/children",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.clear",
      "path": "document/clear",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.close",
      "path": "document/close",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.compatMode",
      "path": "document/compatmode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.constructor",
      "path": "document/document",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.contentType",
      "path": "document/contenttype",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.cookie",
      "path": "document/cookie",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.copy event",
      "path": "document/copy_event",
      "type": "Clipboard"
    },
    {
      "name": "Document.createAttribute",
      "path": "document/createattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createCDATASection",
      "path": "document/createcdatasection",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createComment",
      "path": "document/createcomment",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createDocumentFragment",
      "path": "document/createdocumentfragment",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createElement",
      "path": "document/createelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createElementNS",
      "path": "document/createelementns",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createEntityReference",
      "path": "document/createentityreference",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createEvent",
      "path": "document/createevent",
      "type": "Events"
    },
    {
      "name": "Document.createExpression",
      "path": "document/createexpression",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createNodeIterator",
      "path": "document/createnodeiterator",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createNSResolver",
      "path": "document/creatensresolver",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createProcessingInstruction",
      "path": "document/createprocessinginstruction",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createRange",
      "path": "document/createrange",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createTextNode",
      "path": "document/createtextnode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.createTouch",
      "path": "document/createtouch",
      "type": "Touch Events"
    },
    {
      "name": "Document.createTouchList",
      "path": "document/createtouchlist",
      "type": "Touch Events"
    },
    {
      "name": "Document.createTreeWalker",
      "path": "document/createtreewalker",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.currentScript",
      "path": "document/currentscript",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.cut event",
      "path": "document/cut_event",
      "type": "Clipboard"
    },
    {
      "name": "Document.defaultView",
      "path": "document/defaultview",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.designMode",
      "path": "document/designmode",
      "type": "Miscellaneous"
    },
    { "name": "Document.dir", "path": "document/dir", "type": "Miscellaneous" },
    {
      "name": "Document.doctype",
      "path": "document/doctype",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.documentElement",
      "path": "document/documentelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.documentURI",
      "path": "document/documenturi",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.documentURIObject",
      "path": "document/documenturiobject",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.domain",
      "path": "document/domain",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.DOMContentLoaded event",
      "path": "document/domcontentloaded_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.drag event",
      "path": "document/drag_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.dragend event",
      "path": "document/dragend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.dragenter event",
      "path": "document/dragenter_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.dragleave event",
      "path": "document/dragleave_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.dragover event",
      "path": "document/dragover_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.dragstart event",
      "path": "document/dragstart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.drop event",
      "path": "document/drop_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.elementFromPoint",
      "path": "document/elementfrompoint",
      "type": "CSS"
    },
    {
      "name": "Document.elementsFromPoint",
      "path": "document/elementsfrompoint",
      "type": "CSS"
    },
    {
      "name": "Document.embeds",
      "path": "document/embeds",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.enableStyleSheetsForSet",
      "path": "document/enablestylesheetsforset",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.evaluate",
      "path": "document/evaluate",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.execCommand",
      "path": "document/execcommand",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.exitFullscreen",
      "path": "document/exitfullscreen",
      "type": "Fullscreen"
    },
    {
      "name": "Document.exitPictureInPicture",
      "path": "document/exitpictureinpicture",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.exitPointerLock",
      "path": "document/exitpointerlock",
      "type": "Pointer Events"
    },
    {
      "name": "Document.featurePolicy",
      "path": "document/featurepolicy",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.fgColor",
      "path": "document/fgcolor",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.firstElementChild",
      "path": "document/firstelementchild",
      "type": "Miscellaneous"
    },
    { "name": "Document.fonts", "path": "document/fonts", "type": "CSS" },
    {
      "name": "Document.forms",
      "path": "document/forms",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.fullscreen",
      "path": "document/fullscreen",
      "type": "Fullscreen"
    },
    {
      "name": "Document.fullscreenchange event",
      "path": "document/fullscreenchange_event",
      "type": "Fullscreen"
    },
    {
      "name": "Document.fullscreenElement",
      "path": "document/fullscreenelement",
      "type": "Fullscreen"
    },
    {
      "name": "Document.fullscreenEnabled",
      "path": "document/fullscreenenabled",
      "type": "Fullscreen"
    },
    {
      "name": "Document.fullscreenerror event",
      "path": "document/fullscreenerror_event",
      "type": "Fullscreen"
    },
    {
      "name": "Document.getAnimations",
      "path": "document/getanimations",
      "type": "Animation"
    },
    {
      "name": "Document.getBoxObjectFor",
      "path": "document/getboxobjectfor",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getElementById",
      "path": "document/getelementbyid",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getElementsByClassName",
      "path": "document/getelementsbyclassname",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getElementsByName",
      "path": "document/getelementsbyname",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getElementsByTagName",
      "path": "document/getelementsbytagname",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getElementsByTagNameNS",
      "path": "document/getelementsbytagnamens",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.getSelection",
      "path": "document/getselection",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.gotpointercapture event",
      "path": "document/gotpointercapture_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.hasFocus",
      "path": "document/hasfocus",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.hasStorageAccess",
      "path": "document/hasstorageaccess",
      "type": "Storage"
    },
    {
      "name": "Document.head",
      "path": "document/head",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.height",
      "path": "document/height",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.hidden",
      "path": "document/hidden",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.images",
      "path": "document/images",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.implementation",
      "path": "document/implementation",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.importNode",
      "path": "document/importnode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.keydown event",
      "path": "document/keydown_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.keypress event",
      "path": "document/keypress_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.keyup event",
      "path": "document/keyup_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.lastElementChild",
      "path": "document/lastelementchild",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.lastModified",
      "path": "document/lastmodified",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.lastStyleSheetSet",
      "path": "document/laststylesheetset",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.linkColor",
      "path": "document/linkcolor",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.links",
      "path": "document/links",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.location",
      "path": "document/location",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.lostpointercapture event",
      "path": "document/lostpointercapture_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.mozSetImageElement",
      "path": "document/mozsetimageelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.mozSyntheticDocument",
      "path": "document/mozsyntheticdocument",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.onafterscriptexecute",
      "path": "document/onafterscriptexecute",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.onbeforescriptexecute",
      "path": "document/onbeforescriptexecute",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.onfullscreenchange",
      "path": "document/onfullscreenchange",
      "type": "Fullscreen"
    },
    {
      "name": "Document.onfullscreenerror",
      "path": "document/onfullscreenerror",
      "type": "Fullscreen"
    },
    {
      "name": "Document.onoffline",
      "path": "document/onoffline",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.ononline",
      "path": "document/ononline",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.onvisibilitychange",
      "path": "document/onvisibilitychange",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.open",
      "path": "document/open",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.origin",
      "path": "document/origin",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.paste event",
      "path": "document/paste_event",
      "type": "Clipboard"
    },
    {
      "name": "Document.pictureInPictureElement",
      "path": "document/pictureinpictureelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.pictureInPictureEnabled",
      "path": "document/pictureinpictureenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.plugins",
      "path": "document/plugins",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.pointercancel event",
      "path": "document/pointercancel_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerdown event",
      "path": "document/pointerdown_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerenter event",
      "path": "document/pointerenter_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerleave event",
      "path": "document/pointerleave_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerlockchange event",
      "path": "document/pointerlockchange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.pointerLockElement",
      "path": "document/pointerlockelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.pointerlockerror event",
      "path": "document/pointerlockerror_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.pointermove event",
      "path": "document/pointermove_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerout event",
      "path": "document/pointerout_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerover event",
      "path": "document/pointerover_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.pointerup event",
      "path": "document/pointerup_event",
      "type": "Pointer Events"
    },
    {
      "name": "Document.popupNode",
      "path": "document/popupnode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.preferredStyleSheetSet",
      "path": "document/preferredstylesheetset",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.prepend",
      "path": "document/prepend",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.queryCommandEnabled",
      "path": "document/querycommandenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.queryCommandState",
      "path": "document/querycommandstate",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.queryCommandSupported",
      "path": "document/querycommandsupported",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.querySelector",
      "path": "document/queryselector",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.querySelectorAll",
      "path": "document/queryselectorall",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.readyState",
      "path": "document/readystate",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.readystatechange event",
      "path": "document/readystatechange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.referrer",
      "path": "document/referrer",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.registerElement",
      "path": "document/registerelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.releaseCapture",
      "path": "document/releasecapture",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.replaceChildren",
      "path": "document/replacechildren",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.requestStorageAccess",
      "path": "document/requeststorageaccess",
      "type": "Storage"
    },
    {
      "name": "Document.rootElement",
      "path": "document/rootelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.scripts",
      "path": "document/scripts",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.scroll event",
      "path": "document/scroll_event",
      "type": "CSS"
    },
    {
      "name": "Document.scrollingElement",
      "path": "document/scrollingelement",
      "type": "CSS"
    },
    {
      "name": "Document.selectedStyleSheetSet",
      "path": "document/selectedstylesheetset",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.selectionchange event",
      "path": "document/selectionchange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.selectstart event",
      "path": "document/selectstart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.styleSheets",
      "path": "document/stylesheets",
      "type": "CSS"
    },
    {
      "name": "Document.styleSheetSets",
      "path": "document/stylesheetsets",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.timeline",
      "path": "document/timeline",
      "type": "Animation"
    },
    {
      "name": "Document.title",
      "path": "document/title",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.tooltipNode",
      "path": "document/tooltipnode",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.touchcancel event",
      "path": "document/touchcancel_event",
      "type": "Touch Events"
    },
    {
      "name": "Document.touchend event",
      "path": "document/touchend_event",
      "type": "Touch Events"
    },
    {
      "name": "Document.touchmove event",
      "path": "document/touchmove_event",
      "type": "Touch Events"
    },
    {
      "name": "Document.touchstart event",
      "path": "document/touchstart_event",
      "type": "Touch Events"
    },
    {
      "name": "Document.transitioncancel event",
      "path": "document/transitioncancel_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.transitionend event",
      "path": "document/transitionend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.transitionrun event",
      "path": "document/transitionrun_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.transitionstart event",
      "path": "document/transitionstart_event",
      "type": "Miscellaneous"
    },
    { "name": "Document.URL", "path": "document/url", "type": "Miscellaneous" },
    {
      "name": "Document.visibilitychange event",
      "path": "document/visibilitychange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.visibilityState",
      "path": "document/visibilitystate",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.vlinkColor",
      "path": "document/vlinkcolor",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.wheel event",
      "path": "document/wheel_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.width",
      "path": "document/width",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.write",
      "path": "document/write",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.writeln",
      "path": "document/writeln",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.xmlEncoding",
      "path": "document/xmlencoding",
      "type": "Miscellaneous"
    },
    {
      "name": "Document.xmlVersion",
      "path": "document/xmlversion",
      "type": "Miscellaneous"
    },
    {
      "name": "DocumentFragment",
      "path": "documentfragment",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.append",
      "path": "documentfragment/append",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.childElementCount",
      "path": "documentfragment/childelementcount",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.children",
      "path": "documentfragment/children",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.constructor",
      "path": "documentfragment/documentfragment",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.firstElementChild",
      "path": "documentfragment/firstelementchild",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.lastElementChild",
      "path": "documentfragment/lastelementchild",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.prepend",
      "path": "documentfragment/prepend",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.querySelector",
      "path": "documentfragment/queryselector",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.querySelectorAll",
      "path": "documentfragment/queryselectorall",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentFragment.replaceChildren",
      "path": "documentfragment/replacechildren",
      "type": "DocumentFragment"
    },
    {
      "name": "DocumentTimeline",
      "path": "documenttimeline",
      "type": "Animation"
    },
    {
      "name": "DocumentTimeline.constructor",
      "path": "documenttimeline/documenttimeline",
      "type": "Animation"
    },
    {
      "name": "DocumentTouch",
      "path": "documenttouch",
      "type": "Miscellaneous"
    },
    { "name": "DocumentType", "path": "documenttype", "type": "Nodes" },
    { "name": "DOMError", "path": "domerror", "type": "DOM" },
    { "name": "DOMException", "path": "domexception", "type": "DOM" },
    { "name": "DOMException.code", "path": "domexception/code", "type": "DOM" },
    {
      "name": "DOMException.constructor",
      "path": "domexception/domexception",
      "type": "DOM"
    },
    {
      "name": "DOMException.message",
      "path": "domexception/message",
      "type": "DOM"
    },
    { "name": "DOMException.name", "path": "domexception/name", "type": "DOM" },
    {
      "name": "DOMHighResTimeStamp",
      "path": "domhighrestimestamp",
      "type": "DOM"
    },
    { "name": "DOMImplementation", "path": "domimplementation", "type": "DOM" },
    {
      "name": "DOMImplementation.createDocument",
      "path": "domimplementation/createdocument",
      "type": "DOM"
    },
    {
      "name": "DOMImplementation.createDocumentType",
      "path": "domimplementation/createdocumenttype",
      "type": "DOM"
    },
    {
      "name": "DOMImplementation.createHTMLDocument",
      "path": "domimplementation/createhtmldocument",
      "type": "DOM"
    },
    {
      "name": "DOMImplementation.hasFeature",
      "path": "domimplementation/hasfeature",
      "type": "DOM"
    },
    { "name": "DOMLocator", "path": "domlocator", "type": "DOM" },
    { "name": "DOMMatrix", "path": "dommatrix", "type": "DOM" },
    {
      "name": "DOMMatrix.constructor",
      "path": "dommatrix/dommatrix",
      "type": "DOM"
    },
    { "name": "DOMMatrixReadOnly", "path": "dommatrixreadonly", "type": "DOM" },
    {
      "name": "DOMMatrixReadOnly.constructor",
      "path": "dommatrixreadonly/dommatrixreadonly",
      "type": "DOM"
    },
    {
      "name": "DOMMatrixReadOnly.flipX",
      "path": "dommatrixreadonly/flipx",
      "type": "DOM"
    },
    {
      "name": "DOMMatrixReadOnly.scale",
      "path": "dommatrixreadonly/scale",
      "type": "DOM"
    },
    {
      "name": "DOMMatrixReadOnly.translate",
      "path": "dommatrixreadonly/translate",
      "type": "DOM"
    },
    { "name": "DOMObject", "path": "domobject", "type": "DOM" },
    { "name": "DOMParser", "path": "domparser", "type": "DOM" },
    {
      "name": "DOMParser.constructor",
      "path": "domparser/domparser",
      "type": "DOM"
    },
    {
      "name": "DOMParser.parseFromString",
      "path": "domparser/parsefromstring",
      "type": "DOM"
    },
    { "name": "DOMPoint", "path": "dompoint", "type": "DOM" },
    {
      "name": "DOMPoint.constructor",
      "path": "dompoint/dompoint",
      "type": "DOM"
    },
    {
      "name": "DOMPoint.fromPoint",
      "path": "dompoint/frompoint",
      "type": "DOM"
    },
    { "name": "DOMPoint.w", "path": "dompoint/w", "type": "DOM" },
    { "name": "DOMPoint.x", "path": "dompoint/x", "type": "DOM" },
    { "name": "DOMPoint.y", "path": "dompoint/y", "type": "DOM" },
    { "name": "DOMPoint.z", "path": "dompoint/z", "type": "DOM" },
    { "name": "DOMPointInit", "path": "dompointinit", "type": "DOM" },
    { "name": "DOMPointInit.w", "path": "dompointinit/w", "type": "DOM" },
    { "name": "DOMPointInit.x", "path": "dompointinit/x", "type": "DOM" },
    { "name": "DOMPointInit.y", "path": "dompointinit/y", "type": "DOM" },
    { "name": "DOMPointInit.z", "path": "dompointinit/z", "type": "DOM" },
    { "name": "DOMPointReadOnly", "path": "dompointreadonly", "type": "DOM" },
    {
      "name": "DOMPointReadOnly.constructor",
      "path": "dompointreadonly/dompointreadonly",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.fromPoint",
      "path": "dompointreadonly/frompoint",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.toJSON",
      "path": "dompointreadonly/tojson",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.w",
      "path": "dompointreadonly/w",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.x",
      "path": "dompointreadonly/x",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.y",
      "path": "dompointreadonly/y",
      "type": "DOM"
    },
    {
      "name": "DOMPointReadOnly.z",
      "path": "dompointreadonly/z",
      "type": "DOM"
    },
    { "name": "DOMQuad", "path": "domquad", "type": "DOM" },
    { "name": "DOMRect", "path": "domrect", "type": "DOM" },
    { "name": "DOMRect.constructor", "path": "domrect/domrect", "type": "DOM" },
    { "name": "DOMRectReadOnly", "path": "domrectreadonly", "type": "DOM" },
    {
      "name": "DOMRectReadOnly.bottom",
      "path": "domrectreadonly/bottom",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.constructor",
      "path": "domrectreadonly/domrectreadonly",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.fromRect",
      "path": "domrectreadonly/fromrect",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.height",
      "path": "domrectreadonly/height",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.left",
      "path": "domrectreadonly/left",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.right",
      "path": "domrectreadonly/right",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.top",
      "path": "domrectreadonly/top",
      "type": "DOM"
    },
    {
      "name": "DOMRectReadOnly.width",
      "path": "domrectreadonly/width",
      "type": "DOM"
    },
    { "name": "DOMRectReadOnly.x", "path": "domrectreadonly/x", "type": "DOM" },
    { "name": "DOMRectReadOnly.y", "path": "domrectreadonly/y", "type": "DOM" },
    { "name": "DOMString", "path": "domstring", "type": "DOM" },
    { "name": "DOMString.Binary", "path": "domstring/binary", "type": "DOM" },
    { "name": "DOMStringList", "path": "domstringlist", "type": "DOM" },
    { "name": "DOMStringMap", "path": "domstringmap", "type": "DOM" },
    { "name": "DOMTimeStamp", "path": "domtimestamp", "type": "DOM" },
    { "name": "DOMTokenList", "path": "domtokenlist", "type": "DOM" },
    { "name": "DOMTokenList.add", "path": "domtokenlist/add", "type": "DOM" },
    {
      "name": "DOMTokenList.contains",
      "path": "domtokenlist/contains",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.entries",
      "path": "domtokenlist/entries",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.forEach",
      "path": "domtokenlist/foreach",
      "type": "DOM"
    },
    { "name": "DOMTokenList.item", "path": "domtokenlist/item", "type": "DOM" },
    { "name": "DOMTokenList.keys", "path": "domtokenlist/keys", "type": "DOM" },
    {
      "name": "DOMTokenList.length",
      "path": "domtokenlist/length",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.remove",
      "path": "domtokenlist/remove",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.replace",
      "path": "domtokenlist/replace",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.supports",
      "path": "domtokenlist/supports",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.toggle",
      "path": "domtokenlist/toggle",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.value",
      "path": "domtokenlist/value",
      "type": "DOM"
    },
    {
      "name": "DOMTokenList.values",
      "path": "domtokenlist/values",
      "type": "DOM"
    },
    { "name": "DOMUserData", "path": "domuserdata", "type": "DOM" },
    { "name": "DoubleRange", "path": "doublerange", "type": "Media" },
    { "name": "DragEvent", "path": "dragevent", "type": "Drag & Drop" },
    {
      "name": "DragEvent.constructor",
      "path": "dragevent/dragevent",
      "type": "Drag & Drop"
    },
    {
      "name": "DragEvent.dataTransfer",
      "path": "dragevent/datatransfer",
      "type": "Drag & Drop"
    },
    {
      "name": "drawArraysInstancedANGLE",
      "path": "angle_instanced_arrays/drawarraysinstancedangle",
      "type": "WebGL"
    },
    {
      "name": "drawElementsInstancedANGLE",
      "path": "angle_instanced_arrays/drawelementsinstancedangle",
      "type": "WebGL"
    },
    {
      "name": "DynamicsCompressorNode",
      "path": "dynamicscompressornode",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.attack",
      "path": "dynamicscompressornode/attack",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.constructor",
      "path": "dynamicscompressornode/dynamicscompressornode",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.knee",
      "path": "dynamicscompressornode/knee",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.ratio",
      "path": "dynamicscompressornode/ratio",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.reduction",
      "path": "dynamicscompressornode/reduction",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.release",
      "path": "dynamicscompressornode/release",
      "type": "Audio"
    },
    {
      "name": "DynamicsCompressorNode.threshold",
      "path": "dynamicscompressornode/threshold",
      "type": "Audio"
    },
    {
      "name": "EcdhKeyDeriveParams",
      "path": "ecdhkeyderiveparams",
      "type": "Cryptography"
    },
    { "name": "EcdsaParams", "path": "ecdsaparams", "type": "Cryptography" },
    {
      "name": "EcKeyGenParams",
      "path": "eckeygenparams",
      "type": "Cryptography"
    },
    {
      "name": "EcKeyImportParams",
      "path": "eckeyimportparams",
      "type": "Cryptography"
    },
    { "name": "EffectTiming", "path": "effecttiming", "type": "Performance" },
    {
      "name": "EffectTiming.delay",
      "path": "effecttiming/delay",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.direction",
      "path": "effecttiming/direction",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.duration",
      "path": "effecttiming/duration",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.easing",
      "path": "effecttiming/easing",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.endDelay",
      "path": "effecttiming/enddelay",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.fill",
      "path": "effecttiming/fill",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.iterations",
      "path": "effecttiming/iterations",
      "type": "Performance"
    },
    {
      "name": "EffectTiming.iterationStart",
      "path": "effecttiming/iterationstart",
      "type": "Performance"
    },
    { "name": "Element", "path": "element", "type": "CSS" },
    {
      "name": "Element timing API",
      "path": "element_timing_api",
      "type": "Performance"
    },
    {
      "name": "Element.afterscriptexecute event",
      "path": "element/afterscriptexecute_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.animate",
      "path": "element/animate",
      "type": "Animation"
    },
    {
      "name": "Element.append",
      "path": "element/append",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaAtomic",
      "path": "element/ariaatomic",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaAutoComplete",
      "path": "element/ariaautocomplete",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaBusy",
      "path": "element/ariabusy",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaChecked",
      "path": "element/ariachecked",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaColCount",
      "path": "element/ariacolcount",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaColIndex",
      "path": "element/ariacolindex",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaColIndexText",
      "path": "element/ariacolindextext",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaColSpan",
      "path": "element/ariacolspan",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaCurrent",
      "path": "element/ariacurrent",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaDescription",
      "path": "element/ariadescription",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaDisabled",
      "path": "element/ariadisabled",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaExpanded",
      "path": "element/ariaexpanded",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaHasPopup",
      "path": "element/ariahaspopup",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaHidden",
      "path": "element/ariahidden",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaKeyShortcuts",
      "path": "element/ariakeyshortcuts",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaLabel",
      "path": "element/arialabel",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaLevel",
      "path": "element/arialevel",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaLive",
      "path": "element/arialive",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaModal",
      "path": "element/ariamodal",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaMultiline",
      "path": "element/ariamultiline",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaMultiSelectable",
      "path": "element/ariamultiselectable",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaOrientation",
      "path": "element/ariaorientation",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaPlaceholder",
      "path": "element/ariaplaceholder",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaPosInSet",
      "path": "element/ariaposinset",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaPressed",
      "path": "element/ariapressed",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaReadOnly",
      "path": "element/ariareadonly",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRelevant",
      "path": "element/ariarelevant",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRequired",
      "path": "element/ariarequired",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRoleDescription",
      "path": "element/ariaroledescription",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRowCount",
      "path": "element/ariarowcount",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRowIndex",
      "path": "element/ariarowindex",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRowIndexText",
      "path": "element/ariarowindextext",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaRowSpan",
      "path": "element/ariarowspan",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaSelected",
      "path": "element/ariaselected",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaSetSize",
      "path": "element/ariasetsize",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaSort",
      "path": "element/ariasort",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaValueMax",
      "path": "element/ariavaluemax",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaValueMin",
      "path": "element/ariavaluemin",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaValueNow",
      "path": "element/ariavaluenow",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.ariaValueText",
      "path": "element/ariavaluetext",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.assignedSlot",
      "path": "element/assignedslot",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.attachShadow",
      "path": "element/attachshadow",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.attributes",
      "path": "element/attributes",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.auxclick event",
      "path": "element/auxclick_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.beforescriptexecute event",
      "path": "element/beforescriptexecute_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.blur event",
      "path": "element/blur_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.childElementCount",
      "path": "element/childelementcount",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.children",
      "path": "element/children",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.classList",
      "path": "element/classlist",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.className",
      "path": "element/classname",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.click event",
      "path": "element/click_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.clientHeight",
      "path": "element/clientheight",
      "type": "CSS"
    },
    {
      "name": "Element.clientLeft",
      "path": "element/clientleft",
      "type": "CSS"
    },
    { "name": "Element.clientTop", "path": "element/clienttop", "type": "CSS" },
    {
      "name": "Element.clientWidth",
      "path": "element/clientwidth",
      "type": "CSS"
    },
    {
      "name": "Element.closest",
      "path": "element/closest",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.compositionend event",
      "path": "element/compositionend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.compositionstart event",
      "path": "element/compositionstart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.compositionupdate event",
      "path": "element/compositionupdate_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.computedStyleMap",
      "path": "element/computedstylemap",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.contextmenu event",
      "path": "element/contextmenu_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.copy event",
      "path": "element/copy_event",
      "type": "Clipboard"
    },
    {
      "name": "Element.createShadowRoot",
      "path": "element/createshadowroot",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.currentStyle",
      "path": "element/currentstyle",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.cut event",
      "path": "element/cut_event",
      "type": "Clipboard"
    },
    {
      "name": "Element.dblclick event",
      "path": "element/dblclick_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.DOMActivate event",
      "path": "element/domactivate_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.DOMMouseScroll event",
      "path": "element/dommousescroll_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.error event",
      "path": "element/error_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.firstElementChild",
      "path": "element/firstelementchild",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.focus event",
      "path": "element/focus_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.focusin event",
      "path": "element/focusin_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.focusout event",
      "path": "element/focusout_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.fullscreenchange event",
      "path": "element/fullscreenchange_event",
      "type": "Fullscreen"
    },
    {
      "name": "Element.fullscreenerror event",
      "path": "element/fullscreenerror_event",
      "type": "Fullscreen"
    },
    {
      "name": "Element.gesturechange event",
      "path": "element/gesturechange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.gestureend event",
      "path": "element/gestureend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.gesturestart event",
      "path": "element/gesturestart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getAnimations",
      "path": "element/getanimations",
      "type": "Animation"
    },
    {
      "name": "Element.getAttribute",
      "path": "element/getattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getAttributeNames",
      "path": "element/getattributenames",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getAttributeNode",
      "path": "element/getattributenode",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getAttributeNodeNS",
      "path": "element/getattributenodens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getAttributeNS",
      "path": "element/getattributens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getBoundingClientRect",
      "path": "element/getboundingclientrect",
      "type": "CSS"
    },
    {
      "name": "Element.getClientRects",
      "path": "element/getclientrects",
      "type": "CSS"
    },
    {
      "name": "Element.getElementsByClassName",
      "path": "element/getelementsbyclassname",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getElementsByTagName",
      "path": "element/getelementsbytagname",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.getElementsByTagNameNS",
      "path": "element/getelementsbytagnamens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.hasAttribute",
      "path": "element/hasattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.hasAttributeNS",
      "path": "element/hasattributens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.hasAttributes",
      "path": "element/hasattributes",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.hasPointerCapture",
      "path": "element/haspointercapture",
      "type": "Pointer Events"
    },
    { "name": "Element.id", "path": "element/id", "type": "Miscellaneous" },
    {
      "name": "Element.innerHTML",
      "path": "element/innerhtml",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.insertAdjacentElement",
      "path": "element/insertadjacentelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.insertAdjacentHTML",
      "path": "element/insertadjacenthtml",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.insertAdjacentText",
      "path": "element/insertadjacenttext",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.keydown event",
      "path": "element/keydown_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.keypress event",
      "path": "element/keypress_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.keyup event",
      "path": "element/keyup_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.lastElementChild",
      "path": "element/lastelementchild",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.localName",
      "path": "element/localname",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.matches",
      "path": "element/matches",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mousedown event",
      "path": "element/mousedown_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mouseenter event",
      "path": "element/mouseenter_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mouseleave event",
      "path": "element/mouseleave_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mousemove event",
      "path": "element/mousemove_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mouseout event",
      "path": "element/mouseout_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mouseover event",
      "path": "element/mouseover_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mouseup event",
      "path": "element/mouseup_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.mousewheel event",
      "path": "element/mousewheel_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MozMousePixelScroll",
      "path": "element/mozmousepixelscroll",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.msContentZoom event",
      "path": "element/mscontentzoom_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSGestureChange event",
      "path": "element/msgesturechange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSGestureEnd event",
      "path": "element/msgestureend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSGestureHold event",
      "path": "element/msgesturehold_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSGestureStart event",
      "path": "element/msgesturestart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSGestureTap event",
      "path": "element/msgesturetap_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSInertiaStart event",
      "path": "element/msinertiastart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.MSManipulationStateChanged event",
      "path": "element/msmanipulationstatechanged_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.msZoomTo",
      "path": "element/mszoomto",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.namespaceURI",
      "path": "element/namespaceuri",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.nextElementSibling",
      "path": "element/nextelementsibling",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.onfullscreenchange",
      "path": "element/onfullscreenchange",
      "type": "Fullscreen"
    },
    {
      "name": "Element.onfullscreenerror",
      "path": "element/onfullscreenerror",
      "type": "Fullscreen"
    },
    {
      "name": "Element.openOrClosedShadowRoot",
      "path": "element/openorclosedshadowroot",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.outerHTML",
      "path": "element/outerhtml",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.overflow event",
      "path": "element/overflow_event",
      "type": "Miscellaneous"
    },
    { "name": "Element.part", "path": "element/part", "type": "Miscellaneous" },
    {
      "name": "Element.paste event",
      "path": "element/paste_event",
      "type": "Clipboard"
    },
    {
      "name": "Element.prefix",
      "path": "element/prefix",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.prepend",
      "path": "element/prepend",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.previousElementSibling",
      "path": "element/previouselementsibling",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.querySelector",
      "path": "element/queryselector",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.querySelectorAll",
      "path": "element/queryselectorall",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.releasePointerCapture",
      "path": "element/releasepointercapture",
      "type": "Pointer Events"
    },
    {
      "name": "Element.removeAttribute",
      "path": "element/removeattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.removeAttributeNode",
      "path": "element/removeattributenode",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.removeAttributeNS",
      "path": "element/removeattributens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.replaceChildren",
      "path": "element/replacechildren",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.requestFullScreen",
      "path": "element/requestfullscreen",
      "type": "Fullscreen"
    },
    {
      "name": "Element.requestPointerLock",
      "path": "element/requestpointerlock",
      "type": "Pointer Events"
    },
    {
      "name": "Element.runtimeStyle",
      "path": "element/runtimestyle",
      "type": "Miscellaneous"
    },
    { "name": "Element.scroll", "path": "element/scroll", "type": "CSS" },
    {
      "name": "Element.scroll event",
      "path": "element/scroll_event",
      "type": "CSS"
    },
    { "name": "Element.scrollBy", "path": "element/scrollby", "type": "CSS" },
    {
      "name": "Element.scrollHeight",
      "path": "element/scrollheight",
      "type": "CSS"
    },
    {
      "name": "Element.scrollIntoView",
      "path": "element/scrollintoview",
      "type": "CSS"
    },
    {
      "name": "Element.scrollIntoViewIfNeeded",
      "path": "element/scrollintoviewifneeded",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.scrollLeft",
      "path": "element/scrollleft",
      "type": "CSS"
    },
    {
      "name": "Element.scrollLeftMax",
      "path": "element/scrollleftmax",
      "type": "Miscellaneous"
    },
    { "name": "Element.scrollTo", "path": "element/scrollto", "type": "CSS" },
    { "name": "Element.scrollTop", "path": "element/scrolltop", "type": "CSS" },
    {
      "name": "Element.scrollTopMax",
      "path": "element/scrolltopmax",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.scrollWidth",
      "path": "element/scrollwidth",
      "type": "CSS"
    },
    {
      "name": "Element.select event",
      "path": "element/select_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setAttribute",
      "path": "element/setattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setAttributeNode",
      "path": "element/setattributenode",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setAttributeNodeNS",
      "path": "element/setattributenodens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setAttributeNS",
      "path": "element/setattributens",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setCapture",
      "path": "element/setcapture",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.setPointerCapture",
      "path": "element/setpointercapture",
      "type": "Pointer Events"
    },
    {
      "name": "Element.shadowRoot",
      "path": "element/shadowroot",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.show event",
      "path": "element/show_event",
      "type": "Miscellaneous"
    },
    { "name": "Element.slot", "path": "element/slot", "type": "Miscellaneous" },
    {
      "name": "Element.tabStop",
      "path": "element/tabstop",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.tagName",
      "path": "element/tagname",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.toggleAttribute",
      "path": "element/toggleattribute",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.touchcancel event",
      "path": "element/touchcancel_event",
      "type": "Touch Events"
    },
    {
      "name": "Element.touchend event",
      "path": "element/touchend_event",
      "type": "Touch Events"
    },
    {
      "name": "Element.touchmove event",
      "path": "element/touchmove_event",
      "type": "Touch Events"
    },
    {
      "name": "Element.touchstart event",
      "path": "element/touchstart_event",
      "type": "Touch Events"
    },
    {
      "name": "Element.underflow event",
      "path": "element/underflow_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.webkitmouseforcechanged event",
      "path": "element/webkitmouseforcechanged_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.webkitmouseforcedown event",
      "path": "element/webkitmouseforcedown_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.webkitmouseforceup event",
      "path": "element/webkitmouseforceup_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.webkitmouseforcewillbegin event",
      "path": "element/webkitmouseforcewillbegin_event",
      "type": "Miscellaneous"
    },
    {
      "name": "Element.wheel event",
      "path": "element/wheel_event",
      "type": "Miscellaneous"
    },
    {
      "name": "ElementCSSInlineStyle",
      "path": "elementcssinlinestyle",
      "type": "CSS"
    },
    {
      "name": "ElementCSSInlineStyle.style",
      "path": "elementcssinlinestyle/style",
      "type": "CSS"
    },
    {
      "name": "ElementTraversal",
      "path": "elementtraversal",
      "type": "Miscellaneous"
    },
    { "name": "Encoding API", "path": "encoding_api", "type": "Encoding" },
    {
      "name": "Encoding API: Encodings",
      "path": "encoding_api/encodings",
      "type": "Encoding"
    },
    {
      "name": "Encrypted Media Extensions API",
      "path": "encrypted_media_extensions_api",
      "type": "Encrypted Media"
    },
    { "name": "ErrorEvent", "path": "errorevent", "type": "Events" },
    { "name": "Event", "path": "event", "type": "Event" },
    { "name": "Event.bubbles", "path": "event/bubbles", "type": "Event" },
    { "name": "Event.cancelable", "path": "event/cancelable", "type": "Event" },
    {
      "name": "Event.cancelBubble",
      "path": "event/cancelbubble",
      "type": "Event"
    },
    {
      "name": "Event.Comparison of Event Targets",
      "path": "event/comparison_of_event_targets",
      "type": "Event"
    },
    { "name": "Event.composed", "path": "event/composed", "type": "Event" },
    {
      "name": "Event.composedPath",
      "path": "event/composedpath",
      "type": "Event"
    },
    { "name": "Event.constructor", "path": "event/event", "type": "Event" },
    {
      "name": "Event.currentTarget",
      "path": "event/currenttarget",
      "type": "Event"
    },
    {
      "name": "Event.defaultPrevented",
      "path": "event/defaultprevented",
      "type": "Event"
    },
    { "name": "Event.eventPhase", "path": "event/eventphase", "type": "Event" },
    {
      "name": "Event.explicitOriginalTarget",
      "path": "event/explicitoriginaltarget",
      "type": "Event"
    },
    { "name": "Event.initEvent", "path": "event/initevent", "type": "Event" },
    { "name": "Event.isTrusted", "path": "event/istrusted", "type": "Event" },
    {
      "name": "Event.msConvertURL",
      "path": "event/msconverturl",
      "type": "Event"
    },
    {
      "name": "Event.originalTarget",
      "path": "event/originaltarget",
      "type": "Event"
    },
    {
      "name": "Event.preventDefault",
      "path": "event/preventdefault",
      "type": "Event"
    },
    {
      "name": "Event.returnValue",
      "path": "event/returnvalue",
      "type": "Event"
    },
    { "name": "Event.srcElement", "path": "event/srcelement", "type": "Event" },
    {
      "name": "Event.stopImmediatePropagation",
      "path": "event/stopimmediatepropagation",
      "type": "Event"
    },
    {
      "name": "Event.stopPropagation",
      "path": "event/stoppropagation",
      "type": "Event"
    },
    { "name": "Event.target", "path": "event/target", "type": "Event" },
    { "name": "Event.timeStamp", "path": "event/timestamp", "type": "Event" },
    { "name": "Event.type", "path": "event/type", "type": "Event" },
    { "name": "EventListener", "path": "eventlistener", "type": "Event" },
    {
      "name": "EventListener.handleEvent",
      "path": "eventlistener/handleevent",
      "type": "Event"
    },
    { "name": "EventSource", "path": "eventsource", "type": "Event" },
    {
      "name": "EventSource.close",
      "path": "eventsource/close",
      "type": "Event"
    },
    {
      "name": "EventSource.constructor",
      "path": "eventsource/eventsource",
      "type": "Event"
    },
    {
      "name": "EventSource.error event",
      "path": "eventsource/error_event",
      "type": "Event"
    },
    {
      "name": "EventSource.message event",
      "path": "eventsource/message_event",
      "type": "Event"
    },
    {
      "name": "EventSource.onerror",
      "path": "eventsource/onerror",
      "type": "Event"
    },
    {
      "name": "EventSource.onmessage",
      "path": "eventsource/onmessage",
      "type": "Event"
    },
    {
      "name": "EventSource.onopen",
      "path": "eventsource/onopen",
      "type": "Event"
    },
    {
      "name": "EventSource.open event",
      "path": "eventsource/open_event",
      "type": "Event"
    },
    {
      "name": "EventSource.readyState",
      "path": "eventsource/readystate",
      "type": "Event"
    },
    { "name": "EventSource.url", "path": "eventsource/url", "type": "Event" },
    {
      "name": "EventSource.withCredentials",
      "path": "eventsource/withcredentials",
      "type": "Event"
    },
    { "name": "EventTarget", "path": "eventtarget", "type": "Event" },
    {
      "name": "EventTarget.addEventListener",
      "path": "eventtarget/addeventlistener",
      "type": "Event"
    },
    {
      "name": "EventTarget.constructor",
      "path": "eventtarget/eventtarget",
      "type": "Event"
    },
    {
      "name": "EventTarget.dispatchEvent",
      "path": "eventtarget/dispatchevent",
      "type": "Event"
    },
    {
      "name": "EventTarget.removeEventListener",
      "path": "eventtarget/removeeventlistener",
      "type": "Event"
    },
    { "name": "EXT blend minmax", "path": "ext_blend_minmax", "type": "WebGL" },
    {
      "name": "EXT color buffer float",
      "path": "ext_color_buffer_float",
      "type": "WebGL"
    },
    {
      "name": "EXT color buffer half float",
      "path": "ext_color_buffer_half_float",
      "type": "WebGL"
    },
    {
      "name": "EXT disjoint timer query",
      "path": "ext_disjoint_timer_query",
      "type": "WebGL"
    },
    { "name": "EXT float blend", "path": "ext_float_blend", "type": "WebGL" },
    { "name": "EXT frag depth", "path": "ext_frag_depth", "type": "WebGL" },
    {
      "name": "EXT shader texture lod",
      "path": "ext_shader_texture_lod",
      "type": "WebGL"
    },
    { "name": "EXT sRGB", "path": "ext_srgb", "type": "WebGL" },
    {
      "name": "EXT texture compression bptc",
      "path": "ext_texture_compression_bptc",
      "type": "WebGL"
    },
    {
      "name": "EXT texture compression rgtc",
      "path": "ext_texture_compression_rgtc",
      "type": "WebGL"
    },
    {
      "name": "EXT texture filter anisotropic",
      "path": "ext_texture_filter_anisotropic",
      "type": "WebGL"
    },
    {
      "name": "EXT texture norm16",
      "path": "ext_texture_norm16",
      "type": "WebGL"
    },
    {
      "name": "ext.beginQueryEXT",
      "path": "ext_disjoint_timer_query/beginqueryext",
      "type": "WebGL"
    },
    {
      "name": "ext.bindVertexArrayOES",
      "path": "oes_vertex_array_object/bindvertexarrayoes",
      "type": "WebGL"
    },
    {
      "name": "ext.createQueryEXT",
      "path": "ext_disjoint_timer_query/createqueryext",
      "type": "WebGL"
    },
    {
      "name": "ext.createVertexArrayOES",
      "path": "oes_vertex_array_object/createvertexarrayoes",
      "type": "WebGL"
    },
    {
      "name": "ext.deleteQueryEXT",
      "path": "ext_disjoint_timer_query/deletequeryext",
      "type": "WebGL"
    },
    {
      "name": "ext.deleteVertexArrayOES",
      "path": "oes_vertex_array_object/deletevertexarrayoes",
      "type": "WebGL"
    },
    {
      "name": "ext.drawBuffersWEBGL",
      "path": "webgl_draw_buffers/drawbufferswebgl",
      "type": "WebGL"
    },
    {
      "name": "ext.endQueryEXT",
      "path": "ext_disjoint_timer_query/endqueryext",
      "type": "WebGL"
    },
    {
      "name": "ext.getQueryEXT",
      "path": "ext_disjoint_timer_query/getqueryext",
      "type": "WebGL"
    },
    {
      "name": "ext.getQueryObjectEXT",
      "path": "ext_disjoint_timer_query/getqueryobjectext",
      "type": "WebGL"
    },
    {
      "name": "ext.getSupportedProfiles",
      "path": "webgl_compressed_texture_astc/getsupportedprofiles",
      "type": "WebGL"
    },
    {
      "name": "ext.getTranslatedShaderSource",
      "path": "webgl_debug_shaders/gettranslatedshadersource",
      "type": "WebGL"
    },
    {
      "name": "ext.isQueryEXT",
      "path": "ext_disjoint_timer_query/isqueryext",
      "type": "WebGL"
    },
    {
      "name": "ext.isVertexArrayOES",
      "path": "oes_vertex_array_object/isvertexarrayoes",
      "type": "WebGL"
    },
    {
      "name": "ext.loseContext",
      "path": "webgl_lose_context/losecontext",
      "type": "WebGL"
    },
    {
      "name": "ext.multiDrawArraysInstancedWEBGL",
      "path": "webgl_multi_draw/multidrawarraysinstancedwebgl",
      "type": "WebGL"
    },
    {
      "name": "ext.multiDrawArraysWEBGL",
      "path": "webgl_multi_draw/multidrawarrayswebgl",
      "type": "WebGL"
    },
    {
      "name": "ext.multiDrawElementsInstancedWEBGL",
      "path": "webgl_multi_draw/multidrawelementsinstancedwebgl",
      "type": "WebGL"
    },
    {
      "name": "ext.multiDrawElementsWEBGL",
      "path": "webgl_multi_draw/multidrawelementswebgl",
      "type": "WebGL"
    },
    {
      "name": "ext.queryCounterEXT",
      "path": "ext_disjoint_timer_query/querycounterext",
      "type": "WebGL"
    },
    {
      "name": "ext.restoreContext",
      "path": "webgl_lose_context/restorecontext",
      "type": "WebGL"
    },
    {
      "name": "ExtendableCookieChangeEvent",
      "path": "extendablecookiechangeevent",
      "type": "Events"
    },
    {
      "name": "ExtendableCookieChangeEvent.changed",
      "path": "extendablecookiechangeevent/changed",
      "type": "Events"
    },
    {
      "name": "ExtendableCookieChangeEvent.constructor",
      "path": "extendablecookiechangeevent/extendablecookiechangeevent",
      "type": "Events"
    },
    {
      "name": "ExtendableCookieChangeEvent.deleted",
      "path": "extendablecookiechangeevent/deleted",
      "type": "Events"
    },
    {
      "name": "ExtendableEvent",
      "path": "extendableevent",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableEvent.constructor",
      "path": "extendableevent/extendableevent",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableEvent.waitUntil",
      "path": "extendableevent/waituntil",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent",
      "path": "extendablemessageevent",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.constructor",
      "path": "extendablemessageevent/extendablemessageevent",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.data",
      "path": "extendablemessageevent/data",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.lastEventId",
      "path": "extendablemessageevent/lasteventid",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.origin",
      "path": "extendablemessageevent/origin",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.ports",
      "path": "extendablemessageevent/ports",
      "type": "Service Workers"
    },
    {
      "name": "ExtendableMessageEvent.source",
      "path": "extendablemessageevent/source",
      "type": "Service Workers"
    },
    {
      "name": "FeaturePolicy",
      "path": "featurepolicy",
      "type": "Miscellaneous"
    },
    {
      "name": "FeaturePolicy.allowedFeatures",
      "path": "featurepolicy/allowedfeatures",
      "type": "Miscellaneous"
    },
    {
      "name": "FeaturePolicy.allowsFeature",
      "path": "featurepolicy/allowsfeature",
      "type": "Miscellaneous"
    },
    {
      "name": "FeaturePolicy.features",
      "path": "featurepolicy/features",
      "type": "Miscellaneous"
    },
    {
      "name": "FeaturePolicy.getAllowlistForFeature",
      "path": "featurepolicy/getallowlistforfeature",
      "type": "Miscellaneous"
    },
    {
      "name": "FederatedCredential",
      "path": "federatedcredential",
      "type": "Credential Management"
    },
    {
      "name": "FederatedCredential.constructor",
      "path": "federatedcredential/federatedcredential",
      "type": "Credential Management"
    },
    {
      "name": "FederatedCredential.protocol",
      "path": "federatedcredential/protocol",
      "type": "Credential Management"
    },
    {
      "name": "FederatedCredential.provider",
      "path": "federatedcredential/provider",
      "type": "Credential Management"
    },
    { "name": "Fetch API", "path": "fetch_api", "type": "Fetch" },
    {
      "name": "Fetch API: Basic concepts",
      "path": "fetch_api/basic_concepts",
      "type": "Fetch"
    },
    {
      "name": "Fetch API: Cross-global fetch usage",
      "path": "fetch_api/cross-global_fetch_usage",
      "type": "Fetch"
    },
    {
      "name": "Fetch API: Using Fetch",
      "path": "fetch_api/using_fetch",
      "type": "Fetch"
    },
    { "name": "FetchEvent", "path": "fetchevent", "type": "Fetch" },
    {
      "name": "FetchEvent.client",
      "path": "fetchevent/client",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.clientId",
      "path": "fetchevent/clientid",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.constructor",
      "path": "fetchevent/fetchevent",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.isReload",
      "path": "fetchevent/isreload",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.navigationPreload",
      "path": "fetchevent/navigationpreload",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.PreloadResponse",
      "path": "fetchevent/preloadresponse",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.replacesClientId",
      "path": "fetchevent/replacesclientid",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.request",
      "path": "fetchevent/request",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.respondWith",
      "path": "fetchevent/respondwith",
      "type": "Fetch"
    },
    {
      "name": "FetchEvent.resultingClientId",
      "path": "fetchevent/resultingclientid",
      "type": "Fetch"
    },
    { "name": "File", "path": "file", "type": "File" },
    {
      "name": "File and Directory Entries API",
      "path": "file_and_directory_entries_api",
      "type": "File"
    },
    {
      "name": "File and Directory Entries API: Firefox support",
      "path": "file_and_directory_entries_api/firefox_support",
      "type": "File"
    },
    {
      "name": "File and Directory Entries API: Introduction",
      "path": "file_and_directory_entries_api/introduction",
      "type": "File"
    },
    { "name": "File Handle API", "path": "file_handle_api", "type": "File" },
    {
      "name": "File System Access API",
      "path": "file_system_access_api",
      "type": "File"
    },
    { "name": "File.constructor", "path": "file/file", "type": "File" },
    { "name": "File.fileName", "path": "file/filename", "type": "File" },
    { "name": "File.fileSize", "path": "file/filesize", "type": "File" },
    { "name": "File.getAsBinary", "path": "file/getasbinary", "type": "File" },
    {
      "name": "File.getAsDataURL",
      "path": "file/getasdataurl",
      "type": "File"
    },
    { "name": "File.getAsText", "path": "file/getastext", "type": "File" },
    {
      "name": "File.lastModified",
      "path": "file/lastmodified",
      "type": "File"
    },
    {
      "name": "File.lastModifiedDate",
      "path": "file/lastmodifieddate",
      "type": "File"
    },
    { "name": "File.mozFullPath", "path": "file/mozfullpath", "type": "File" },
    { "name": "File.name", "path": "file/name", "type": "File" },
    { "name": "File.size", "path": "file/size", "type": "File" },
    { "name": "File.type", "path": "file/type", "type": "File" },
    {
      "name": "File.Using files from web applications",
      "path": "file/using_files_from_web_applications",
      "type": "File"
    },
    {
      "name": "File.webkitRelativePath",
      "path": "file/webkitrelativepath",
      "type": "File"
    },
    { "name": "FileEntrySync", "path": "fileentrysync", "type": "File" },
    { "name": "FileError", "path": "fileerror", "type": "File" },
    { "name": "FileException", "path": "fileexception", "type": "File" },
    { "name": "FileList", "path": "filelist", "type": "File" },
    { "name": "FileReader", "path": "filereader", "type": "File" },
    { "name": "FileReader.abort", "path": "filereader/abort", "type": "File" },
    {
      "name": "FileReader.abort event",
      "path": "filereader/abort_event",
      "type": "File"
    },
    {
      "name": "FileReader.constructor",
      "path": "filereader/filereader",
      "type": "File"
    },
    { "name": "FileReader.error", "path": "filereader/error", "type": "File" },
    {
      "name": "FileReader.error event",
      "path": "filereader/error_event",
      "type": "File"
    },
    {
      "name": "FileReader.load event",
      "path": "filereader/load_event",
      "type": "File"
    },
    {
      "name": "FileReader.loadend event",
      "path": "filereader/loadend_event",
      "type": "File"
    },
    {
      "name": "FileReader.loadstart event",
      "path": "filereader/loadstart_event",
      "type": "File"
    },
    {
      "name": "FileReader.onabort",
      "path": "filereader/onabort",
      "type": "File"
    },
    {
      "name": "FileReader.onerror",
      "path": "filereader/onerror",
      "type": "File"
    },
    {
      "name": "FileReader.onload",
      "path": "filereader/onload",
      "type": "File"
    },
    {
      "name": "FileReader.progress event",
      "path": "filereader/progress_event",
      "type": "File"
    },
    {
      "name": "FileReader.readAsArrayBuffer",
      "path": "filereader/readasarraybuffer",
      "type": "File"
    },
    {
      "name": "FileReader.readAsBinaryString",
      "path": "filereader/readasbinarystring",
      "type": "File"
    },
    {
      "name": "FileReader.readAsDataURL",
      "path": "filereader/readasdataurl",
      "type": "File"
    },
    {
      "name": "FileReader.readAsText",
      "path": "filereader/readastext",
      "type": "File"
    },
    {
      "name": "FileReader.readyState",
      "path": "filereader/readystate",
      "type": "File"
    },
    {
      "name": "FileReader.result",
      "path": "filereader/result",
      "type": "File"
    },
    { "name": "FileReaderSync", "path": "filereadersync", "type": "File" },
    {
      "name": "FileReaderSync.readAsArrayBuffer",
      "path": "filereadersync/readasarraybuffer",
      "type": "File"
    },
    {
      "name": "FileReaderSync.readAsBinaryString",
      "path": "filereadersync/readasbinarystring",
      "type": "File"
    },
    {
      "name": "FileReaderSync.readAsDataURL",
      "path": "filereadersync/readasdataurl",
      "type": "File"
    },
    {
      "name": "FileReaderSync.readAsText",
      "path": "filereadersync/readastext",
      "type": "File"
    },
    { "name": "FileRequest", "path": "filerequest", "type": "File" },
    {
      "name": "FileRequest.lockedFile",
      "path": "filerequest/lockedfile",
      "type": "File"
    },
    {
      "name": "FileRequest.onprogress",
      "path": "filerequest/onprogress",
      "type": "File"
    },
    { "name": "FileSystem", "path": "filesystem", "type": "File" },
    { "name": "FileSystem.name", "path": "filesystem/name", "type": "File" },
    { "name": "FileSystem.root", "path": "filesystem/root", "type": "File" },
    {
      "name": "FileSystemDirectoryEntry",
      "path": "filesystemdirectoryentry",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryEntry.createReader",
      "path": "filesystemdirectoryentry/createreader",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryEntry.getDirectory",
      "path": "filesystemdirectoryentry/getdirectory",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryEntry.getFile",
      "path": "filesystemdirectoryentry/getfile",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryEntry.removeRecursively",
      "path": "filesystemdirectoryentry/removerecursively",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle",
      "path": "filesystemdirectoryhandle",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.entries",
      "path": "filesystemdirectoryhandle/entries",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.getDirectoryHandle",
      "path": "filesystemdirectoryhandle/getdirectoryhandle",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.getFileHandle",
      "path": "filesystemdirectoryhandle/getfilehandle",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.keys",
      "path": "filesystemdirectoryhandle/keys",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.removeEntry",
      "path": "filesystemdirectoryhandle/removeentry",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.resolve",
      "path": "filesystemdirectoryhandle/resolve",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryHandle.values",
      "path": "filesystemdirectoryhandle/values",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryReader",
      "path": "filesystemdirectoryreader",
      "type": "File"
    },
    {
      "name": "FileSystemDirectoryReader.readEntries",
      "path": "filesystemdirectoryreader/readentries",
      "type": "File"
    },
    { "name": "FileSystemEntry", "path": "filesystementry", "type": "File" },
    {
      "name": "FileSystemEntry.copyTo",
      "path": "filesystementry/copyto",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.filesystem",
      "path": "filesystementry/filesystem",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.fullPath",
      "path": "filesystementry/fullpath",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.getMetadata",
      "path": "filesystementry/getmetadata",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.getParent",
      "path": "filesystementry/getparent",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.isDirectory",
      "path": "filesystementry/isdirectory",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.isFile",
      "path": "filesystementry/isfile",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.moveTo",
      "path": "filesystementry/moveto",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.name",
      "path": "filesystementry/name",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.remove",
      "path": "filesystementry/remove",
      "type": "File"
    },
    {
      "name": "FileSystemEntry.toURL",
      "path": "filesystementry/tourl",
      "type": "File"
    },
    {
      "name": "FileSystemEntrySync",
      "path": "filesystementrysync",
      "type": "File"
    },
    {
      "name": "FileSystemFileEntry",
      "path": "filesystemfileentry",
      "type": "File"
    },
    {
      "name": "FileSystemFileEntry.createWriter",
      "path": "filesystemfileentry/createwriter",
      "type": "File"
    },
    {
      "name": "FileSystemFileEntry.file",
      "path": "filesystemfileentry/file",
      "type": "File"
    },
    {
      "name": "FileSystemFileHandle",
      "path": "filesystemfilehandle",
      "type": "File"
    },
    {
      "name": "FileSystemFileHandle.createWritable",
      "path": "filesystemfilehandle/createwritable",
      "type": "File"
    },
    {
      "name": "FileSystemFileHandle.getFile",
      "path": "filesystemfilehandle/getfile",
      "type": "File"
    },
    { "name": "FileSystemFlags", "path": "filesystemflags", "type": "File" },
    {
      "name": "FileSystemFlags.create",
      "path": "filesystemflags/create",
      "type": "File"
    },
    {
      "name": "FileSystemFlags.exclusive",
      "path": "filesystemflags/exclusive",
      "type": "File"
    },
    { "name": "FileSystemHandle", "path": "filesystemhandle", "type": "File" },
    {
      "name": "FileSystemHandle.isSameEntry",
      "path": "filesystemhandle/issameentry",
      "type": "File"
    },
    {
      "name": "FileSystemHandle.kind",
      "path": "filesystemhandle/kind",
      "type": "File"
    },
    {
      "name": "FileSystemHandle.name",
      "path": "filesystemhandle/name",
      "type": "File"
    },
    {
      "name": "FileSystemHandle.queryPermission",
      "path": "filesystemhandle/querypermission",
      "type": "File"
    },
    {
      "name": "FileSystemHandle.requestPermission",
      "path": "filesystemhandle/requestpermission",
      "type": "File"
    },
    { "name": "FileSystemSync", "path": "filesystemsync", "type": "File" },
    {
      "name": "FileSystemWritableFileStream",
      "path": "filesystemwritablefilestream",
      "type": "File"
    },
    {
      "name": "FileSystemWritableFileStream.seek",
      "path": "filesystemwritablefilestream/seek",
      "type": "File"
    },
    {
      "name": "FileSystemWritableFileStream.truncate",
      "path": "filesystemwritablefilestream/truncate",
      "type": "File"
    },
    {
      "name": "FileSystemWritableFileStream.write",
      "path": "filesystemwritablefilestream/write",
      "type": "File"
    },
    { "name": "FocusEvent", "path": "focusevent", "type": "Events" },
    {
      "name": "FocusEvent.constructor",
      "path": "focusevent/focusevent",
      "type": "Events"
    },
    {
      "name": "FocusEvent.relatedTarget",
      "path": "focusevent/relatedtarget",
      "type": "Events"
    },
    { "name": "FontFace", "path": "fontface", "type": "CSS" },
    {
      "name": "FontFace.constructor",
      "path": "fontface/fontface",
      "type": "CSS"
    },
    { "name": "FontFace.display", "path": "fontface/display", "type": "CSS" },
    { "name": "FontFace.family", "path": "fontface/family", "type": "CSS" },
    {
      "name": "FontFace.featureSettings",
      "path": "fontface/featuresettings",
      "type": "CSS"
    },
    { "name": "FontFace.load", "path": "fontface/load", "type": "CSS" },
    { "name": "FontFace.loaded", "path": "fontface/loaded", "type": "CSS" },
    { "name": "FontFace.status", "path": "fontface/status", "type": "CSS" },
    { "name": "FontFace.stretch", "path": "fontface/stretch", "type": "CSS" },
    { "name": "FontFace.style", "path": "fontface/style", "type": "CSS" },
    {
      "name": "FontFace.unicodeRange",
      "path": "fontface/unicoderange",
      "type": "CSS"
    },
    { "name": "FontFace.variant", "path": "fontface/variant", "type": "CSS" },
    { "name": "FontFace.weight", "path": "fontface/weight", "type": "CSS" },
    { "name": "FontFaceSet", "path": "fontfaceset", "type": "CSS" },
    { "name": "FontFaceSet.check", "path": "fontfaceset/check", "type": "CSS" },
    { "name": "FontFaceSet.load", "path": "fontfaceset/load", "type": "CSS" },
    { "name": "FontFaceSet.ready", "path": "fontfaceset/ready", "type": "CSS" },
    {
      "name": "FontFaceSetLoadEvent",
      "path": "fontfacesetloadevent",
      "type": "CSS"
    },
    {
      "name": "FontFaceSetLoadEvent.constructor",
      "path": "fontfacesetloadevent/fontfacesetloadevent",
      "type": "CSS"
    },
    {
      "name": "FontFaceSetLoadEvent.fontfaces",
      "path": "fontfacesetloadevent/fontfaces",
      "type": "CSS"
    },
    {
      "name": "Force Touch events",
      "path": "force_touch_events",
      "type": "Miscellaneous"
    },
    { "name": "FormData", "path": "formdata", "type": "XMLHTTPRequest" },
    {
      "name": "FormData.append",
      "path": "formdata/append",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.constructor",
      "path": "formdata/formdata",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.delete",
      "path": "formdata/delete",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.entries",
      "path": "formdata/entries",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.get",
      "path": "formdata/get",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.getAll",
      "path": "formdata/getall",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.has",
      "path": "formdata/has",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.keys",
      "path": "formdata/keys",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.set",
      "path": "formdata/set",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.Using FormData Objects",
      "path": "formdata/using_formdata_objects",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormData.values",
      "path": "formdata/values",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormDataEntryValue",
      "path": "formdataentryvalue",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormDataEvent",
      "path": "formdataevent",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormDataEvent.constructor",
      "path": "formdataevent/formdataevent",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "FormDataEvent.formData",
      "path": "formdataevent/formdata",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "Frame Timing API",
      "path": "frame_timing_api",
      "type": "Performance"
    },
    {
      "name": "Frame Timing API: Using the Frame Timing API",
      "path": "frame_timing_api/using_the_frame_timing_api",
      "type": "Performance"
    },
    {
      "name": "Fullscreen API",
      "path": "fullscreen_api",
      "type": "Fullscreen"
    },
    {
      "name": "Fullscreen API: Guide",
      "path": "fullscreen_api/guide",
      "type": "Fullscreen"
    },
    {
      "name": "FullscreenOptions",
      "path": "fullscreenoptions",
      "type": "Miscellaneous"
    },
    {
      "name": "FullscreenOptions.navigationUI",
      "path": "fullscreenoptions/navigationui",
      "type": "Fullscreen"
    },
    { "name": "GainNode", "path": "gainnode", "type": "Audio" },
    {
      "name": "GainNode.constructor",
      "path": "gainnode/gainnode",
      "type": "Audio"
    },
    { "name": "GainNode.gain", "path": "gainnode/gain", "type": "Audio" },
    { "name": "Gamepad", "path": "gamepad", "type": "WebVR" },
    { "name": "Gamepad API", "path": "gamepad_api", "type": "Miscellaneous" },
    {
      "name": "Gamepad API: Using the Gamepad API",
      "path": "gamepad_api/using_the_gamepad_api",
      "type": "Miscellaneous"
    },
    { "name": "Gamepad.axes", "path": "gamepad/axes", "type": "Miscellaneous" },
    {
      "name": "Gamepad.buttons",
      "path": "gamepad/buttons",
      "type": "Miscellaneous"
    },
    {
      "name": "Gamepad.connected",
      "path": "gamepad/connected",
      "type": "Miscellaneous"
    },
    {
      "name": "Gamepad.displayId",
      "path": "gamepad/displayid",
      "type": "WebVR"
    },
    { "name": "Gamepad.hand", "path": "gamepad/hand", "type": "Miscellaneous" },
    {
      "name": "Gamepad.hapticActuators",
      "path": "gamepad/hapticactuators",
      "type": "Miscellaneous"
    },
    { "name": "Gamepad.id", "path": "gamepad/id", "type": "Miscellaneous" },
    {
      "name": "Gamepad.index",
      "path": "gamepad/index",
      "type": "Miscellaneous"
    },
    {
      "name": "Gamepad.mapping",
      "path": "gamepad/mapping",
      "type": "Miscellaneous"
    },
    { "name": "Gamepad.pose", "path": "gamepad/pose", "type": "Miscellaneous" },
    {
      "name": "Gamepad.timestamp",
      "path": "gamepad/timestamp",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadButton",
      "path": "gamepadbutton",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadButton.pressed",
      "path": "gamepadbutton/pressed",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadButton.value",
      "path": "gamepadbutton/value",
      "type": "Miscellaneous"
    },
    { "name": "GamepadEvent", "path": "gamepadevent", "type": "Events" },
    {
      "name": "GamepadEvent.constructor",
      "path": "gamepadevent/gamepadevent",
      "type": "Events"
    },
    {
      "name": "GamepadEvent.gamepad",
      "path": "gamepadevent/gamepad",
      "type": "Events"
    },
    {
      "name": "GamepadHapticActuator",
      "path": "gamepadhapticactuator",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadHapticActuator.pulse",
      "path": "gamepadhapticactuator/pulse",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadHapticActuator.type",
      "path": "gamepadhapticactuator/type",
      "type": "Miscellaneous"
    },
    { "name": "GamepadPose", "path": "gamepadpose", "type": "Miscellaneous" },
    {
      "name": "GamepadPose.angularAcceleration",
      "path": "gamepadpose/angularacceleration",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.angularVelocity",
      "path": "gamepadpose/angularvelocity",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.hasOrientation",
      "path": "gamepadpose/hasorientation",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.hasPosition",
      "path": "gamepadpose/hasposition",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.linearAcceleration",
      "path": "gamepadpose/linearacceleration",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.linearVelocity",
      "path": "gamepadpose/linearvelocity",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.orientation",
      "path": "gamepadpose/orientation",
      "type": "Miscellaneous"
    },
    {
      "name": "GamepadPose.position",
      "path": "gamepadpose/position",
      "type": "Miscellaneous"
    },
    { "name": "Geolocation", "path": "geolocation", "type": "Geolocation" },
    {
      "name": "Geolocation API",
      "path": "geolocation_api",
      "type": "Geolocation"
    },
    {
      "name": "Geolocation API: Using the Geolocation API",
      "path": "geolocation_api/using_the_geolocation_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Geolocation.clearWatch",
      "path": "geolocation/clearwatch",
      "type": "Geolocation"
    },
    {
      "name": "Geolocation.getCurrentPosition",
      "path": "geolocation/getcurrentposition",
      "type": "Geolocation"
    },
    {
      "name": "Geolocation.watchPosition",
      "path": "geolocation/watchposition",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates",
      "path": "geolocationcoordinates",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.accuracy",
      "path": "geolocationcoordinates/accuracy",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.altitude",
      "path": "geolocationcoordinates/altitude",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.altitudeAccuracy",
      "path": "geolocationcoordinates/altitudeaccuracy",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.heading",
      "path": "geolocationcoordinates/heading",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.latitude",
      "path": "geolocationcoordinates/latitude",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.longitude",
      "path": "geolocationcoordinates/longitude",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationCoordinates.speed",
      "path": "geolocationcoordinates/speed",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPosition",
      "path": "geolocationposition",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPosition.coords",
      "path": "geolocationposition/coords",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPosition.timestamp",
      "path": "geolocationposition/timestamp",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPositionError",
      "path": "geolocationpositionerror",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPositionError.code",
      "path": "geolocationpositionerror/code",
      "type": "Geolocation"
    },
    {
      "name": "GeolocationPositionError.message",
      "path": "geolocationpositionerror/message",
      "type": "Geolocation"
    },
    { "name": "GeometryUtils", "path": "geometryutils", "type": "CSS" },
    { "name": "GestureEvent", "path": "gestureevent", "type": "Events" },
    {
      "name": "getCandidateWindowClientRect",
      "path": "getcandidatewindowclientrect",
      "type": "Miscellaneous"
    },
    {
      "name": "GlobalEventHandlers",
      "path": "globaleventhandlers",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onabort",
      "path": "globaleventhandlers/onabort",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onanimationcancel",
      "path": "globaleventhandlers/onanimationcancel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onanimationend",
      "path": "globaleventhandlers/onanimationend",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onanimationiteration",
      "path": "globaleventhandlers/onanimationiteration",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onanimationstart",
      "path": "globaleventhandlers/onanimationstart",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onauxclick",
      "path": "globaleventhandlers/onauxclick",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onblur",
      "path": "globaleventhandlers/onblur",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oncancel",
      "path": "globaleventhandlers/oncancel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oncanplay",
      "path": "globaleventhandlers/oncanplay",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oncanplaythrough",
      "path": "globaleventhandlers/oncanplaythrough",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onchange",
      "path": "globaleventhandlers/onchange",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onclick",
      "path": "globaleventhandlers/onclick",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onclose",
      "path": "globaleventhandlers/onclose",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oncontextmenu",
      "path": "globaleventhandlers/oncontextmenu",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oncuechange",
      "path": "globaleventhandlers/oncuechange",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondblclick",
      "path": "globaleventhandlers/ondblclick",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondrag",
      "path": "globaleventhandlers/ondrag",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondragend",
      "path": "globaleventhandlers/ondragend",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondragenter",
      "path": "globaleventhandlers/ondragenter",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondragleave",
      "path": "globaleventhandlers/ondragleave",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondragover",
      "path": "globaleventhandlers/ondragover",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondragstart",
      "path": "globaleventhandlers/ondragstart",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondrop",
      "path": "globaleventhandlers/ondrop",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ondurationchange",
      "path": "globaleventhandlers/ondurationchange",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onemptied",
      "path": "globaleventhandlers/onemptied",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onended",
      "path": "globaleventhandlers/onended",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onerror",
      "path": "globaleventhandlers/onerror",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onfocus",
      "path": "globaleventhandlers/onfocus",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onformdata",
      "path": "globaleventhandlers/onformdata",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ongotpointercapture",
      "path": "globaleventhandlers/ongotpointercapture",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oninput",
      "path": "globaleventhandlers/oninput",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.oninvalid",
      "path": "globaleventhandlers/oninvalid",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onkeydown",
      "path": "globaleventhandlers/onkeydown",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onkeypress",
      "path": "globaleventhandlers/onkeypress",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onkeyup",
      "path": "globaleventhandlers/onkeyup",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onload",
      "path": "globaleventhandlers/onload",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onloadeddata",
      "path": "globaleventhandlers/onloadeddata",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onloadedmetadata",
      "path": "globaleventhandlers/onloadedmetadata",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onloadend",
      "path": "globaleventhandlers/onloadend",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onloadstart",
      "path": "globaleventhandlers/onloadstart",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onlostpointercapture",
      "path": "globaleventhandlers/onlostpointercapture",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmousedown",
      "path": "globaleventhandlers/onmousedown",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmouseenter",
      "path": "globaleventhandlers/onmouseenter",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmouseleave",
      "path": "globaleventhandlers/onmouseleave",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmousemove",
      "path": "globaleventhandlers/onmousemove",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmouseout",
      "path": "globaleventhandlers/onmouseout",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmouseover",
      "path": "globaleventhandlers/onmouseover",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmouseup",
      "path": "globaleventhandlers/onmouseup",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onmousewheel",
      "path": "globaleventhandlers/onmousewheel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpause",
      "path": "globaleventhandlers/onpause",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onplay",
      "path": "globaleventhandlers/onplay",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onplaying",
      "path": "globaleventhandlers/onplaying",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointercancel",
      "path": "globaleventhandlers/onpointercancel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerdown",
      "path": "globaleventhandlers/onpointerdown",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerenter",
      "path": "globaleventhandlers/onpointerenter",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerleave",
      "path": "globaleventhandlers/onpointerleave",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointermove",
      "path": "globaleventhandlers/onpointermove",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerout",
      "path": "globaleventhandlers/onpointerout",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerover",
      "path": "globaleventhandlers/onpointerover",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onpointerup",
      "path": "globaleventhandlers/onpointerup",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onreset",
      "path": "globaleventhandlers/onreset",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onresize",
      "path": "globaleventhandlers/onresize",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onscroll",
      "path": "globaleventhandlers/onscroll",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onselect",
      "path": "globaleventhandlers/onselect",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onselectionchange",
      "path": "globaleventhandlers/onselectionchange",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onselectstart",
      "path": "globaleventhandlers/onselectstart",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onsubmit",
      "path": "globaleventhandlers/onsubmit",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontouchcancel",
      "path": "globaleventhandlers/ontouchcancel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontouchend",
      "path": "globaleventhandlers/ontouchend",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontouchmove",
      "path": "globaleventhandlers/ontouchmove",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontouchstart",
      "path": "globaleventhandlers/ontouchstart",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontransitioncancel",
      "path": "globaleventhandlers/ontransitioncancel",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.ontransitionend",
      "path": "globaleventhandlers/ontransitionend",
      "type": "GlobalEventHandlers"
    },
    {
      "name": "GlobalEventHandlers.onwheel",
      "path": "globaleventhandlers/onwheel",
      "type": "GlobalEventHandlers"
    },
    { "name": "GravitySensor", "path": "gravitysensor", "type": "Sensors" },
    {
      "name": "GravitySensor.constructor",
      "path": "gravitysensor/gravitysensor",
      "type": "Sensors"
    },
    { "name": "Gyroscope", "path": "gyroscope", "type": "Sensors" },
    {
      "name": "Gyroscope.constructor",
      "path": "gyroscope/gyroscope",
      "type": "Sensors"
    },
    { "name": "Gyroscope.x", "path": "gyroscope/x", "type": "Sensors" },
    { "name": "Gyroscope.y", "path": "gyroscope/y", "type": "Sensors" },
    { "name": "Gyroscope.z", "path": "gyroscope/z", "type": "Sensors" },
    { "name": "HashChangeEvent", "path": "hashchangeevent", "type": "Events" },
    {
      "name": "HashChangeEvent.newURL",
      "path": "hashchangeevent/newurl",
      "type": "Events"
    },
    {
      "name": "HashChangeEvent.oldURL",
      "path": "hashchangeevent/oldurl",
      "type": "Events"
    },
    { "name": "Headers", "path": "headers", "type": "Fetch" },
    { "name": "Headers.append", "path": "headers/append", "type": "Fetch" },
    {
      "name": "Headers.constructor",
      "path": "headers/headers",
      "type": "Fetch"
    },
    { "name": "Headers.delete", "path": "headers/delete", "type": "Fetch" },
    {
      "name": "Headers.entries",
      "path": "headers/entries",
      "type": "Miscellaneous"
    },
    { "name": "Headers.get", "path": "headers/get", "type": "Fetch" },
    {
      "name": "Headers.getAll",
      "path": "headers/getall",
      "type": "Miscellaneous"
    },
    { "name": "Headers.has", "path": "headers/has", "type": "Fetch" },
    { "name": "Headers.keys", "path": "headers/keys", "type": "Miscellaneous" },
    { "name": "Headers.set", "path": "headers/set", "type": "Fetch" },
    {
      "name": "Headers.values",
      "path": "headers/values",
      "type": "Miscellaneous"
    },
    { "name": "HID", "path": "hid", "type": "Miscellaneous" },
    { "name": "History", "path": "history", "type": "History" },
    { "name": "History API", "path": "history_api", "type": "History" },
    {
      "name": "History API: Example",
      "path": "history_api/example",
      "type": "History"
    },
    {
      "name": "History API: Working with the History API",
      "path": "history_api/working_with_the_history_api",
      "type": "History"
    },
    { "name": "History.back", "path": "history/back", "type": "History" },
    { "name": "History.forward", "path": "history/forward", "type": "History" },
    { "name": "History.go", "path": "history/go", "type": "History" },
    { "name": "History.length", "path": "history/length", "type": "History" },
    {
      "name": "History.pushState",
      "path": "history/pushstate",
      "type": "History"
    },
    {
      "name": "history.pushState()",
      "path": "history_api#The_pushState()_method",
      "type": "History"
    },
    {
      "name": "History.replaceState",
      "path": "history/replacestate",
      "type": "History"
    },
    {
      "name": "History.scrollRestoration",
      "path": "history/scrollrestoration",
      "type": "History"
    },
    { "name": "History.state", "path": "history/state", "type": "History" },
    { "name": "HkdfParams", "path": "hkdfparams", "type": "Cryptography" },
    {
      "name": "HmacImportParams",
      "path": "hmacimportparams",
      "type": "Cryptography"
    },
    {
      "name": "HmacKeyGenParams",
      "path": "hmackeygenparams",
      "type": "Cryptography"
    },
    { "name": "HMDVRDevice", "path": "hmdvrdevice", "type": "WebVR" },
    {
      "name": "HMDVRDevice.getEyeParameters",
      "path": "hmdvrdevice/geteyeparameters",
      "type": "WebVR"
    },
    {
      "name": "HMDVRDevice.setFieldOfView",
      "path": "hmdvrdevice/setfieldofview",
      "type": "WebVR"
    },
    { "name": "HTML DOM API", "path": "html_dom_api", "type": "Elements" },
    {
      "name": "HTML DOM API: Microtask guide",
      "path": "html_dom_api/microtask_guide",
      "type": "Elements"
    },
    {
      "name": "HTML DOM API: Microtask guide.In depth",
      "path": "html_dom_api/microtask_guide/in_depth",
      "type": "Elements"
    },
    {
      "name": "HTML Drag and Drop API",
      "path": "html_drag_and_drop_api",
      "type": "Drag & Drop"
    },
    {
      "name": "HTML Drag and Drop API: Drag operations",
      "path": "html_drag_and_drop_api/drag_operations",
      "type": "Drag & Drop"
    },
    {
      "name": "HTML Drag and Drop API: File drag and drop",
      "path": "html_drag_and_drop_api/file_drag_and_drop",
      "type": "Drag & Drop"
    },
    {
      "name": "HTML Drag and Drop API: Multiple items",
      "path": "html_drag_and_drop_api/multiple_items",
      "type": "Drag & Drop"
    },
    {
      "name": "HTML Drag and Drop API: Recommended drag types",
      "path": "html_drag_and_drop_api/recommended_drag_types",
      "type": "Drag & Drop"
    },
    {
      "name": "HTML Sanitizer API",
      "path": "html_sanitizer_api",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement",
      "path": "htmlanchorelement",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.download",
      "path": "htmlanchorelement/download",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.hash",
      "path": "htmlanchorelement/hash",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.host",
      "path": "htmlanchorelement/host",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.hostname",
      "path": "htmlanchorelement/hostname",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.href",
      "path": "htmlanchorelement/href",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.origin",
      "path": "htmlanchorelement/origin",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.password",
      "path": "htmlanchorelement/password",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.pathname",
      "path": "htmlanchorelement/pathname",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.port",
      "path": "htmlanchorelement/port",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.protocol",
      "path": "htmlanchorelement/protocol",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.referrerPolicy",
      "path": "htmlanchorelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.rel",
      "path": "htmlanchorelement/rel",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.relList",
      "path": "htmlanchorelement/rellist",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.search",
      "path": "htmlanchorelement/search",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.toString",
      "path": "htmlanchorelement/tostring",
      "type": "Elements"
    },
    {
      "name": "HTMLAnchorElement.username",
      "path": "htmlanchorelement/username",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement",
      "path": "htmlareaelement",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.hash",
      "path": "htmlareaelement/hash",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.host",
      "path": "htmlareaelement/host",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.hostname",
      "path": "htmlareaelement/hostname",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.href",
      "path": "htmlareaelement/href",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.origin",
      "path": "htmlareaelement/origin",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.password",
      "path": "htmlareaelement/password",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.pathname",
      "path": "htmlareaelement/pathname",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.port",
      "path": "htmlareaelement/port",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.protocol",
      "path": "htmlareaelement/protocol",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.referrerPolicy",
      "path": "htmlareaelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.rel",
      "path": "htmlareaelement/rel",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.relList",
      "path": "htmlareaelement/rellist",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.search",
      "path": "htmlareaelement/search",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.toString",
      "path": "htmlareaelement/tostring",
      "type": "Elements"
    },
    {
      "name": "HTMLAreaElement.username",
      "path": "htmlareaelement/username",
      "type": "Elements"
    },
    {
      "name": "HTMLAudioElement",
      "path": "htmlaudioelement",
      "type": "Elements"
    },
    {
      "name": "HTMLAudioElement.Audio",
      "path": "htmlaudioelement/audio",
      "type": "Elements"
    },
    {
      "name": "HTMLAudioElement.msAudioCategory",
      "path": "htmlaudioelement/msaudiocategory",
      "type": "Elements"
    },
    {
      "name": "HTMLAudioElement.msAudioDeviceType",
      "path": "htmlaudioelement/msaudiodevicetype",
      "type": "Elements"
    },
    {
      "name": "HTMLBaseElement",
      "path": "htmlbaseelement",
      "type": "Elements"
    },
    {
      "name": "HTMLBaseFontElement",
      "path": "htmlbasefontelement",
      "type": "Elements"
    },
    {
      "name": "HTMLBodyElement",
      "path": "htmlbodyelement",
      "type": "Elements"
    },
    { "name": "HTMLBRElement", "path": "htmlbrelement", "type": "Elements" },
    {
      "name": "HTMLButtonElement",
      "path": "htmlbuttonelement",
      "type": "Elements"
    },
    {
      "name": "HTMLButtonElement.disabled",
      "path": "htmlbuttonelement/disabled",
      "type": "Elements"
    },
    {
      "name": "HTMLButtonElement.labels",
      "path": "htmlbuttonelement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement",
      "path": "htmlcanvaselement",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.captureStream",
      "path": "htmlcanvaselement/capturestream",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.getContext",
      "path": "htmlcanvaselement/getcontext",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.height",
      "path": "htmlcanvaselement/height",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.mozFetchAsStream",
      "path": "htmlcanvaselement/mozfetchasstream",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.mozGetAsFile",
      "path": "htmlcanvaselement/mozgetasfile",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.mozOpaque",
      "path": "htmlcanvaselement/mozopaque",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.toBlob",
      "path": "htmlcanvaselement/toblob",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.toDataURL",
      "path": "htmlcanvaselement/todataurl",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.transferControlToOffscreen",
      "path": "htmlcanvaselement/transfercontroltooffscreen",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.webglcontextcreationerror event",
      "path": "htmlcanvaselement/webglcontextcreationerror_event",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.webglcontextlost event",
      "path": "htmlcanvaselement/webglcontextlost_event",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.webglcontextrestored event",
      "path": "htmlcanvaselement/webglcontextrestored_event",
      "type": "Elements"
    },
    {
      "name": "HTMLCanvasElement.width",
      "path": "htmlcanvaselement/width",
      "type": "Elements"
    },
    { "name": "HTMLCollection", "path": "htmlcollection", "type": "Elements" },
    {
      "name": "HTMLCollection.item",
      "path": "htmlcollection/item",
      "type": "Elements"
    },
    {
      "name": "HTMLCollection.length",
      "path": "htmlcollection/length",
      "type": "Elements"
    },
    {
      "name": "HTMLContentElement",
      "path": "htmlcontentelement",
      "type": "Elements"
    },
    {
      "name": "HTMLContentElement.getDistributedNodes",
      "path": "htmlcontentelement/getdistributednodes",
      "type": "Elements"
    },
    {
      "name": "HTMLContentElement.select",
      "path": "htmlcontentelement/select",
      "type": "Elements"
    },
    {
      "name": "HTMLDataElement",
      "path": "htmldataelement",
      "type": "Elements"
    },
    {
      "name": "HTMLDataElement.value",
      "path": "htmldataelement/value",
      "type": "Elements"
    },
    {
      "name": "HTMLDataListElement",
      "path": "htmldatalistelement",
      "type": "Elements"
    },
    {
      "name": "HTMLDetailsElement",
      "path": "htmldetailselement",
      "type": "Elements"
    },
    {
      "name": "HTMLDetailsElement.toggle event",
      "path": "htmldetailselement/toggle_event",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement",
      "path": "htmldialogelement",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.cancel event",
      "path": "htmldialogelement/cancel_event",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.close",
      "path": "htmldialogelement/close",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.close event",
      "path": "htmldialogelement/close_event",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.open",
      "path": "htmldialogelement/open",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.returnValue",
      "path": "htmldialogelement/returnvalue",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.show",
      "path": "htmldialogelement/show",
      "type": "Elements"
    },
    {
      "name": "HTMLDialogElement.showModal",
      "path": "htmldialogelement/showmodal",
      "type": "Elements"
    },
    { "name": "HTMLDivElement", "path": "htmldivelement", "type": "Elements" },
    {
      "name": "HTMLDListElement",
      "path": "htmldlistelement",
      "type": "Elements"
    },
    { "name": "HTMLDocument", "path": "htmldocument", "type": "Elements" },
    { "name": "HTMLElement", "path": "htmlelement", "type": "Elements" },
    {
      "name": "HTMLElement.accessKey",
      "path": "htmlelement/accesskey",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.accessKeyLabel",
      "path": "htmlelement/accesskeylabel",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.animationcancel event",
      "path": "htmlelement/animationcancel_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.animationend event",
      "path": "htmlelement/animationend_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.animationiteration event",
      "path": "htmlelement/animationiteration_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.animationstart event",
      "path": "htmlelement/animationstart_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.beforeinput event",
      "path": "htmlelement/beforeinput_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.change event",
      "path": "htmlelement/change_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.click",
      "path": "htmlelement/click",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.contentEditable",
      "path": "htmlelement/contenteditable",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.contextMenu",
      "path": "htmlelement/contextmenu",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.dir",
      "path": "htmlelement/dir",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.enterKeyHint",
      "path": "htmlelement/enterkeyhint",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.forceSpellCheck",
      "path": "htmlelement/forcespellcheck",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.gotpointercapture event",
      "path": "htmlelement/gotpointercapture_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.hidden",
      "path": "htmlelement/hidden",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.inert",
      "path": "htmlelement/inert",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.innerText",
      "path": "htmlelement/innertext",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.input event",
      "path": "htmlelement/input_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.isContentEditable",
      "path": "htmlelement/iscontenteditable",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.lang",
      "path": "htmlelement/lang",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.lostpointercapture event",
      "path": "htmlelement/lostpointercapture_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.offsetHeight",
      "path": "htmlelement/offsetheight",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.offsetLeft",
      "path": "htmlelement/offsetleft",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.offsetParent",
      "path": "htmlelement/offsetparent",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.offsetTop",
      "path": "htmlelement/offsettop",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.offsetWidth",
      "path": "htmlelement/offsetwidth",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.oncopy",
      "path": "htmlelement/oncopy",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.oncut",
      "path": "htmlelement/oncut",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.onpaste",
      "path": "htmlelement/onpaste",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.outerText",
      "path": "htmlelement/outertext",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointercancel event",
      "path": "htmlelement/pointercancel_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerdown event",
      "path": "htmlelement/pointerdown_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerenter event",
      "path": "htmlelement/pointerenter_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerleave event",
      "path": "htmlelement/pointerleave_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointermove event",
      "path": "htmlelement/pointermove_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerout event",
      "path": "htmlelement/pointerout_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerover event",
      "path": "htmlelement/pointerover_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.pointerup event",
      "path": "htmlelement/pointerup_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.title",
      "path": "htmlelement/title",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.transitioncancel event",
      "path": "htmlelement/transitioncancel_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.transitionend event",
      "path": "htmlelement/transitionend_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.transitionrun event",
      "path": "htmlelement/transitionrun_event",
      "type": "Elements"
    },
    {
      "name": "HTMLElement.transitionstart event",
      "path": "htmlelement/transitionstart_event",
      "type": "Elements"
    },
    {
      "name": "HTMLEmbedElement",
      "path": "htmlembedelement",
      "type": "Elements"
    },
    {
      "name": "HTMLFieldSetElement",
      "path": "htmlfieldsetelement",
      "type": "Elements"
    },
    {
      "name": "HTMLFontElement",
      "path": "htmlfontelement",
      "type": "Elements"
    },
    {
      "name": "HTMLFontElement.color",
      "path": "htmlfontelement/color",
      "type": "Elements"
    },
    {
      "name": "HTMLFontElement.face",
      "path": "htmlfontelement/face",
      "type": "Elements"
    },
    {
      "name": "HTMLFontElement.size",
      "path": "htmlfontelement/size",
      "type": "Elements"
    },
    {
      "name": "HTMLFormControlsCollection",
      "path": "htmlformcontrolscollection",
      "type": "Elements"
    },
    {
      "name": "HTMLFormControlsCollection.namedItem",
      "path": "htmlformcontrolscollection/nameditem",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement",
      "path": "htmlformelement",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.acceptCharset",
      "path": "htmlformelement/acceptcharset",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.action",
      "path": "htmlformelement/action",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.elements",
      "path": "htmlformelement/elements",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.encoding",
      "path": "htmlformelement/encoding",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.enctype",
      "path": "htmlformelement/enctype",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.formdata event",
      "path": "htmlformelement/formdata_event",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.length",
      "path": "htmlformelement/length",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.method",
      "path": "htmlformelement/method",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.name",
      "path": "htmlformelement/name",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.reportValidity",
      "path": "htmlformelement/reportvalidity",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.requestSubmit",
      "path": "htmlformelement/requestsubmit",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.reset",
      "path": "htmlformelement/reset",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.reset event",
      "path": "htmlformelement/reset_event",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.submit",
      "path": "htmlformelement/submit",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.submit event",
      "path": "htmlformelement/submit_event",
      "type": "Elements"
    },
    {
      "name": "HTMLFormElement.target",
      "path": "htmlformelement/target",
      "type": "Elements"
    },
    {
      "name": "HTMLFrameSetElement",
      "path": "htmlframesetelement",
      "type": "Elements"
    },
    {
      "name": "HTMLHeadElement",
      "path": "htmlheadelement",
      "type": "Elements"
    },
    {
      "name": "HTMLHeadingElement",
      "path": "htmlheadingelement",
      "type": "Elements"
    },
    { "name": "HTMLHRElement", "path": "htmlhrelement", "type": "Elements" },
    {
      "name": "HTMLHtmlElement",
      "path": "htmlhtmlelement",
      "type": "Elements"
    },
    {
      "name": "HTMLHtmlElement.version",
      "path": "htmlhtmlelement/version",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement",
      "path": "htmliframeelement",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.allowPaymentRequest",
      "path": "htmliframeelement/allowpaymentrequest",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.contentDocument",
      "path": "htmliframeelement/contentdocument",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.contentWindow",
      "path": "htmliframeelement/contentwindow",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.csp",
      "path": "htmliframeelement/csp",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.featurePolicy",
      "path": "htmliframeelement/featurepolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.referrerPolicy",
      "path": "htmliframeelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.src",
      "path": "htmliframeelement/src",
      "type": "Elements"
    },
    {
      "name": "HTMLIFrameElement.srcdoc",
      "path": "htmliframeelement/srcdoc",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement",
      "path": "htmlimageelement",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.align",
      "path": "htmlimageelement/align",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.alt",
      "path": "htmlimageelement/alt",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.border",
      "path": "htmlimageelement/border",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.complete",
      "path": "htmlimageelement/complete",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.crossOrigin",
      "path": "htmlimageelement/crossorigin",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.currentSrc",
      "path": "htmlimageelement/currentsrc",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.decode",
      "path": "htmlimageelement/decode",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.decoding",
      "path": "htmlimageelement/decoding",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.height",
      "path": "htmlimageelement/height",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.hspace",
      "path": "htmlimageelement/hspace",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.Image",
      "path": "htmlimageelement/image",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.isMap",
      "path": "htmlimageelement/ismap",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.loading",
      "path": "htmlimageelement/loading",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.longDesc",
      "path": "htmlimageelement/longdesc",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.lowSrc",
      "path": "htmlimageelement/lowsrc",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.name",
      "path": "htmlimageelement/name",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.naturalHeight",
      "path": "htmlimageelement/naturalheight",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.naturalWidth",
      "path": "htmlimageelement/naturalwidth",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.referrerPolicy",
      "path": "htmlimageelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.sizes",
      "path": "htmlimageelement/sizes",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.src",
      "path": "htmlimageelement/src",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.srcset",
      "path": "htmlimageelement/srcset",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.useMap",
      "path": "htmlimageelement/usemap",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.vspace",
      "path": "htmlimageelement/vspace",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.width",
      "path": "htmlimageelement/width",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.x",
      "path": "htmlimageelement/x",
      "type": "Elements"
    },
    {
      "name": "HTMLImageElement.y",
      "path": "htmlimageelement/y",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement",
      "path": "htmlinputelement",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.invalid event",
      "path": "htmlinputelement/invalid_event",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.labels",
      "path": "htmlinputelement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.mozGetFileNameArray",
      "path": "htmlinputelement/mozgetfilenamearray",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.multiple",
      "path": "htmlinputelement/multiple",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.search event",
      "path": "htmlinputelement/search_event",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.select",
      "path": "htmlinputelement/select",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.setRangeText",
      "path": "htmlinputelement/setrangetext",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.setSelectionRange",
      "path": "htmlinputelement/setselectionrange",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.stepDown",
      "path": "htmlinputelement/stepdown",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.stepUp",
      "path": "htmlinputelement/stepup",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.webkitdirectory",
      "path": "htmlinputelement/webkitdirectory",
      "type": "Elements"
    },
    {
      "name": "HTMLInputElement.webkitEntries",
      "path": "htmlinputelement/webkitentries",
      "type": "Elements"
    },
    {
      "name": "HTMLKeygenElement",
      "path": "htmlkeygenelement",
      "type": "Elements"
    },
    {
      "name": "HTMLLabelElement",
      "path": "htmllabelelement",
      "type": "Elements"
    },
    {
      "name": "HTMLLabelElement.control",
      "path": "htmllabelelement/control",
      "type": "Elements"
    },
    {
      "name": "HTMLLabelElement.form",
      "path": "htmllabelelement/form",
      "type": "Elements"
    },
    {
      "name": "HTMLLabelElement.htmlFor",
      "path": "htmllabelelement/htmlfor",
      "type": "Elements"
    },
    {
      "name": "HTMLLegendElement",
      "path": "htmllegendelement",
      "type": "Elements"
    },
    { "name": "HTMLLIElement", "path": "htmllielement", "type": "Elements" },
    {
      "name": "HTMLLinkElement",
      "path": "htmllinkelement",
      "type": "Elements"
    },
    {
      "name": "HTMLLinkElement.as",
      "path": "htmllinkelement/as",
      "type": "Elements"
    },
    {
      "name": "HTMLLinkElement.referrerPolicy",
      "path": "htmllinkelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLLinkElement.rel",
      "path": "htmllinkelement/rel",
      "type": "Elements"
    },
    {
      "name": "HTMLLinkElement.relList",
      "path": "htmllinkelement/rellist",
      "type": "Elements"
    },
    { "name": "HTMLMapElement", "path": "htmlmapelement", "type": "Elements" },
    {
      "name": "HTMLMarqueeElement",
      "path": "htmlmarqueeelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement",
      "path": "htmlmediaelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.abort event",
      "path": "htmlmediaelement/abort_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.audioTracks",
      "path": "htmlmediaelement/audiotracks",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.autoplay",
      "path": "htmlmediaelement/autoplay",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.buffered",
      "path": "htmlmediaelement/buffered",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.canplay event",
      "path": "htmlmediaelement/canplay_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.canplaythrough event",
      "path": "htmlmediaelement/canplaythrough_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.canPlayType",
      "path": "htmlmediaelement/canplaytype",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.captureStream",
      "path": "htmlmediaelement/capturestream",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.controller",
      "path": "htmlmediaelement/controller",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.controls",
      "path": "htmlmediaelement/controls",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.controlsList",
      "path": "htmlmediaelement/controlslist",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.crossOrigin",
      "path": "htmlmediaelement/crossorigin",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.currentSrc",
      "path": "htmlmediaelement/currentsrc",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.currentTime",
      "path": "htmlmediaelement/currenttime",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.defaultMuted",
      "path": "htmlmediaelement/defaultmuted",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.defaultPlaybackRate",
      "path": "htmlmediaelement/defaultplaybackrate",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.disableRemotePlayback",
      "path": "htmlmediaelement/disableremoteplayback",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.duration",
      "path": "htmlmediaelement/duration",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.durationchange event",
      "path": "htmlmediaelement/durationchange_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.emptied event",
      "path": "htmlmediaelement/emptied_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.ended",
      "path": "htmlmediaelement/ended",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.ended event",
      "path": "htmlmediaelement/ended_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.error",
      "path": "htmlmediaelement/error",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.error event",
      "path": "htmlmediaelement/error_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.fastSeek",
      "path": "htmlmediaelement/fastseek",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.load",
      "path": "htmlmediaelement/load",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.loadeddata event",
      "path": "htmlmediaelement/loadeddata_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.loadedmetadata event",
      "path": "htmlmediaelement/loadedmetadata_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.loadstart event",
      "path": "htmlmediaelement/loadstart_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.loop",
      "path": "htmlmediaelement/loop",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.mediaGroup",
      "path": "htmlmediaelement/mediagroup",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.msClearEffects",
      "path": "htmlmediaelement/mscleareffects",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.msInsertAudioEffect",
      "path": "htmlmediaelement/msinsertaudioeffect",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.muted",
      "path": "htmlmediaelement/muted",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.networkState",
      "path": "htmlmediaelement/networkstate",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.onencrypted",
      "path": "htmlmediaelement/onencrypted",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.onerror",
      "path": "htmlmediaelement/onerror",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.onwaitingforkey",
      "path": "htmlmediaelement/onwaitingforkey",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.pause",
      "path": "htmlmediaelement/pause",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.pause event",
      "path": "htmlmediaelement/pause_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.paused",
      "path": "htmlmediaelement/paused",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.play",
      "path": "htmlmediaelement/play",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.play event",
      "path": "htmlmediaelement/play_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.playbackRate",
      "path": "htmlmediaelement/playbackrate",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.playing event",
      "path": "htmlmediaelement/playing_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.progress event",
      "path": "htmlmediaelement/progress_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.ratechange event",
      "path": "htmlmediaelement/ratechange_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.readyState",
      "path": "htmlmediaelement/readystate",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.seekable",
      "path": "htmlmediaelement/seekable",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.seeked event",
      "path": "htmlmediaelement/seeked_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.seeking event",
      "path": "htmlmediaelement/seeking_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.seekToNextFrame",
      "path": "htmlmediaelement/seektonextframe",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.setMediaKeys",
      "path": "htmlmediaelement/setmediakeys",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.setSinkId",
      "path": "htmlmediaelement/setsinkid",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.sinkId",
      "path": "htmlmediaelement/sinkid",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.src",
      "path": "htmlmediaelement/src",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.srcObject",
      "path": "htmlmediaelement/srcobject",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.stalled event",
      "path": "htmlmediaelement/stalled_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.suspend event",
      "path": "htmlmediaelement/suspend_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.textTracks",
      "path": "htmlmediaelement/texttracks",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.timeupdate event",
      "path": "htmlmediaelement/timeupdate_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.videoTracks",
      "path": "htmlmediaelement/videotracks",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.volume",
      "path": "htmlmediaelement/volume",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.volumechange event",
      "path": "htmlmediaelement/volumechange_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMediaElement.waiting event",
      "path": "htmlmediaelement/waiting_event",
      "type": "Elements"
    },
    {
      "name": "HTMLMenuElement",
      "path": "htmlmenuelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMenuItemElement",
      "path": "htmlmenuitemelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMetaElement",
      "path": "htmlmetaelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMeterElement",
      "path": "htmlmeterelement",
      "type": "Elements"
    },
    {
      "name": "HTMLMeterElement.labels",
      "path": "htmlmeterelement/labels",
      "type": "Elements"
    },
    { "name": "HTMLModElement", "path": "htmlmodelement", "type": "Elements" },
    {
      "name": "HTMLObjectElement",
      "path": "htmlobjectelement",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.checkValidity",
      "path": "htmlobjectelement/checkvalidity",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.contentDocument",
      "path": "htmlobjectelement/contentdocument",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.contentWindow",
      "path": "htmlobjectelement/contentwindow",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.data",
      "path": "htmlobjectelement/data",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.form",
      "path": "htmlobjectelement/form",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.height",
      "path": "htmlobjectelement/height",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.name",
      "path": "htmlobjectelement/name",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.setCustomValidity",
      "path": "htmlobjectelement/setcustomvalidity",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.type",
      "path": "htmlobjectelement/type",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.useMap",
      "path": "htmlobjectelement/usemap",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.validationMessage",
      "path": "htmlobjectelement/validationmessage",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.validity",
      "path": "htmlobjectelement/validity",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.width",
      "path": "htmlobjectelement/width",
      "type": "Elements"
    },
    {
      "name": "HTMLObjectElement.willValidate",
      "path": "htmlobjectelement/willvalidate",
      "type": "Elements"
    },
    {
      "name": "HTMLOListElement",
      "path": "htmlolistelement",
      "type": "Elements"
    },
    {
      "name": "HTMLOptGroupElement",
      "path": "htmloptgroupelement",
      "type": "Elements"
    },
    {
      "name": "HTMLOptionElement",
      "path": "htmloptionelement",
      "type": "Elements"
    },
    {
      "name": "HTMLOptionElement.Option",
      "path": "htmloptionelement/option",
      "type": "Elements"
    },
    {
      "name": "HTMLOptionsCollection",
      "path": "htmloptionscollection",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement",
      "path": "htmlorforeignelement",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement.blur",
      "path": "htmlorforeignelement/blur",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement.dataset",
      "path": "htmlorforeignelement/dataset",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement.focus",
      "path": "htmlorforeignelement/focus",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement.nonce",
      "path": "htmlorforeignelement/nonce",
      "type": "Elements"
    },
    {
      "name": "HTMLOrForeignElement.tabIndex",
      "path": "htmlorforeignelement/tabindex",
      "type": "Elements"
    },
    {
      "name": "HTMLOutputElement",
      "path": "htmloutputelement",
      "type": "Elements"
    },
    {
      "name": "HTMLOutputElement.labels",
      "path": "htmloutputelement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLParagraphElement",
      "path": "htmlparagraphelement",
      "type": "Elements"
    },
    {
      "name": "HTMLParamElement",
      "path": "htmlparamelement",
      "type": "Elements"
    },
    {
      "name": "HTMLPictureElement",
      "path": "htmlpictureelement",
      "type": "Elements"
    },
    { "name": "HTMLPreElement", "path": "htmlpreelement", "type": "Elements" },
    {
      "name": "HTMLProgressElement",
      "path": "htmlprogresselement",
      "type": "Elements"
    },
    {
      "name": "HTMLProgressElement.labels",
      "path": "htmlprogresselement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLQuoteElement",
      "path": "htmlquoteelement",
      "type": "Elements"
    },
    {
      "name": "HTMLScriptElement",
      "path": "htmlscriptelement",
      "type": "Elements"
    },
    {
      "name": "HTMLScriptElement.referrerPolicy",
      "path": "htmlscriptelement/referrerpolicy",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement",
      "path": "htmlselectelement",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.add",
      "path": "htmlselectelement/add",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.autofocus",
      "path": "htmlselectelement/autofocus",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.checkValidity",
      "path": "htmlselectelement/checkvalidity",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.disabled",
      "path": "htmlselectelement/disabled",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.form",
      "path": "htmlselectelement/form",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.item",
      "path": "htmlselectelement/item",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.labels",
      "path": "htmlselectelement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.namedItem",
      "path": "htmlselectelement/nameditem",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.options",
      "path": "htmlselectelement/options",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.remove",
      "path": "htmlselectelement/remove",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.selectedIndex",
      "path": "htmlselectelement/selectedindex",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.selectedOptions",
      "path": "htmlselectelement/selectedoptions",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.setCustomValidity",
      "path": "htmlselectelement/setcustomvalidity",
      "type": "Elements"
    },
    {
      "name": "HTMLSelectElement.type",
      "path": "htmlselectelement/type",
      "type": "Elements"
    },
    {
      "name": "HTMLShadowElement",
      "path": "htmlshadowelement",
      "type": "Elements"
    },
    {
      "name": "HTMLShadowElement.getDistributedNodes",
      "path": "htmlshadowelement/getdistributednodes",
      "type": "Elements"
    },
    {
      "name": "HTMLSlotElement",
      "path": "htmlslotelement",
      "type": "Elements"
    },
    {
      "name": "HTMLSlotElement.assignedElements",
      "path": "htmlslotelement/assignedelements",
      "type": "Elements"
    },
    {
      "name": "HTMLSlotElement.assignedNodes",
      "path": "htmlslotelement/assignednodes",
      "type": "Elements"
    },
    {
      "name": "HTMLSlotElement.name",
      "path": "htmlslotelement/name",
      "type": "Elements"
    },
    {
      "name": "HTMLSlotElement.slotchange event",
      "path": "htmlslotelement/slotchange_event",
      "type": "Elements"
    },
    {
      "name": "HTMLSourceElement",
      "path": "htmlsourceelement",
      "type": "Elements"
    },
    {
      "name": "HTMLSpanElement",
      "path": "htmlspanelement",
      "type": "Elements"
    },
    {
      "name": "HTMLStyleElement",
      "path": "htmlstyleelement",
      "type": "Elements"
    },
    {
      "name": "HTMLStyleElement.media",
      "path": "htmlstyleelement/media",
      "type": "Elements"
    },
    {
      "name": "HTMLStyleElement.scoped",
      "path": "htmlstyleelement/scoped",
      "type": "Elements"
    },
    {
      "name": "HTMLStyleElement.type",
      "path": "htmlstyleelement/type",
      "type": "Elements"
    },
    {
      "name": "HTMLTableCaptionElement",
      "path": "htmltablecaptionelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTableCellElement",
      "path": "htmltablecellelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTableColElement",
      "path": "htmltablecolelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement",
      "path": "htmltableelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.align",
      "path": "htmltableelement/align",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.bgColor",
      "path": "htmltableelement/bgcolor",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.border",
      "path": "htmltableelement/border",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.caption",
      "path": "htmltableelement/caption",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.cellPadding",
      "path": "htmltableelement/cellpadding",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.cellSpacing",
      "path": "htmltableelement/cellspacing",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.createCaption",
      "path": "htmltableelement/createcaption",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.createTBody",
      "path": "htmltableelement/createtbody",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.createTFoot",
      "path": "htmltableelement/createtfoot",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.createTHead",
      "path": "htmltableelement/createthead",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.deleteCaption",
      "path": "htmltableelement/deletecaption",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.deleteRow",
      "path": "htmltableelement/deleterow",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.deleteTFoot",
      "path": "htmltableelement/deletetfoot",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.deleteTHead",
      "path": "htmltableelement/deletethead",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.frame",
      "path": "htmltableelement/frame",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.insertRow",
      "path": "htmltableelement/insertrow",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.rows",
      "path": "htmltableelement/rows",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.rules",
      "path": "htmltableelement/rules",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.summary",
      "path": "htmltableelement/summary",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.tBodies",
      "path": "htmltableelement/tbodies",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.tFoot",
      "path": "htmltableelement/tfoot",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.tHead",
      "path": "htmltableelement/thead",
      "type": "Elements"
    },
    {
      "name": "HTMLTableElement.width",
      "path": "htmltableelement/width",
      "type": "Elements"
    },
    {
      "name": "HTMLTableRowElement",
      "path": "htmltablerowelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTableRowElement.insertCell",
      "path": "htmltablerowelement/insertcell",
      "type": "Elements"
    },
    {
      "name": "HTMLTableRowElement.rowIndex",
      "path": "htmltablerowelement/rowindex",
      "type": "Elements"
    },
    {
      "name": "HTMLTableSectionElement",
      "path": "htmltablesectionelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTemplateElement",
      "path": "htmltemplateelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTemplateElement.content",
      "path": "htmltemplateelement/content",
      "type": "Elements"
    },
    {
      "name": "HTMLTextAreaElement",
      "path": "htmltextareaelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTextAreaElement.labels",
      "path": "htmltextareaelement/labels",
      "type": "Elements"
    },
    {
      "name": "HTMLTimeElement",
      "path": "htmltimeelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTimeElement.dateTime",
      "path": "htmltimeelement/datetime",
      "type": "Elements"
    },
    {
      "name": "HTMLTitleElement",
      "path": "htmltitleelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTrackElement",
      "path": "htmltrackelement",
      "type": "Elements"
    },
    {
      "name": "HTMLTrackElement.cuechange event",
      "path": "htmltrackelement/cuechange_event",
      "type": "Elements"
    },
    {
      "name": "HTMLTrackElement.src",
      "path": "htmltrackelement/src",
      "type": "Elements"
    },
    {
      "name": "HTMLUListElement",
      "path": "htmlulistelement",
      "type": "Elements"
    },
    {
      "name": "HTMLUnknownElement",
      "path": "htmlunknownelement",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement",
      "path": "htmlvideoelement",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.autoPictureInPicture",
      "path": "htmlvideoelement/autopictureinpicture",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.disablePictureInPicture",
      "path": "htmlvideoelement/disablepictureinpicture",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.enterpictureinpicture event",
      "path": "htmlvideoelement/enterpictureinpicture_event",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.getVideoPlaybackQuality",
      "path": "htmlvideoelement/getvideoplaybackquality",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.leavepictureinpicture event",
      "path": "htmlvideoelement/leavepictureinpicture_event",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msFrameStep",
      "path": "htmlvideoelement/msframestep",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msHorizontalMirror",
      "path": "htmlvideoelement/mshorizontalmirror",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msInsertVideoEffect",
      "path": "htmlvideoelement/msinsertvideoeffect",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msIsLayoutOptimalForPlayback",
      "path": "htmlvideoelement/msislayoutoptimalforplayback",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msIsStereo3D",
      "path": "htmlvideoelement/msisstereo3d",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msSetVideoRectangle",
      "path": "htmlvideoelement/mssetvideorectangle",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msStereo3DPackingMode",
      "path": "htmlvideoelement/msstereo3dpackingmode",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msStereo3DRenderMode",
      "path": "htmlvideoelement/msstereo3drendermode",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.msZoom",
      "path": "htmlvideoelement/mszoom",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.onenterpictureinpicture",
      "path": "htmlvideoelement/onenterpictureinpicture",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.onleavepictureinpicture",
      "path": "htmlvideoelement/onleavepictureinpicture",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.onMSVideoFormatChanged",
      "path": "htmlvideoelement/onmsvideoformatchanged",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.onMSVideoFrameStepCompleted",
      "path": "htmlvideoelement/onmsvideoframestepcompleted",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.onMSVideoOptimalLayoutChanged",
      "path": "htmlvideoelement/onmsvideooptimallayoutchanged",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.requestPictureInPicture",
      "path": "htmlvideoelement/requestpictureinpicture",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.videoHeight",
      "path": "htmlvideoelement/videoheight",
      "type": "Elements"
    },
    {
      "name": "HTMLVideoElement.videoWidth",
      "path": "htmlvideoelement/videowidth",
      "type": "Elements"
    },
    { "name": "IDBCursor", "path": "idbcursor", "type": "IndexedDB" },
    {
      "name": "IDBCursor.advance",
      "path": "idbcursor/advance",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.continue",
      "path": "idbcursor/continue",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.continuePrimaryKey",
      "path": "idbcursor/continueprimarykey",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.delete",
      "path": "idbcursor/delete",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.direction",
      "path": "idbcursor/direction",
      "type": "IndexedDB"
    },
    { "name": "IDBCursor.key", "path": "idbcursor/key", "type": "IndexedDB" },
    {
      "name": "IDBCursor.primaryKey",
      "path": "idbcursor/primarykey",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.request",
      "path": "idbcursor/request",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.source",
      "path": "idbcursor/source",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursor.update",
      "path": "idbcursor/update",
      "type": "IndexedDB"
    },
    { "name": "IDBCursorSync", "path": "idbcursorsync", "type": "IndexedDB" },
    {
      "name": "IDBCursorWithValue",
      "path": "idbcursorwithvalue",
      "type": "IndexedDB"
    },
    {
      "name": "IDBCursorWithValue.value",
      "path": "idbcursorwithvalue/value",
      "type": "IndexedDB"
    },
    { "name": "IDBDatabase", "path": "idbdatabase", "type": "IndexedDB" },
    {
      "name": "IDBDatabase.abort event",
      "path": "idbdatabase/abort_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.close",
      "path": "idbdatabase/close",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.close event",
      "path": "idbdatabase/close_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.createObjectStore",
      "path": "idbdatabase/createobjectstore",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.deleteObjectStore",
      "path": "idbdatabase/deleteobjectstore",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.error event",
      "path": "idbdatabase/error_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.name",
      "path": "idbdatabase/name",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.objectStoreNames",
      "path": "idbdatabase/objectstorenames",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.onabort",
      "path": "idbdatabase/onabort",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.onclose",
      "path": "idbdatabase/onclose",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.onerror",
      "path": "idbdatabase/onerror",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.onversionchange",
      "path": "idbdatabase/onversionchange",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.transaction",
      "path": "idbdatabase/transaction",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.version",
      "path": "idbdatabase/version",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabase.versionchange event",
      "path": "idbdatabase/versionchange_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabaseException",
      "path": "idbdatabaseexception",
      "type": "IndexedDB"
    },
    {
      "name": "IDBDatabaseSync",
      "path": "idbdatabasesync",
      "type": "IndexedDB"
    },
    { "name": "IDBEnvironment", "path": "idbenvironment", "type": "IndexedDB" },
    {
      "name": "IDBEnvironmentSync",
      "path": "idbenvironmentsync",
      "type": "IndexedDB"
    },
    { "name": "IDBFactory", "path": "idbfactory", "type": "IndexedDB" },
    { "name": "IDBFactory.cmp", "path": "idbfactory/cmp", "type": "IndexedDB" },
    {
      "name": "IDBFactory.databases",
      "path": "idbfactory/databases",
      "type": "IndexedDB"
    },
    {
      "name": "IDBFactory.deleteDatabase",
      "path": "idbfactory/deletedatabase",
      "type": "IndexedDB"
    },
    {
      "name": "IDBFactory.open",
      "path": "idbfactory/open",
      "type": "IndexedDB"
    },
    { "name": "IDBFactorySync", "path": "idbfactorysync", "type": "IndexedDB" },
    { "name": "IDBIndex", "path": "idbindex", "type": "IndexedDB" },
    { "name": "IDBIndex.count", "path": "idbindex/count", "type": "IndexedDB" },
    { "name": "IDBIndex.get", "path": "idbindex/get", "type": "IndexedDB" },
    {
      "name": "IDBIndex.getAll",
      "path": "idbindex/getall",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.getAllKeys",
      "path": "idbindex/getallkeys",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.getKey",
      "path": "idbindex/getkey",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.isAutoLocale",
      "path": "idbindex/isautolocale",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.keyPath",
      "path": "idbindex/keypath",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.locale",
      "path": "idbindex/locale",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.multiEntry",
      "path": "idbindex/multientry",
      "type": "IndexedDB"
    },
    { "name": "IDBIndex.name", "path": "idbindex/name", "type": "IndexedDB" },
    {
      "name": "IDBIndex.objectStore",
      "path": "idbindex/objectstore",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.openCursor",
      "path": "idbindex/opencursor",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.openKeyCursor",
      "path": "idbindex/openkeycursor",
      "type": "IndexedDB"
    },
    {
      "name": "IDBIndex.unique",
      "path": "idbindex/unique",
      "type": "IndexedDB"
    },
    { "name": "IDBIndexSync", "path": "idbindexsync", "type": "IndexedDB" },
    { "name": "IDBKeyRange", "path": "idbkeyrange", "type": "IndexedDB" },
    {
      "name": "IDBKeyRange.bound",
      "path": "idbkeyrange/bound",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.includes",
      "path": "idbkeyrange/includes",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.lower",
      "path": "idbkeyrange/lower",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.lowerBound",
      "path": "idbkeyrange/lowerbound",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.lowerOpen",
      "path": "idbkeyrange/loweropen",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.only",
      "path": "idbkeyrange/only",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.upper",
      "path": "idbkeyrange/upper",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.upperBound",
      "path": "idbkeyrange/upperbound",
      "type": "IndexedDB"
    },
    {
      "name": "IDBKeyRange.upperOpen",
      "path": "idbkeyrange/upperopen",
      "type": "IndexedDB"
    },
    {
      "name": "IDBLocaleAwareKeyRange",
      "path": "idblocaleawarekeyrange",
      "type": "IndexedDB"
    },
    { "name": "IDBMutableFile", "path": "idbmutablefile", "type": "IndexedDB" },
    {
      "name": "IDBMutableFile.getFile",
      "path": "idbmutablefile/getfile",
      "type": "IndexedDB"
    },
    {
      "name": "IDBMutableFile.name",
      "path": "idbmutablefile/name",
      "type": "IndexedDB"
    },
    {
      "name": "IDBMutableFile.onabort",
      "path": "idbmutablefile/onabort",
      "type": "IndexedDB"
    },
    {
      "name": "IDBMutableFile.onerror",
      "path": "idbmutablefile/onerror",
      "type": "IndexedDB"
    },
    {
      "name": "IDBMutableFile.open",
      "path": "idbmutablefile/open",
      "type": "IndexedDB"
    },
    {
      "name": "IDBMutableFile.type",
      "path": "idbmutablefile/type",
      "type": "IndexedDB"
    },
    { "name": "IDBObjectStore", "path": "idbobjectstore", "type": "IndexedDB" },
    {
      "name": "IDBObjectStore.add",
      "path": "idbobjectstore/add",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.autoIncrement",
      "path": "idbobjectstore/autoincrement",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.clear",
      "path": "idbobjectstore/clear",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.count",
      "path": "idbobjectstore/count",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.createIndex",
      "path": "idbobjectstore/createindex",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.delete",
      "path": "idbobjectstore/delete",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.deleteIndex",
      "path": "idbobjectstore/deleteindex",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.get",
      "path": "idbobjectstore/get",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.getAll",
      "path": "idbobjectstore/getall",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.getAllKeys",
      "path": "idbobjectstore/getallkeys",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.getKey",
      "path": "idbobjectstore/getkey",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.index",
      "path": "idbobjectstore/index",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.indexNames",
      "path": "idbobjectstore/indexnames",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.keyPath",
      "path": "idbobjectstore/keypath",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.name",
      "path": "idbobjectstore/name",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.openCursor",
      "path": "idbobjectstore/opencursor",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.openKeyCursor",
      "path": "idbobjectstore/openkeycursor",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.put",
      "path": "idbobjectstore/put",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStore.transaction",
      "path": "idbobjectstore/transaction",
      "type": "IndexedDB"
    },
    {
      "name": "IDBObjectStoreSync",
      "path": "idbobjectstoresync",
      "type": "IndexedDB"
    },
    {
      "name": "IDBOpenDBRequest",
      "path": "idbopendbrequest",
      "type": "IndexedDB"
    },
    {
      "name": "IDBOpenDBRequest.blocked event",
      "path": "idbopendbrequest/blocked_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBOpenDBRequest.onblocked",
      "path": "idbopendbrequest/onblocked",
      "type": "IndexedDB"
    },
    {
      "name": "IDBOpenDBRequest.onupgradeneeded",
      "path": "idbopendbrequest/onupgradeneeded",
      "type": "IndexedDB"
    },
    {
      "name": "IDBOpenDBRequest.upgradeneeded event",
      "path": "idbopendbrequest/upgradeneeded_event",
      "type": "IndexedDB"
    },
    { "name": "IDBRequest", "path": "idbrequest", "type": "IndexedDB" },
    {
      "name": "IDBRequest.error",
      "path": "idbrequest/error",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.error event",
      "path": "idbrequest/error_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.onerror",
      "path": "idbrequest/onerror",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.onsuccess",
      "path": "idbrequest/onsuccess",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.readyState",
      "path": "idbrequest/readystate",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.result",
      "path": "idbrequest/result",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.source",
      "path": "idbrequest/source",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.success event",
      "path": "idbrequest/success_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBRequest.transaction",
      "path": "idbrequest/transaction",
      "type": "IndexedDB"
    },
    { "name": "IDBTransaction", "path": "idbtransaction", "type": "IndexedDB" },
    {
      "name": "IDBTransaction.abort",
      "path": "idbtransaction/abort",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.abort event",
      "path": "idbtransaction/abort_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.commit",
      "path": "idbtransaction/commit",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.complete event",
      "path": "idbtransaction/complete_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.db",
      "path": "idbtransaction/db",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.durability",
      "path": "idbtransaction/durability",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.error",
      "path": "idbtransaction/error",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.error event",
      "path": "idbtransaction/error_event",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.mode",
      "path": "idbtransaction/mode",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.objectStore",
      "path": "idbtransaction/objectstore",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.ObjectStoreNames",
      "path": "idbtransaction/objectstorenames",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.onabort",
      "path": "idbtransaction/onabort",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.oncomplete",
      "path": "idbtransaction/oncomplete",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransaction.onerror",
      "path": "idbtransaction/onerror",
      "type": "IndexedDB"
    },
    {
      "name": "IDBTransactionSync",
      "path": "idbtransactionsync",
      "type": "IndexedDB"
    },
    {
      "name": "IDBVersionChangeEvent",
      "path": "idbversionchangeevent",
      "type": "IndexedDB"
    },
    {
      "name": "IDBVersionChangeEvent.constructor",
      "path": "idbversionchangeevent/idbversionchangeevent",
      "type": "IndexedDB"
    },
    {
      "name": "IDBVersionChangeEvent.newVersion",
      "path": "idbversionchangeevent/newversion",
      "type": "IndexedDB"
    },
    {
      "name": "IDBVersionChangeEvent.oldVersion",
      "path": "idbversionchangeevent/oldversion",
      "type": "IndexedDB"
    },
    {
      "name": "IDBVersionChangeEvent.version",
      "path": "idbversionchangeevent/version",
      "type": "IndexedDB"
    },
    { "name": "IdleDeadline", "path": "idledeadline", "type": "Scheduling" },
    {
      "name": "IdleDeadline.didTimeout",
      "path": "idledeadline/didtimeout",
      "type": "Scheduling"
    },
    {
      "name": "IdleDeadline.timeRemaining",
      "path": "idledeadline/timeremaining",
      "type": "Scheduling"
    },
    { "name": "IIRFilterNode", "path": "iirfilternode", "type": "Audio" },
    {
      "name": "IIRFilterNode.constructor",
      "path": "iirfilternode/iirfilternode",
      "type": "Audio"
    },
    {
      "name": "IIRFilterNode.getFrequencyResponse",
      "path": "iirfilternode/getfrequencyresponse",
      "type": "Audio"
    },
    { "name": "ImageBitmap", "path": "imagebitmap", "type": "Canvas" },
    {
      "name": "ImageBitmap.close",
      "path": "imagebitmap/close",
      "type": "Canvas"
    },
    {
      "name": "ImageBitmap.height",
      "path": "imagebitmap/height",
      "type": "Canvas"
    },
    {
      "name": "ImageBitmap.width",
      "path": "imagebitmap/width",
      "type": "Canvas"
    },
    {
      "name": "ImageBitmapRenderingContext",
      "path": "imagebitmaprenderingcontext",
      "type": "Canvas"
    },
    {
      "name": "ImageBitmapRenderingContext.transferFromImageBitmap",
      "path": "imagebitmaprenderingcontext/transferfromimagebitmap",
      "type": "Canvas"
    },
    { "name": "ImageCapture", "path": "imagecapture", "type": "Media Streams" },
    {
      "name": "ImageCapture.constructor",
      "path": "imagecapture/imagecapture",
      "type": "Media Streams"
    },
    {
      "name": "ImageCapture.getPhotoCapabilities",
      "path": "imagecapture/getphotocapabilities",
      "type": "Media Streams"
    },
    {
      "name": "ImageCapture.getPhotoSettings",
      "path": "imagecapture/getphotosettings",
      "type": "Media Streams"
    },
    {
      "name": "ImageCapture.grabFrame",
      "path": "imagecapture/grabframe",
      "type": "Media Streams"
    },
    {
      "name": "ImageCapture.takePhoto",
      "path": "imagecapture/takephoto",
      "type": "Media Streams"
    },
    {
      "name": "ImageCapture.track",
      "path": "imagecapture/track",
      "type": "Media Streams"
    },
    { "name": "ImageData", "path": "imagedata", "type": "Canvas" },
    {
      "name": "ImageData.constructor",
      "path": "imagedata/imagedata",
      "type": "Canvas"
    },
    { "name": "ImageData.data", "path": "imagedata/data", "type": "Canvas" },
    {
      "name": "ImageData.height",
      "path": "imagedata/height",
      "type": "Canvas"
    },
    { "name": "ImageData.width", "path": "imagedata/width", "type": "Canvas" },
    { "name": "IndexedDB API", "path": "indexeddb_api", "type": "IndexedDB" },
    {
      "name": "IndexedDB API: Basic Concepts Behind IndexedDB",
      "path": "indexeddb_api/basic_concepts_behind_indexeddb",
      "type": "IndexedDB"
    },
    {
      "name": "IndexedDB API: Browser storage limits and eviction criteria",
      "path": "indexeddb_api/browser_storage_limits_and_eviction_criteria",
      "type": "IndexedDB"
    },
    {
      "name": "IndexedDB API: Checking when a deadline is due",
      "path": "indexeddb_api/checking_when_a_deadline_is_due",
      "type": "IndexedDB"
    },
    {
      "name": "IndexedDB API: Using IndexedDB",
      "path": "indexeddb_api/using_indexeddb",
      "type": "IndexedDB"
    },
    {
      "name": "InputDeviceCapabilities",
      "path": "inputdevicecapabilities",
      "type": "Miscellaneous"
    },
    {
      "name": "InputDeviceCapabilities API",
      "path": "inputdevicecapabilities_api",
      "type": "Miscellaneous"
    },
    {
      "name": "InputDeviceCapabilities.constructor",
      "path": "inputdevicecapabilities/inputdevicecapabilities",
      "type": "Miscellaneous"
    },
    {
      "name": "InputDeviceCapabilities.firesTouchEvents",
      "path": "inputdevicecapabilities/firestouchevents",
      "type": "Events"
    },
    { "name": "InputEvent", "path": "inputevent", "type": "Events" },
    {
      "name": "InputEvent.constructor",
      "path": "inputevent/inputevent",
      "type": "Events"
    },
    { "name": "InputEvent.data", "path": "inputevent/data", "type": "Events" },
    {
      "name": "InputEvent.dataTransfer",
      "path": "inputevent/datatransfer",
      "type": "Events"
    },
    {
      "name": "InputEvent.getTargetRanges",
      "path": "inputevent/gettargetranges",
      "type": "Events"
    },
    {
      "name": "InputEvent.inputType",
      "path": "inputevent/inputtype",
      "type": "Events"
    },
    {
      "name": "InputEvent.isComposing",
      "path": "inputevent/iscomposing",
      "type": "Events"
    },
    { "name": "InstallEvent", "path": "installevent", "type": "Events" },
    {
      "name": "InstallEvent.activeWorker",
      "path": "installevent/activeworker",
      "type": "Web Workers"
    },
    {
      "name": "InstallEvent.constructor",
      "path": "installevent/installevent",
      "type": "Events"
    },
    {
      "name": "InstallTrigger",
      "path": "installtrigger",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.compareVersion",
      "path": "installtrigger/compareversion",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.enabled",
      "path": "installtrigger/enabled",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.getVersion",
      "path": "installtrigger/getversion",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.install",
      "path": "installtrigger/install",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.installChrome",
      "path": "installtrigger/installchrome",
      "type": "Miscellaneous"
    },
    {
      "name": "InstallTrigger.startSoftwareUpdate",
      "path": "installtrigger/startsoftwareupdate",
      "type": "Miscellaneous"
    },
    {
      "name": "Intersection Observer API",
      "path": "intersection_observer_api",
      "type": "Intersection Observer"
    },
    {
      "name": "Intersection Observer API: Timing element visibility",
      "path": "intersection_observer_api/timing_element_visibility",
      "type": "Performance"
    },
    {
      "name": "IntersectionObserver",
      "path": "intersectionobserver",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.constructor",
      "path": "intersectionobserver/intersectionobserver",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.disconnect",
      "path": "intersectionobserver/disconnect",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.observe",
      "path": "intersectionobserver/observe",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.root",
      "path": "intersectionobserver/root",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.rootMargin",
      "path": "intersectionobserver/rootmargin",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.takeRecords",
      "path": "intersectionobserver/takerecords",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.thresholds",
      "path": "intersectionobserver/thresholds",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserver.unobserve",
      "path": "intersectionobserver/unobserve",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry",
      "path": "intersectionobserverentry",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.boundingClientRect",
      "path": "intersectionobserverentry/boundingclientrect",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.intersectionRatio",
      "path": "intersectionobserverentry/intersectionratio",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.intersectionRect",
      "path": "intersectionobserverentry/intersectionrect",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.isIntersecting",
      "path": "intersectionobserverentry/isintersecting",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.rootBounds",
      "path": "intersectionobserverentry/rootbounds",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.target",
      "path": "intersectionobserverentry/target",
      "type": "Intersection Observer"
    },
    {
      "name": "IntersectionObserverEntry.time",
      "path": "intersectionobserverentry/time",
      "type": "Intersection Observer"
    },
    {
      "name": "InterventionReportBody",
      "path": "interventionreportbody",
      "type": "Miscellaneous"
    },
    { "name": "Keyboard", "path": "keyboard", "type": "Keyboard" },
    { "name": "Keyboard API", "path": "keyboard_api", "type": "Keyboard" },
    {
      "name": "Keyboard.getLayoutMap",
      "path": "keyboard/getlayoutmap",
      "type": "Keyboard"
    },
    { "name": "Keyboard.lock", "path": "keyboard/lock", "type": "Keyboard" },
    {
      "name": "Keyboard.unlock",
      "path": "keyboard/unlock",
      "type": "Keyboard"
    },
    { "name": "KeyboardEvent", "path": "keyboardevent", "type": "Keyboard" },
    {
      "name": "KeyboardEvent.altKey",
      "path": "keyboardevent/altkey",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.charCode",
      "path": "keyboardevent/charcode",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.code",
      "path": "keyboardevent/code",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.code.code values",
      "path": "keyboardevent/code/code_values",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.constructor",
      "path": "keyboardevent/keyboardevent",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.ctrlKey",
      "path": "keyboardevent/ctrlkey",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.getModifierState",
      "path": "keyboardevent/getmodifierstate",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.initKeyboardEvent",
      "path": "keyboardevent/initkeyboardevent",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.initKeyEvent",
      "path": "keyboardevent/initkeyevent",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.isComposing",
      "path": "keyboardevent/iscomposing",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.key",
      "path": "keyboardevent/key",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.key.Key Values",
      "path": "keyboardevent/key/key_values",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.keyCode",
      "path": "keyboardevent/keycode",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.keyIdentifier",
      "path": "keyboardevent/keyidentifier",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.location",
      "path": "keyboardevent/location",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.metaKey",
      "path": "keyboardevent/metakey",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.repeat",
      "path": "keyboardevent/repeat",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.shiftKey",
      "path": "keyboardevent/shiftkey",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardEvent.which",
      "path": "keyboardevent/which",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap",
      "path": "keyboardlayoutmap",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.entries",
      "path": "keyboardlayoutmap/entries",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.forEach",
      "path": "keyboardlayoutmap/foreach",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.get",
      "path": "keyboardlayoutmap/get",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.has",
      "path": "keyboardlayoutmap/has",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.keys",
      "path": "keyboardlayoutmap/keys",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.size",
      "path": "keyboardlayoutmap/size",
      "type": "Keyboard"
    },
    {
      "name": "KeyboardLayoutMap.values",
      "path": "keyboardlayoutmap/values",
      "type": "Keyboard"
    },
    { "name": "KeyframeEffect", "path": "keyframeeffect", "type": "Animation" },
    {
      "name": "KeyframeEffect.composite",
      "path": "keyframeeffect/composite",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffect.constructor",
      "path": "keyframeeffect/keyframeeffect",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffect.getKeyframes",
      "path": "keyframeeffect/getkeyframes",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffect.iterationComposite",
      "path": "keyframeeffect/iterationcomposite",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffect.setKeyframes",
      "path": "keyframeeffect/setkeyframes",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffect.target",
      "path": "keyframeeffect/target",
      "type": "Animation"
    },
    {
      "name": "KeyframeEffectOptions",
      "path": "keyframeeffectoptions",
      "type": "Animation"
    },
    {
      "name": "KHR parallel shader compile",
      "path": "khr_parallel_shader_compile",
      "type": "Miscellaneous"
    },
    {
      "name": "LargestContentfulPaint",
      "path": "largestcontentfulpaint",
      "type": "Miscellaneous"
    },
    { "name": "LayoutShift", "path": "layoutshift", "type": "Miscellaneous" },
    {
      "name": "LayoutShiftAttribution",
      "path": "layoutshiftattribution",
      "type": "Miscellaneous"
    },
    {
      "name": "LinearAccelerationSensor",
      "path": "linearaccelerationsensor",
      "type": "Sensors"
    },
    {
      "name": "LinearAccelerationSensor.constructor",
      "path": "linearaccelerationsensor/linearaccelerationsensor",
      "type": "Sensors"
    },
    { "name": "LinkStyle", "path": "linkstyle", "type": "CSS" },
    { "name": "LocalFileSystem", "path": "localfilesystem", "type": "File" },
    {
      "name": "LocalFileSystemSync",
      "path": "localfilesystemsync",
      "type": "File"
    },
    {
      "name": "LocalFileSystemSync.requestFileSystemSync",
      "path": "localfilesystemsync/requestfilesystemsync",
      "type": "File"
    },
    {
      "name": "LocalMediaStream",
      "path": "localmediastream",
      "type": "Media Streams"
    },
    { "name": "Location", "path": "location", "type": "Miscellaneous" },
    {
      "name": "Location.ancestorOrigins",
      "path": "location/ancestororigins",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.assign",
      "path": "location/assign",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.hash",
      "path": "location/hash",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.host",
      "path": "location/host",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.hostname",
      "path": "location/hostname",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.href",
      "path": "location/href",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.origin",
      "path": "location/origin",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.password",
      "path": "location/password",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.pathname",
      "path": "location/pathname",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.port",
      "path": "location/port",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.protocol",
      "path": "location/protocol",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.reload",
      "path": "location/reload",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.replace",
      "path": "location/replace",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.search",
      "path": "location/search",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.toString",
      "path": "location/tostring",
      "type": "Miscellaneous"
    },
    {
      "name": "Location.username",
      "path": "location/username",
      "type": "Miscellaneous"
    },
    { "name": "Lock", "path": "lock", "type": "Locks" },
    { "name": "Lock.mode", "path": "lock/mode", "type": "Locks" },
    { "name": "Lock.name", "path": "lock/name", "type": "Locks" },
    { "name": "LockedFile", "path": "lockedfile", "type": "Miscellaneous" },
    {
      "name": "LockedFile.abort",
      "path": "lockedfile/abort",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.active",
      "path": "lockedfile/active",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.append",
      "path": "lockedfile/append",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.fileHandle",
      "path": "lockedfile/filehandle",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.flush",
      "path": "lockedfile/flush",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.getMetaData",
      "path": "lockedfile/getmetadata",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.location",
      "path": "lockedfile/location",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.mode",
      "path": "lockedfile/mode",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.onabort",
      "path": "lockedfile/onabort",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.oncomplete",
      "path": "lockedfile/oncomplete",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.onerror",
      "path": "lockedfile/onerror",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.readAsArrayBuffer",
      "path": "lockedfile/readasarraybuffer",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.readAsText",
      "path": "lockedfile/readastext",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.truncate",
      "path": "lockedfile/truncate",
      "type": "Miscellaneous"
    },
    {
      "name": "LockedFile.write",
      "path": "lockedfile/write",
      "type": "Miscellaneous"
    },
    { "name": "LockManager", "path": "lockmanager", "type": "Locks" },
    {
      "name": "LockManager.query",
      "path": "lockmanager/query",
      "type": "Locks"
    },
    {
      "name": "LockManager.request",
      "path": "lockmanager/request",
      "type": "Locks"
    },
    {
      "name": "Long Tasks API",
      "path": "long_tasks_api",
      "type": "Miscellaneous"
    },
    { "name": "Magnetometer", "path": "magnetometer", "type": "Sensors" },
    {
      "name": "Magnetometer.constructor",
      "path": "magnetometer/magnetometer",
      "type": "Sensors"
    },
    { "name": "Magnetometer.x", "path": "magnetometer/x", "type": "Sensors" },
    { "name": "Magnetometer.y", "path": "magnetometer/y", "type": "Sensors" },
    { "name": "Magnetometer.z", "path": "magnetometer/z", "type": "Sensors" },
    {
      "name": "Managing screen orientation",
      "path": "css_object_model/managing_screen_orientation",
      "type": "Miscellaneous"
    },
    {
      "name": "MathMLElement",
      "path": "mathmlelement",
      "type": "Miscellaneous"
    },
    {
      "name": "Media Capabilities API",
      "path": "media_capabilities_api",
      "type": "Media"
    },
    {
      "name": "Media Capabilities API: Using the Media Capabilities API",
      "path": "media_capabilities_api/using_the_media_capabilities_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Media Session API",
      "path": "media_session_api",
      "type": "Media"
    },
    {
      "name": "Media Source Extensions API",
      "path": "media_source_extensions_api",
      "type": "Media"
    },
    {
      "name": "Media Source Extensions API: Transcoding assets for MSE",
      "path": "media_source_extensions_api/transcoding_assets_for_mse",
      "type": "Media"
    },
    {
      "name": "Media Streams API",
      "path": "media_streams_api",
      "type": "Media Streams"
    },
    {
      "name": "Media Streams API: Constraints",
      "path": "media_streams_api/constraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaCapabilities",
      "path": "mediacapabilities",
      "type": "Media"
    },
    {
      "name": "MediaCapabilities.decodingInfo",
      "path": "mediacapabilities/decodinginfo",
      "type": "Media"
    },
    {
      "name": "MediaCapabilities.encodingInfo",
      "path": "mediacapabilities/encodinginfo",
      "type": "Media"
    },
    {
      "name": "MediaCapabilities.MediaCapabilitiesInfo",
      "path": "mediacapabilities/mediacapabilitiesinfo",
      "type": "Miscellaneous"
    },
    {
      "name": "MediaCapabilitiesInfo",
      "path": "mediacapabilitiesinfo",
      "type": "Media"
    },
    {
      "name": "MediaConfiguration",
      "path": "mediaconfiguration",
      "type": "Media"
    },
    {
      "name": "MediaDecodingConfiguration",
      "path": "mediadecodingconfiguration",
      "type": "Media"
    },
    { "name": "MediaDeviceInfo", "path": "mediadeviceinfo", "type": "Media" },
    {
      "name": "MediaDeviceInfo.deviceId",
      "path": "mediadeviceinfo/deviceid",
      "type": "Media"
    },
    {
      "name": "MediaDeviceInfo.groupId",
      "path": "mediadeviceinfo/groupid",
      "type": "Media"
    },
    {
      "name": "MediaDeviceInfo.kind",
      "path": "mediadeviceinfo/kind",
      "type": "Media"
    },
    {
      "name": "MediaDeviceInfo.label",
      "path": "mediadeviceinfo/label",
      "type": "Media"
    },
    { "name": "MediaDevices", "path": "mediadevices", "type": "Media" },
    {
      "name": "MediaDevices.devicechange event",
      "path": "mediadevices/devicechange_event",
      "type": "Media"
    },
    {
      "name": "MediaDevices.enumerateDevices",
      "path": "mediadevices/enumeratedevices",
      "type": "Media"
    },
    {
      "name": "MediaDevices.getDisplayMedia",
      "path": "mediadevices/getdisplaymedia",
      "type": "Miscellaneous"
    },
    {
      "name": "MediaDevices.getSupportedConstraints",
      "path": "mediadevices/getsupportedconstraints",
      "type": "Media"
    },
    {
      "name": "MediaDevices.getUserMedia",
      "path": "mediadevices/getusermedia",
      "type": "Media"
    },
    {
      "name": "MediaDevices.ondevicechange",
      "path": "mediadevices/ondevicechange",
      "type": "Media"
    },
    {
      "name": "MediaElementAudioSourceNode",
      "path": "mediaelementaudiosourcenode",
      "type": "Audio"
    },
    {
      "name": "MediaElementAudioSourceNode.constructor",
      "path": "mediaelementaudiosourcenode/mediaelementaudiosourcenode",
      "type": "Audio"
    },
    {
      "name": "MediaElementAudioSourceNode.mediaElement",
      "path": "mediaelementaudiosourcenode/mediaelement",
      "type": "Audio"
    },
    {
      "name": "MediaEncodingConfiguration",
      "path": "mediaencodingconfiguration",
      "type": "Encoding"
    },
    { "name": "MediaError", "path": "mediaerror", "type": "Media" },
    { "name": "MediaError.code", "path": "mediaerror/code", "type": "Media" },
    {
      "name": "MediaError.message",
      "path": "mediaerror/message",
      "type": "Media"
    },
    {
      "name": "MediaError.msExtendedCode",
      "path": "mediaerror/msextendedcode",
      "type": "Miscellaneous"
    },
    { "name": "MediaImage", "path": "mediaimage", "type": "Media" },
    {
      "name": "MediaKeyMessageEvent",
      "path": "mediakeymessageevent",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyMessageEvent.constructor",
      "path": "mediakeymessageevent/mediakeymessageevent",
      "type": "Events"
    },
    {
      "name": "MediaKeyMessageEvent.message",
      "path": "mediakeymessageevent/message",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyMessageEvent.messageType",
      "path": "mediakeymessageevent/messagetype",
      "type": "Encrypted Media"
    },
    { "name": "MediaKeys", "path": "mediakeys", "type": "Encrypted Media" },
    {
      "name": "MediaKeys.createSession",
      "path": "mediakeys/createsession",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeys.setServerCertificate",
      "path": "mediakeys/setservercertificate",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession",
      "path": "mediakeysession",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.close",
      "path": "mediakeysession/close",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.closed",
      "path": "mediakeysession/closed",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.expiration",
      "path": "mediakeysession/expiration",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.generateRequest",
      "path": "mediakeysession/generaterequest",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.keyStatuses",
      "path": "mediakeysession/keystatuses",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.load",
      "path": "mediakeysession/load",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.onkeystatuseschange",
      "path": "mediakeysession/onkeystatuseschange",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.onmessage",
      "path": "mediakeysession/onmessage",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.remove",
      "path": "mediakeysession/remove",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.sessionId",
      "path": "mediakeysession/sessionid",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySession.update",
      "path": "mediakeysession/update",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap",
      "path": "mediakeystatusmap",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.entries",
      "path": "mediakeystatusmap/entries",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.forEach",
      "path": "mediakeystatusmap/foreach",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.get",
      "path": "mediakeystatusmap/get",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.has",
      "path": "mediakeystatusmap/has",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.keys",
      "path": "mediakeystatusmap/keys",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.size",
      "path": "mediakeystatusmap/size",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeyStatusMap.values",
      "path": "mediakeystatusmap/values",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemAccess",
      "path": "mediakeysystemaccess",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemAccess.createMediaKeys",
      "path": "mediakeysystemaccess/createmediakeys",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemAccess.getConfiguration",
      "path": "mediakeysystemaccess/getconfiguration",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemAccess.keySystem",
      "path": "mediakeysystemaccess/keysystem",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemConfiguration",
      "path": "mediakeysystemconfiguration",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemConfiguration.audioCapabilities",
      "path": "mediakeysystemconfiguration/audiocapabilities",
      "type": "Audio"
    },
    {
      "name": "MediaKeySystemConfiguration.distinctiveIdentifier",
      "path": "mediakeysystemconfiguration/distinctiveidentifier",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemConfiguration.initDataTypes",
      "path": "mediakeysystemconfiguration/initdatatypes",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemConfiguration.persistentState",
      "path": "mediakeysystemconfiguration/persistentstate",
      "type": "Encrypted Media"
    },
    {
      "name": "MediaKeySystemConfiguration.videoCapabilities",
      "path": "mediakeysystemconfiguration/videocapabilities",
      "type": "Encrypted Media"
    },
    { "name": "MediaList", "path": "medialist", "type": "CSS" },
    {
      "name": "MediaList.mediaText",
      "path": "medialist/mediatext",
      "type": "CSS"
    },
    {
      "name": "MediaMetadata",
      "path": "mediametadata",
      "type": "Media Session"
    },
    {
      "name": "MediaMetadata.album",
      "path": "mediametadata/album",
      "type": "Media Session"
    },
    {
      "name": "MediaMetadata.artist",
      "path": "mediametadata/artist",
      "type": "Media Session"
    },
    {
      "name": "MediaMetadata.artwork",
      "path": "mediametadata/artwork",
      "type": "Media Session"
    },
    {
      "name": "MediaMetadata.constructor",
      "path": "mediametadata/mediametadata",
      "type": "Media Session"
    },
    {
      "name": "MediaMetadata.title",
      "path": "mediametadata/title",
      "type": "Media Session"
    },
    {
      "name": "MediaPositionState",
      "path": "mediapositionstate",
      "type": "Media"
    },
    {
      "name": "MediaPositionState.duration",
      "path": "mediapositionstate/duration",
      "type": "Media"
    },
    {
      "name": "MediaPositionState.playbackRate",
      "path": "mediapositionstate/playbackrate",
      "type": "Media"
    },
    {
      "name": "MediaPositionState.position",
      "path": "mediapositionstate/position",
      "type": "Media"
    },
    { "name": "MediaQueryList", "path": "mediaquerylist", "type": "CSS" },
    {
      "name": "MediaQueryList.addListener",
      "path": "mediaquerylist/addlistener",
      "type": "CSS"
    },
    {
      "name": "MediaQueryList.matches",
      "path": "mediaquerylist/matches",
      "type": "CSS"
    },
    {
      "name": "MediaQueryList.media",
      "path": "mediaquerylist/media",
      "type": "CSS"
    },
    {
      "name": "MediaQueryList.onchange",
      "path": "mediaquerylist/onchange",
      "type": "CSS"
    },
    {
      "name": "MediaQueryList.removeListener",
      "path": "mediaquerylist/removelistener",
      "type": "CSS"
    },
    {
      "name": "MediaQueryListEvent",
      "path": "mediaquerylistevent",
      "type": "CSS"
    },
    {
      "name": "MediaQueryListEvent.constructor",
      "path": "mediaquerylistevent/mediaquerylistevent",
      "type": "CSS"
    },
    {
      "name": "MediaQueryListEvent.matches",
      "path": "mediaquerylistevent/matches",
      "type": "CSS"
    },
    {
      "name": "MediaQueryListEvent.media",
      "path": "mediaquerylistevent/media",
      "type": "CSS"
    },
    {
      "name": "MediaRecorder",
      "path": "mediarecorder",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.audioBitsPerSecond",
      "path": "mediarecorder/audiobitspersecond",
      "type": "Audio"
    },
    {
      "name": "MediaRecorder.constructor",
      "path": "mediarecorder/mediarecorder",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.error event",
      "path": "mediarecorder/error_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.ignoreMutedMedia",
      "path": "mediarecorder/ignoremutedmedia",
      "type": "Miscellaneous"
    },
    {
      "name": "MediaRecorder.isTypeSupported",
      "path": "mediarecorder/istypesupported",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.mimeType",
      "path": "mediarecorder/mimetype",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.ondataavailable",
      "path": "mediarecorder/ondataavailable",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onerror",
      "path": "mediarecorder/onerror",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onpause",
      "path": "mediarecorder/onpause",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onresume",
      "path": "mediarecorder/onresume",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onstart",
      "path": "mediarecorder/onstart",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onstop",
      "path": "mediarecorder/onstop",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.onwarning",
      "path": "mediarecorder/onwarning",
      "type": "Miscellaneous"
    },
    {
      "name": "MediaRecorder.pause",
      "path": "mediarecorder/pause",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.requestData",
      "path": "mediarecorder/requestdata",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.resume",
      "path": "mediarecorder/resume",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.start",
      "path": "mediarecorder/start",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.state",
      "path": "mediarecorder/state",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.stop",
      "path": "mediarecorder/stop",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.stream",
      "path": "mediarecorder/stream",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorder.videoBitsPerSecond",
      "path": "mediarecorder/videobitspersecond",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorderErrorEvent",
      "path": "mediarecordererrorevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorderErrorEvent.constructor",
      "path": "mediarecordererrorevent/mediarecordererrorevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaRecorderErrorEvent.error",
      "path": "mediarecordererrorevent/error",
      "type": "Media Streams"
    },
    { "name": "MediaSession", "path": "mediasession", "type": "Media Session" },
    {
      "name": "MediaSession.metadata",
      "path": "mediasession/metadata",
      "type": "Media Session"
    },
    {
      "name": "MediaSession.playbackState",
      "path": "mediasession/playbackstate",
      "type": "Media Session"
    },
    {
      "name": "MediaSession.setActionHandler",
      "path": "mediasession/setactionhandler",
      "type": "Media Session"
    },
    {
      "name": "MediaSession.setPositionState",
      "path": "mediasession/setpositionstate",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionAction",
      "path": "mediasessionaction",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionActionDetails",
      "path": "mediasessionactiondetails",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionActionDetails.action",
      "path": "mediasessionactiondetails/action",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionActionDetails.fastSeek",
      "path": "mediasessionactiondetails/fastseek",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionActionDetails.seekOffset",
      "path": "mediasessionactiondetails/seekoffset",
      "type": "Media Session"
    },
    {
      "name": "MediaSessionActionDetails.seekTime",
      "path": "mediasessionactiondetails/seektime",
      "type": "Media Session"
    },
    {
      "name": "MediaSettingsRange",
      "path": "mediasettingsrange",
      "type": "Media Streams"
    },
    {
      "name": "MediaSettingsRange.max",
      "path": "mediasettingsrange/max",
      "type": "Media Streams"
    },
    {
      "name": "MediaSettingsRange.min",
      "path": "mediasettingsrange/min",
      "type": "Media Streams"
    },
    {
      "name": "MediaSettingsRange.step",
      "path": "mediasettingsrange/step",
      "type": "Media Streams"
    },
    { "name": "MediaSource", "path": "mediasource", "type": "Media" },
    {
      "name": "MediaSource.activeSourceBuffers",
      "path": "mediasource/activesourcebuffers",
      "type": "Media"
    },
    {
      "name": "MediaSource.addSourceBuffer",
      "path": "mediasource/addsourcebuffer",
      "type": "Media"
    },
    {
      "name": "MediaSource.clearLiveSeekableRange",
      "path": "mediasource/clearliveseekablerange",
      "type": "Media"
    },
    {
      "name": "MediaSource.constructor",
      "path": "mediasource/mediasource",
      "type": "Miscellaneous"
    },
    {
      "name": "MediaSource.duration",
      "path": "mediasource/duration",
      "type": "Media"
    },
    {
      "name": "MediaSource.endOfStream",
      "path": "mediasource/endofstream",
      "type": "Media"
    },
    {
      "name": "MediaSource.isTypeSupported",
      "path": "mediasource/istypesupported",
      "type": "Media"
    },
    {
      "name": "MediaSource.readyState",
      "path": "mediasource/readystate",
      "type": "Media"
    },
    {
      "name": "MediaSource.removeSourceBuffer",
      "path": "mediasource/removesourcebuffer",
      "type": "Media"
    },
    {
      "name": "MediaSource.setLiveSeekableRange",
      "path": "mediasource/setliveseekablerange",
      "type": "Media"
    },
    {
      "name": "MediaSource.sourceBuffers",
      "path": "mediasource/sourcebuffers",
      "type": "Media"
    },
    { "name": "MediaStream", "path": "mediastream", "type": "Media Streams" },
    {
      "name": "MediaStream Image Capture API",
      "path": "mediastream_image_capture_api",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream Recording API",
      "path": "mediastream_recording_api",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream Recording API: Recording a media element",
      "path": "mediastream_recording_api/recording_a_media_element",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream Recording API: Using the MediaStream Recording API",
      "path": "mediastream_recording_api/using_the_mediastream_recording_api",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.active",
      "path": "mediastream/active",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.addTrack",
      "path": "mediastream/addtrack",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.addtrack event",
      "path": "mediastream/addtrack_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.clone",
      "path": "mediastream/clone",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.constructor",
      "path": "mediastream/mediastream",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.ended",
      "path": "mediastream/ended",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.getAudioTracks",
      "path": "mediastream/getaudiotracks",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.getTrackById",
      "path": "mediastream/gettrackbyid",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.getTracks",
      "path": "mediastream/gettracks",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.getVideoTracks",
      "path": "mediastream/getvideotracks",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.id",
      "path": "mediastream/id",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.onaddtrack",
      "path": "mediastream/onaddtrack",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.onremovetrack",
      "path": "mediastream/onremovetrack",
      "type": "Media Streams"
    },
    {
      "name": "MediaStream.removetrack event",
      "path": "mediastream/removetrack_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioDestinationNode",
      "path": "mediastreamaudiodestinationnode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioDestinationNode.constructor",
      "path": "mediastreamaudiodestinationnode/mediastreamaudiodestinationnode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioDestinationNode.stream",
      "path": "mediastreamaudiodestinationnode/stream",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioSourceNode",
      "path": "mediastreamaudiosourcenode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioSourceNode.constructor",
      "path": "mediastreamaudiosourcenode/mediastreamaudiosourcenode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioSourceNode.mediaStream",
      "path": "mediastreamaudiosourcenode/mediastream",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioSourceOptions",
      "path": "mediastreamaudiosourceoptions",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamAudioSourceOptions.mediaStream",
      "path": "mediastreamaudiosourceoptions/mediastream",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamConstraints",
      "path": "mediastreamconstraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamConstraints.audio",
      "path": "mediastreamconstraints/audio",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamConstraints.video",
      "path": "mediastreamconstraints/video",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamEvent",
      "path": "mediastreamevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamEvent.constructor",
      "path": "mediastreamevent/mediastreamevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamEvent.stream",
      "path": "mediastreamevent/stream",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack",
      "path": "mediastreamtrack",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.applyConstraints",
      "path": "mediastreamtrack/applyconstraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.clone",
      "path": "mediastreamtrack/clone",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.enabled",
      "path": "mediastreamtrack/enabled",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.ended event",
      "path": "mediastreamtrack/ended_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.getCapabilities",
      "path": "mediastreamtrack/getcapabilities",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.getConstraints",
      "path": "mediastreamtrack/getconstraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.getSettings",
      "path": "mediastreamtrack/getsettings",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.id",
      "path": "mediastreamtrack/id",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.kind",
      "path": "mediastreamtrack/kind",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.label",
      "path": "mediastreamtrack/label",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.mute event",
      "path": "mediastreamtrack/mute_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.muted",
      "path": "mediastreamtrack/muted",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.onended",
      "path": "mediastreamtrack/onended",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.onmute",
      "path": "mediastreamtrack/onmute",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.onoverconstrained",
      "path": "mediastreamtrack/onoverconstrained",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.onunmute",
      "path": "mediastreamtrack/onunmute",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.readyState",
      "path": "mediastreamtrack/readystate",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.remote",
      "path": "mediastreamtrack/remote",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.stop",
      "path": "mediastreamtrack/stop",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrack.unmute event",
      "path": "mediastreamtrack/unmute_event",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackAudioSourceNode",
      "path": "mediastreamtrackaudiosourcenode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackAudioSourceNode.constructor",
      "path": "mediastreamtrackaudiosourcenode/mediastreamtrackaudiosourcenode",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackAudioSourceOptions",
      "path": "mediastreamtrackaudiosourceoptions",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackAudioSourceOptions.mediaStreamTrack",
      "path": "mediastreamtrackaudiosourceoptions/mediastreamtrack",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackEvent",
      "path": "mediastreamtrackevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaStreamTrackEvent.constructor",
      "path": "mediastreamtrackevent/mediastreamtrackevent",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints",
      "path": "mediatrackconstraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.aspectRatio",
      "path": "mediatrackconstraints/aspectratio",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.autoGainControl",
      "path": "mediatrackconstraints/autogaincontrol",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.channelCount",
      "path": "mediatrackconstraints/channelcount",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.cursor",
      "path": "mediatrackconstraints/cursor",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.deviceId",
      "path": "mediatrackconstraints/deviceid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.displaySurface",
      "path": "mediatrackconstraints/displaysurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.echoCancellation",
      "path": "mediatrackconstraints/echocancellation",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.facingMode",
      "path": "mediatrackconstraints/facingmode",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.frameRate",
      "path": "mediatrackconstraints/framerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.groupId",
      "path": "mediatrackconstraints/groupid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.height",
      "path": "mediatrackconstraints/height",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.latency",
      "path": "mediatrackconstraints/latency",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.logicalSurface",
      "path": "mediatrackconstraints/logicalsurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.noiseSuppression",
      "path": "mediatrackconstraints/noisesuppression",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.sampleRate",
      "path": "mediatrackconstraints/samplerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.sampleSize",
      "path": "mediatrackconstraints/samplesize",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.volume",
      "path": "mediatrackconstraints/volume",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackConstraints.width",
      "path": "mediatrackconstraints/width",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings",
      "path": "mediatracksettings",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.aspectRatio",
      "path": "mediatracksettings/aspectratio",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.autoGainControl",
      "path": "mediatracksettings/autogaincontrol",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.channelCount",
      "path": "mediatracksettings/channelcount",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.cursor",
      "path": "mediatracksettings/cursor",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.deviceId",
      "path": "mediatracksettings/deviceid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.displaySurface",
      "path": "mediatracksettings/displaysurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.echoCancellation",
      "path": "mediatracksettings/echocancellation",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.facingMode",
      "path": "mediatracksettings/facingmode",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.frameRate",
      "path": "mediatracksettings/framerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.groupId",
      "path": "mediatracksettings/groupid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.height",
      "path": "mediatracksettings/height",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.latency",
      "path": "mediatracksettings/latency",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.logicalSurface",
      "path": "mediatracksettings/logicalsurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.noiseSuppression",
      "path": "mediatracksettings/noisesuppression",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.sampleRate",
      "path": "mediatracksettings/samplerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.sampleSize",
      "path": "mediatracksettings/samplesize",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.volume",
      "path": "mediatracksettings/volume",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSettings.width",
      "path": "mediatracksettings/width",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints",
      "path": "mediatracksupportedconstraints",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.aspectRatio",
      "path": "mediatracksupportedconstraints/aspectratio",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.autoGainControl",
      "path": "mediatracksupportedconstraints/autogaincontrol",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.channelCount",
      "path": "mediatracksupportedconstraints/channelcount",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.cursor",
      "path": "mediatracksupportedconstraints/cursor",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.deviceId",
      "path": "mediatracksupportedconstraints/deviceid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.displaySurface",
      "path": "mediatracksupportedconstraints/displaysurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.echoCancellation",
      "path": "mediatracksupportedconstraints/echocancellation",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.facingMode",
      "path": "mediatracksupportedconstraints/facingmode",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.frameRate",
      "path": "mediatracksupportedconstraints/framerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.groupId",
      "path": "mediatracksupportedconstraints/groupid",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.height",
      "path": "mediatracksupportedconstraints/height",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.latency",
      "path": "mediatracksupportedconstraints/latency",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.logicalSurface",
      "path": "mediatracksupportedconstraints/logicalsurface",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.noiseSuppression",
      "path": "mediatracksupportedconstraints/noisesuppression",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.sampleRate",
      "path": "mediatracksupportedconstraints/samplerate",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.sampleSize",
      "path": "mediatracksupportedconstraints/samplesize",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.volume",
      "path": "mediatracksupportedconstraints/volume",
      "type": "Media Streams"
    },
    {
      "name": "MediaTrackSupportedConstraints.width",
      "path": "mediatracksupportedconstraints/width",
      "type": "Media Streams"
    },
    {
      "name": "MerchantValidationEvent",
      "path": "merchantvalidationevent",
      "type": "Events"
    },
    {
      "name": "MerchantValidationEvent.complete",
      "path": "merchantvalidationevent/complete",
      "type": "Events"
    },
    {
      "name": "MerchantValidationEvent.constructor",
      "path": "merchantvalidationevent/merchantvalidationevent",
      "type": "Events"
    },
    {
      "name": "MerchantValidationEvent.methodName",
      "path": "merchantvalidationevent/methodname",
      "type": "Events"
    },
    {
      "name": "MerchantValidationEvent.validationURL",
      "path": "merchantvalidationevent/validationurl",
      "type": "Events"
    },
    {
      "name": "MessageChannel",
      "path": "messagechannel",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageChannel.constructor",
      "path": "messagechannel/messagechannel",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageChannel.port1",
      "path": "messagechannel/port1",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageChannel.port2",
      "path": "messagechannel/port2",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent",
      "path": "messageevent",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.constructor",
      "path": "messageevent/messageevent",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.data",
      "path": "messageevent/data",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.lastEventId",
      "path": "messageevent/lasteventid",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.origin",
      "path": "messageevent/origin",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.ports",
      "path": "messageevent/ports",
      "type": "Channel Messaging"
    },
    {
      "name": "MessageEvent.source",
      "path": "messageevent/source",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort",
      "path": "messageport",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.close",
      "path": "messageport/close",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.message event",
      "path": "messageport/message_event",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.messageerror event",
      "path": "messageport/messageerror_event",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.onmessage",
      "path": "messageport/onmessage",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.onmessageerror",
      "path": "messageport/onmessageerror",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.postMessage",
      "path": "messageport/postmessage",
      "type": "Channel Messaging"
    },
    {
      "name": "MessagePort.start",
      "path": "messageport/start",
      "type": "Channel Messaging"
    },
    { "name": "Metadata", "path": "metadata", "type": "File" },
    {
      "name": "Metadata.modificationTime",
      "path": "metadata/modificationtime",
      "type": "File"
    },
    { "name": "Metadata.size", "path": "metadata/size", "type": "File" },
    {
      "name": "Microdata DOM API",
      "path": "microdata_dom_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Microsoft Extensions",
      "path": "microsoft_extensions",
      "type": "Miscellaneous"
    },
    { "name": "MIDIAccess", "path": "midiaccess", "type": "Audio" },
    {
      "name": "MIDIConnectionEvent",
      "path": "midiconnectionevent",
      "type": "Audio"
    },
    { "name": "MIDIInput", "path": "midiinput", "type": "Audio" },
    { "name": "MIDIInputMap", "path": "midiinputmap", "type": "Audio" },
    { "name": "MIDIMessageEvent", "path": "midimessageevent", "type": "Audio" },
    { "name": "MIDIOutputMap", "path": "midioutputmap", "type": "Audio" },
    { "name": "MimeType", "path": "mimetype", "type": "Miscellaneous" },
    {
      "name": "MimeTypeArray",
      "path": "mimetypearray",
      "type": "Miscellaneous"
    },
    { "name": "MouseEvent", "path": "mouseevent", "type": "CSS" },
    {
      "name": "MouseEvent.altKey",
      "path": "mouseevent/altkey",
      "type": "Events"
    },
    {
      "name": "MouseEvent.button",
      "path": "mouseevent/button",
      "type": "Events"
    },
    {
      "name": "MouseEvent.buttons",
      "path": "mouseevent/buttons",
      "type": "Events"
    },
    {
      "name": "MouseEvent.clientX",
      "path": "mouseevent/clientx",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.clientY",
      "path": "mouseevent/clienty",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.constructor",
      "path": "mouseevent/mouseevent",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.ctrlKey",
      "path": "mouseevent/ctrlkey",
      "type": "Events"
    },
    {
      "name": "MouseEvent.getModifierState",
      "path": "mouseevent/getmodifierstate",
      "type": "Events"
    },
    {
      "name": "MouseEvent.initMouseEvent",
      "path": "mouseevent/initmouseevent",
      "type": "Events"
    },
    {
      "name": "MouseEvent.metaKey",
      "path": "mouseevent/metakey",
      "type": "Events"
    },
    {
      "name": "MouseEvent.movementX",
      "path": "mouseevent/movementx",
      "type": "Events"
    },
    {
      "name": "MouseEvent.movementY",
      "path": "mouseevent/movementy",
      "type": "Events"
    },
    {
      "name": "MouseEvent.mozInputSource",
      "path": "mouseevent/mozinputsource",
      "type": "Events"
    },
    {
      "name": "MouseEvent.offsetX",
      "path": "mouseevent/offsetx",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.offsetY",
      "path": "mouseevent/offsety",
      "type": "CSS"
    },
    { "name": "MouseEvent.pageX", "path": "mouseevent/pagex", "type": "CSS" },
    { "name": "MouseEvent.pageY", "path": "mouseevent/pagey", "type": "CSS" },
    {
      "name": "MouseEvent.region",
      "path": "mouseevent/region",
      "type": "Events"
    },
    {
      "name": "MouseEvent.relatedTarget",
      "path": "mouseevent/relatedtarget",
      "type": "Events"
    },
    {
      "name": "MouseEvent.screenX",
      "path": "mouseevent/screenx",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.screenY",
      "path": "mouseevent/screeny",
      "type": "CSS"
    },
    {
      "name": "MouseEvent.shiftKey",
      "path": "mouseevent/shiftkey",
      "type": "Events"
    },
    {
      "name": "MouseEvent.WEBKIT FORCE AT FORCE MOUSE DOWN",
      "path": "mouseevent/webkit_force_at_force_mouse_down",
      "type": "Events"
    },
    {
      "name": "MouseEvent.WEBKIT FORCE AT MOUSE DOWN",
      "path": "mouseevent/webkit_force_at_mouse_down",
      "type": "Events"
    },
    {
      "name": "MouseEvent.webkitForce",
      "path": "mouseevent/webkitforce",
      "type": "Events"
    },
    {
      "name": "MouseEvent.which",
      "path": "mouseevent/which",
      "type": "Events"
    },
    { "name": "MouseEvent.x", "path": "mouseevent/x", "type": "CSS" },
    { "name": "MouseEvent.y", "path": "mouseevent/y", "type": "CSS" },
    {
      "name": "MouseScrollEvent",
      "path": "mousescrollevent",
      "type": "Events"
    },
    { "name": "MouseWheelEvent", "path": "mousewheelevent", "type": "Events" },
    { "name": "msCaching", "path": "mscaching", "type": "Miscellaneous" },
    {
      "name": "msCachingEnabled",
      "path": "mscachingenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "MSCandidateWindowHide",
      "path": "mscandidatewindowhide",
      "type": "Miscellaneous"
    },
    {
      "name": "MSCandidateWindowShow",
      "path": "mscandidatewindowshow",
      "type": "Miscellaneous"
    },
    {
      "name": "MSCandidateWindowUpdate",
      "path": "mscandidatewindowupdate",
      "type": "Miscellaneous"
    },
    {
      "name": "msCapsLockWarningOff",
      "path": "mscapslockwarningoff",
      "type": "Miscellaneous"
    },
    { "name": "MsFirstPaint", "path": "msfirstpaint", "type": "Miscellaneous" },
    { "name": "MSGestureEvent", "path": "msgestureevent", "type": "Events" },
    {
      "name": "msGetPropertyEnabled",
      "path": "msgetpropertyenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "msGetRegionContent",
      "path": "msgetregioncontent",
      "type": "Miscellaneous"
    },
    {
      "name": "MSGraphicsTrust",
      "path": "msgraphicstrust",
      "type": "Miscellaneous"
    },
    {
      "name": "MsGraphicsTrustStatus",
      "path": "msgraphicstruststatus",
      "type": "Miscellaneous"
    },
    { "name": "MsIsBoxed", "path": "msisboxed", "type": "Miscellaneous" },
    {
      "name": "MSManipulationEvent",
      "path": "msmanipulationevent",
      "type": "Events"
    },
    {
      "name": "MSManipulationEvent.initMSManipulationEvent",
      "path": "msmanipulationevent/initmsmanipulationevent",
      "type": "Events"
    },
    {
      "name": "MsPlayToDisabled",
      "path": "msplaytodisabled",
      "type": "Miscellaneous"
    },
    {
      "name": "MsPlayToPreferredSourceUri",
      "path": "msplaytopreferredsourceuri",
      "type": "Miscellaneous"
    },
    {
      "name": "MsPlayToPrimary",
      "path": "msplaytoprimary",
      "type": "Miscellaneous"
    },
    {
      "name": "MsPlayToSource",
      "path": "msplaytosource",
      "type": "Miscellaneous"
    },
    {
      "name": "msPutPropertyEnabled",
      "path": "msputpropertyenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "MSRangeCollection",
      "path": "msrangecollection",
      "type": "Miscellaneous"
    },
    { "name": "MsRealTime", "path": "msrealtime", "type": "Miscellaneous" },
    {
      "name": "msRegionOverflow",
      "path": "msregionoverflow",
      "type": "Miscellaneous"
    },
    {
      "name": "MsSetMediaProtectionManager",
      "path": "mssetmediaprotectionmanager",
      "type": "Miscellaneous"
    },
    { "name": "MSSiteModeEvent", "path": "mssitemodeevent", "type": "Events" },
    {
      "name": "mssitemodejumplistitemremoved",
      "path": "mssitemodejumplistitemremoved",
      "type": "Miscellaneous"
    },
    {
      "name": "msthumbnailclick",
      "path": "msthumbnailclick",
      "type": "Miscellaneous"
    },
    {
      "name": "msWriteProfilerMark",
      "path": "mswriteprofilermark",
      "type": "Miscellaneous"
    },
    { "name": "MutationEvent", "path": "mutationevent", "type": "DOM" },
    { "name": "MutationObserver", "path": "mutationobserver", "type": "DOM" },
    {
      "name": "MutationObserver.constructor",
      "path": "mutationobserver/mutationobserver",
      "type": "DOM"
    },
    {
      "name": "MutationObserver.disconnect",
      "path": "mutationobserver/disconnect",
      "type": "DOM"
    },
    {
      "name": "MutationObserver.observe",
      "path": "mutationobserver/observe",
      "type": "DOM"
    },
    {
      "name": "MutationObserver.takeRecords",
      "path": "mutationobserver/takerecords",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit",
      "path": "mutationobserverinit",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.attributeFilter",
      "path": "mutationobserverinit/attributefilter",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.attributeOldValue",
      "path": "mutationobserverinit/attributeoldvalue",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.attributes",
      "path": "mutationobserverinit/attributes",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.characterData",
      "path": "mutationobserverinit/characterdata",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.characterDataOldValue",
      "path": "mutationobserverinit/characterdataoldvalue",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.childList",
      "path": "mutationobserverinit/childlist",
      "type": "DOM"
    },
    {
      "name": "MutationObserverInit.subtree",
      "path": "mutationobserverinit/subtree",
      "type": "DOM"
    },
    { "name": "MutationRecord", "path": "mutationrecord", "type": "DOM" },
    { "name": "NamedNodeMap", "path": "namednodemap", "type": "Nodes" },
    {
      "name": "NamedNodeMap.getNamedItem",
      "path": "namednodemap/getnameditem",
      "type": "Nodes"
    },
    {
      "name": "Navigation timing API",
      "path": "navigation_timing_api",
      "type": "Performance"
    },
    {
      "name": "Navigation timing API: Using Navigation Timing",
      "path": "navigation_timing_api/using_navigation_timing",
      "type": "Performance"
    },
    {
      "name": "NavigationPreloadManager",
      "path": "navigationpreloadmanager",
      "type": "Service Workers"
    },
    { "name": "Navigator", "path": "navigator", "type": "Miscellaneous" },
    {
      "name": "Navigator.activeVRDisplays",
      "path": "navigator/activevrdisplays",
      "type": "WebVR"
    },
    {
      "name": "Navigator.battery",
      "path": "navigator/battery",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.buildID",
      "path": "navigator/buildid",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.canShare",
      "path": "navigator/canshare",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.clearAppBadge",
      "path": "navigator/clearappbadge",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.clipboard",
      "path": "navigator/clipboard",
      "type": "Clipboard"
    },
    {
      "name": "Navigator.connection",
      "path": "navigator/connection",
      "type": "Network Information"
    },
    {
      "name": "Navigator.contacts",
      "path": "navigator/contacts",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.cookieEnabled",
      "path": "navigator/cookieenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.credentials",
      "path": "navigator/credentials",
      "type": "Credential Management"
    },
    {
      "name": "Navigator.deviceMemory",
      "path": "navigator/devicememory",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.doNotTrack",
      "path": "navigator/donottrack",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.geolocation",
      "path": "navigator/geolocation",
      "type": "Geolocation"
    },
    {
      "name": "Navigator.getBattery",
      "path": "navigator/getbattery",
      "type": "Battery Status"
    },
    {
      "name": "Navigator.getGamepads",
      "path": "navigator/getgamepads",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.getUserMedia",
      "path": "navigator/getusermedia",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.getVRDisplays",
      "path": "navigator/getvrdisplays",
      "type": "WebVR"
    },
    {
      "name": "Navigator.hid",
      "path": "navigator/hid",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.keyboard",
      "path": "navigator/keyboard",
      "type": "Keyboard"
    },
    { "name": "Navigator.locks", "path": "navigator/locks", "type": "Locks" },
    {
      "name": "Navigator.maxTouchPoints",
      "path": "navigator/maxtouchpoints",
      "type": "Pointer Events"
    },
    {
      "name": "Navigator.mediaCapabilities",
      "path": "navigator/mediacapabilities",
      "type": "Media"
    },
    {
      "name": "Navigator.mediaDevices",
      "path": "navigator/mediadevices",
      "type": "Media"
    },
    {
      "name": "Navigator.mediaSession",
      "path": "navigator/mediasession",
      "type": "Media"
    },
    {
      "name": "Navigator.mozIsLocallyAvailable",
      "path": "navigator/mozislocallyavailable",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.msLaunchUri",
      "path": "navigator/mslaunchuri",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.msSaveBlob",
      "path": "navigator/mssaveblob",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.msSaveOrOpenBlob",
      "path": "navigator/mssaveoropenblob",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.oscpu",
      "path": "navigator/oscpu",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.permissions",
      "path": "navigator/permissions",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.presentation",
      "path": "navigator/presentation",
      "type": "Presentation"
    },
    {
      "name": "Navigator.productSub",
      "path": "navigator/productsub",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.registerContentHandler",
      "path": "navigator/registercontenthandler",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.registerProtocolHandler",
      "path": "navigator/registerprotocolhandler",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.registerProtocolHandler.Web-based protocol handlers",
      "path": "navigator/registerprotocolhandler/web-based_protocol_handlers",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.requestMediaKeySystemAccess",
      "path": "navigator/requestmediakeysystemaccess",
      "type": "Encrypted Media"
    },
    {
      "name": "Navigator.sendBeacon",
      "path": "navigator/sendbeacon",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.serial",
      "path": "navigator/serial",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.serviceWorker",
      "path": "navigator/serviceworker",
      "type": "Web Workers"
    },
    {
      "name": "Navigator.setAppBadge",
      "path": "navigator/setappbadge",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.share",
      "path": "navigator/share",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.vendor",
      "path": "navigator/vendor",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.vendorSub",
      "path": "navigator/vendorsub",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.vibrate",
      "path": "navigator/vibrate",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.wakeLock",
      "path": "navigator/wakelock",
      "type": "Miscellaneous"
    },
    {
      "name": "Navigator.webdriver",
      "path": "navigator/webdriver",
      "type": "Miscellaneous"
    },
    { "name": "Navigator.xr", "path": "navigator/xr", "type": "Miscellaneous" },
    {
      "name": "NavigatorConcurrentHardware",
      "path": "navigatorconcurrenthardware",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorConcurrentHardware.hardwareConcurrency",
      "path": "navigatorconcurrenthardware/hardwareconcurrency",
      "type": "Miscellaneous"
    },
    { "name": "NavigatorID", "path": "navigatorid", "type": "Miscellaneous" },
    {
      "name": "NavigatorID.appCodeName",
      "path": "navigatorid/appcodename",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.appName",
      "path": "navigatorid/appname",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.appVersion",
      "path": "navigatorid/appversion",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.platform",
      "path": "navigatorid/platform",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.product",
      "path": "navigatorid/product",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.taintEnabled",
      "path": "navigatorid/taintenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorID.userAgent",
      "path": "navigatorid/useragent",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorLanguage",
      "path": "navigatorlanguage",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorLanguage.language",
      "path": "navigatorlanguage/language",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorLanguage.languages",
      "path": "navigatorlanguage/languages",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorOnLine",
      "path": "navigatoronline",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorOnLine.onLine",
      "path": "navigatoronline/online",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorOnLine.Online and offline events",
      "path": "navigatoronline/online_and_offline_events",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorPlugins",
      "path": "navigatorplugins",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorPlugins.javaEnabled",
      "path": "navigatorplugins/javaenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorPlugins.mimeTypes",
      "path": "navigatorplugins/mimetypes",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorPlugins.plugins",
      "path": "navigatorplugins/plugins",
      "type": "Miscellaneous"
    },
    {
      "name": "NavigatorStorage",
      "path": "navigatorstorage",
      "type": "Storage"
    },
    {
      "name": "NavigatorStorage.storage",
      "path": "navigatorstorage/storage",
      "type": "Storage"
    },
    { "name": "NDEFMessage", "path": "ndefmessage", "type": "Miscellaneous" },
    {
      "name": "NDEFMessage.records",
      "path": "ndefmessage/records",
      "type": "Miscellaneous"
    },
    { "name": "NDEFReader", "path": "ndefreader", "type": "Miscellaneous" },
    {
      "name": "NDEFReader.constructor",
      "path": "ndefreader/ndefreader",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFReader.onreading",
      "path": "ndefreader/onreading",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFReader.onreadingerror",
      "path": "ndefreader/onreadingerror",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFReader.scan",
      "path": "ndefreader/scan",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFReader.write",
      "path": "ndefreader/write",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFReadingEvent",
      "path": "ndefreadingevent",
      "type": "Events"
    },
    { "name": "NDEFRecord", "path": "ndefrecord", "type": "Miscellaneous" },
    {
      "name": "NDEFRecord.constructor",
      "path": "ndefrecord/ndefrecord",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.data",
      "path": "ndefrecord/data",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.encoding",
      "path": "ndefrecord/encoding",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.id",
      "path": "ndefrecord/id",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.lang",
      "path": "ndefrecord/lang",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.mediaType",
      "path": "ndefrecord/mediatype",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.recordType",
      "path": "ndefrecord/recordtype",
      "type": "Miscellaneous"
    },
    {
      "name": "NDEFRecord.toRecords",
      "path": "ndefrecord/torecords",
      "type": "Miscellaneous"
    },
    {
      "name": "Network Information API",
      "path": "network_information_api",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation",
      "path": "networkinformation",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.downlink",
      "path": "networkinformation/downlink",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.downlinkMax",
      "path": "networkinformation/downlinkmax",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.effectiveType",
      "path": "networkinformation/effectivetype",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.onchange",
      "path": "networkinformation/onchange",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.rtt",
      "path": "networkinformation/rtt",
      "type": "Network Information"
    },
    {
      "name": "NetworkInformation.saveData",
      "path": "networkinformation/savedata",
      "type": "Miscellaneous"
    },
    {
      "name": "NetworkInformation.type",
      "path": "networkinformation/type",
      "type": "Network Information"
    },
    { "name": "Node", "path": "node", "type": "Nodes" },
    { "name": "Node.appendChild", "path": "node/appendchild", "type": "Nodes" },
    { "name": "Node.baseURI", "path": "node/baseuri", "type": "Nodes" },
    { "name": "Node.childNodes", "path": "node/childnodes", "type": "Nodes" },
    { "name": "Node.cloneNode", "path": "node/clonenode", "type": "Nodes" },
    {
      "name": "Node.compareDocumentPosition",
      "path": "node/comparedocumentposition",
      "type": "Nodes"
    },
    { "name": "Node.contains", "path": "node/contains", "type": "Nodes" },
    { "name": "Node.firstChild", "path": "node/firstchild", "type": "Nodes" },
    { "name": "Node.getRootNode", "path": "node/getrootnode", "type": "Nodes" },
    { "name": "Node.getUserData", "path": "node/getuserdata", "type": "Nodes" },
    {
      "name": "Node.hasChildNodes",
      "path": "node/haschildnodes",
      "type": "Nodes"
    },
    {
      "name": "Node.insertBefore",
      "path": "node/insertbefore",
      "type": "Nodes"
    },
    { "name": "Node.isConnected", "path": "node/isconnected", "type": "Nodes" },
    {
      "name": "Node.isDefaultNamespace",
      "path": "node/isdefaultnamespace",
      "type": "Nodes"
    },
    { "name": "Node.isEqualNode", "path": "node/isequalnode", "type": "Nodes" },
    { "name": "Node.isSameNode", "path": "node/issamenode", "type": "Nodes" },
    { "name": "Node.isSupported", "path": "node/issupported", "type": "Nodes" },
    { "name": "Node.lastChild", "path": "node/lastchild", "type": "Nodes" },
    {
      "name": "Node.lookupNamespaceURI",
      "path": "node/lookupnamespaceuri",
      "type": "Nodes"
    },
    {
      "name": "Node.lookupPrefix",
      "path": "node/lookupprefix",
      "type": "Nodes"
    },
    { "name": "Node.nextSibling", "path": "node/nextsibling", "type": "Nodes" },
    { "name": "Node.nodeName", "path": "node/nodename", "type": "Nodes" },
    { "name": "Node.nodeType", "path": "node/nodetype", "type": "Nodes" },
    { "name": "Node.nodeValue", "path": "node/nodevalue", "type": "Nodes" },
    { "name": "Node.normalize", "path": "node/normalize", "type": "Nodes" },
    {
      "name": "Node.ownerDocument",
      "path": "node/ownerdocument",
      "type": "Nodes"
    },
    {
      "name": "Node.parentElement",
      "path": "node/parentelement",
      "type": "Nodes"
    },
    { "name": "Node.parentNode", "path": "node/parentnode", "type": "Nodes" },
    {
      "name": "Node.previousSibling",
      "path": "node/previoussibling",
      "type": "Nodes"
    },
    { "name": "Node.removeChild", "path": "node/removechild", "type": "Nodes" },
    {
      "name": "Node.replaceChild",
      "path": "node/replacechild",
      "type": "Nodes"
    },
    { "name": "Node.setUserData", "path": "node/setuserdata", "type": "Nodes" },
    { "name": "Node.textContent", "path": "node/textcontent", "type": "Nodes" },
    { "name": "NodeFilter", "path": "nodefilter", "type": "Nodes" },
    {
      "name": "NodeFilter.acceptNode",
      "path": "nodefilter/acceptnode",
      "type": "Nodes"
    },
    { "name": "NodeIterator", "path": "nodeiterator", "type": "Nodes" },
    {
      "name": "NodeIterator.detach",
      "path": "nodeiterator/detach",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.expandEntityReferences",
      "path": "nodeiterator/expandentityreferences",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.filter",
      "path": "nodeiterator/filter",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.nextNode",
      "path": "nodeiterator/nextnode",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.pointerBeforeReferenceNode",
      "path": "nodeiterator/pointerbeforereferencenode",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.previousNode",
      "path": "nodeiterator/previousnode",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.referenceNode",
      "path": "nodeiterator/referencenode",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.root",
      "path": "nodeiterator/root",
      "type": "Nodes"
    },
    {
      "name": "NodeIterator.whatToShow",
      "path": "nodeiterator/whattoshow",
      "type": "Nodes"
    },
    { "name": "NodeList", "path": "nodelist", "type": "Nodes" },
    { "name": "NodeList.entries", "path": "nodelist/entries", "type": "Nodes" },
    { "name": "NodeList.forEach", "path": "nodelist/foreach", "type": "Nodes" },
    { "name": "NodeList.item", "path": "nodelist/item", "type": "Nodes" },
    { "name": "NodeList.keys", "path": "nodelist/keys", "type": "Nodes" },
    { "name": "NodeList.length", "path": "nodelist/length", "type": "Nodes" },
    { "name": "NodeList.values", "path": "nodelist/values", "type": "Nodes" },
    { "name": "Notation", "path": "notation", "type": "Miscellaneous" },
    { "name": "Notification", "path": "notification", "type": "Notification" },
    {
      "name": "Notification.actions",
      "path": "notification/actions",
      "type": "Notification"
    },
    {
      "name": "Notification.badge",
      "path": "notification/badge",
      "type": "Notification"
    },
    {
      "name": "Notification.body",
      "path": "notification/body",
      "type": "Notification"
    },
    {
      "name": "Notification.close",
      "path": "notification/close",
      "type": "Notification"
    },
    {
      "name": "Notification.constructor",
      "path": "notification/notification",
      "type": "Notification"
    },
    {
      "name": "Notification.data",
      "path": "notification/data",
      "type": "Notification"
    },
    {
      "name": "Notification.dir",
      "path": "notification/dir",
      "type": "Notification"
    },
    {
      "name": "Notification.icon",
      "path": "notification/icon",
      "type": "Notification"
    },
    {
      "name": "Notification.image",
      "path": "notification/image",
      "type": "Notification"
    },
    {
      "name": "Notification.lang",
      "path": "notification/lang",
      "type": "Notification"
    },
    {
      "name": "Notification.maxActions",
      "path": "notification/maxactions",
      "type": "Notification"
    },
    {
      "name": "Notification.onclick",
      "path": "notification/onclick",
      "type": "Notification"
    },
    {
      "name": "Notification.onclose",
      "path": "notification/onclose",
      "type": "Notification"
    },
    {
      "name": "Notification.onerror",
      "path": "notification/onerror",
      "type": "Notification"
    },
    {
      "name": "Notification.onshow",
      "path": "notification/onshow",
      "type": "Notification"
    },
    {
      "name": "Notification.permission",
      "path": "notification/permission",
      "type": "Notification"
    },
    {
      "name": "Notification.renotify",
      "path": "notification/renotify",
      "type": "Notification"
    },
    {
      "name": "Notification.requestPermission",
      "path": "notification/requestpermission",
      "type": "Notification"
    },
    {
      "name": "Notification.requireInteraction",
      "path": "notification/requireinteraction",
      "type": "Notification"
    },
    {
      "name": "Notification.silent",
      "path": "notification/silent",
      "type": "Notification"
    },
    {
      "name": "Notification.tag",
      "path": "notification/tag",
      "type": "Notification"
    },
    {
      "name": "Notification.timestamp",
      "path": "notification/timestamp",
      "type": "Notification"
    },
    {
      "name": "Notification.title",
      "path": "notification/title",
      "type": "Notification"
    },
    {
      "name": "Notification.vibrate",
      "path": "notification/vibrate",
      "type": "Notification"
    },
    {
      "name": "NotificationAction",
      "path": "notificationaction",
      "type": "Notification"
    },
    {
      "name": "NotificationEvent",
      "path": "notificationevent",
      "type": "Notification"
    },
    {
      "name": "NotificationEvent.action",
      "path": "notificationevent/action",
      "type": "Notification"
    },
    {
      "name": "NotificationEvent.constructor",
      "path": "notificationevent/notificationevent",
      "type": "Notification"
    },
    {
      "name": "NotificationEvent.notification",
      "path": "notificationevent/notification",
      "type": "Notification"
    },
    {
      "name": "Notifications API",
      "path": "notifications_api",
      "type": "Notification"
    },
    {
      "name": "Notifications API: Using the Notifications API",
      "path": "notifications_api/using_the_notifications_api",
      "type": "Notification"
    },
    {
      "name": "NotifyAudioAvailableEvent",
      "path": "notifyaudioavailableevent",
      "type": "Audio"
    },
    {
      "name": "OES element index uint",
      "path": "oes_element_index_uint",
      "type": "WebGL"
    },
    {
      "name": "OES fbo render mipmap",
      "path": "oes_fbo_render_mipmap",
      "type": "WebGL"
    },
    {
      "name": "OES standard derivatives",
      "path": "oes_standard_derivatives",
      "type": "WebGL"
    },
    {
      "name": "OES texture float",
      "path": "oes_texture_float",
      "type": "WebGL"
    },
    {
      "name": "OES texture float linear",
      "path": "oes_texture_float_linear",
      "type": "WebGL"
    },
    {
      "name": "OES texture half float",
      "path": "oes_texture_half_float",
      "type": "WebGL"
    },
    {
      "name": "OES texture half float linear",
      "path": "oes_texture_half_float_linear",
      "type": "WebGL"
    },
    {
      "name": "OES vertex array object",
      "path": "oes_vertex_array_object",
      "type": "WebGL"
    },
    {
      "name": "OfflineAudioCompletionEvent",
      "path": "offlineaudiocompletionevent",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioCompletionEvent.constructor",
      "path": "offlineaudiocompletionevent/offlineaudiocompletionevent",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioCompletionEvent.renderedBuffer",
      "path": "offlineaudiocompletionevent/renderedbuffer",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext",
      "path": "offlineaudiocontext",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.complete event",
      "path": "offlineaudiocontext/complete_event",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.constructor",
      "path": "offlineaudiocontext/offlineaudiocontext",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.length",
      "path": "offlineaudiocontext/length",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.oncomplete",
      "path": "offlineaudiocontext/oncomplete",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.resume",
      "path": "offlineaudiocontext/resume",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.startRendering",
      "path": "offlineaudiocontext/startrendering",
      "type": "Audio"
    },
    {
      "name": "OfflineAudioContext.suspend",
      "path": "offlineaudiocontext/suspend",
      "type": "Audio"
    },
    { "name": "OffscreenCanvas", "path": "offscreencanvas", "type": "Canvas" },
    {
      "name": "OffscreenCanvas.constructor",
      "path": "offscreencanvas/offscreencanvas",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.convertToBlob",
      "path": "offscreencanvas/converttoblob",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.getContext",
      "path": "offscreencanvas/getcontext",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.height",
      "path": "offscreencanvas/height",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.toBlob",
      "path": "offscreencanvas/toblob",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.transferToImageBitmap",
      "path": "offscreencanvas/transfertoimagebitmap",
      "type": "Canvas"
    },
    {
      "name": "OffscreenCanvas.width",
      "path": "offscreencanvas/width",
      "type": "Canvas"
    },
    {
      "name": "OrientationSensor",
      "path": "orientationsensor",
      "type": "Sensors"
    },
    {
      "name": "OrientationSensor.populateMatrix",
      "path": "orientationsensor/populatematrix",
      "type": "Sensors"
    },
    {
      "name": "OrientationSensor.quaternion",
      "path": "orientationsensor/quaternion",
      "type": "Sensors"
    },
    { "name": "OscillatorNode", "path": "oscillatornode", "type": "Audio" },
    {
      "name": "OscillatorNode.constructor",
      "path": "oscillatornode/oscillatornode",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.detune",
      "path": "oscillatornode/detune",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.frequency",
      "path": "oscillatornode/frequency",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.onended",
      "path": "oscillatornode/onended",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.setPeriodicWave",
      "path": "oscillatornode/setperiodicwave",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.start",
      "path": "oscillatornode/start",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.stop",
      "path": "oscillatornode/stop",
      "type": "Audio"
    },
    {
      "name": "OscillatorNode.type",
      "path": "oscillatornode/type",
      "type": "Audio"
    },
    {
      "name": "OverconstrainedError",
      "path": "overconstrainederror",
      "type": "Media"
    },
    {
      "name": "OverconstrainedError.constraint",
      "path": "overconstrainederror/constraint",
      "type": "Media"
    },
    {
      "name": "OverconstrainedError.constructor",
      "path": "overconstrainederror/overconstrainederror",
      "type": "Media"
    },
    {
      "name": "OVR multiview2",
      "path": "ovr_multiview2",
      "type": "Miscellaneous"
    },
    {
      "name": "OVR multiview2.framebufferTextureMultiviewOVR",
      "path": "ovr_multiview2/framebuffertexturemultiviewovr",
      "type": "Miscellaneous"
    },
    {
      "name": "Page Visibility API",
      "path": "page_visibility_api",
      "type": "Web Sockets"
    },
    {
      "name": "PageTransitionEvent",
      "path": "pagetransitionevent",
      "type": "Events"
    },
    {
      "name": "PageTransitionEvent.persisted",
      "path": "pagetransitionevent/persisted",
      "type": "Events"
    },
    { "name": "PaintWorklet", "path": "paintworklet", "type": "Miscellaneous" },
    {
      "name": "PaintWorklet.devicePixelRatio",
      "path": "paintworklet/devicepixelratio",
      "type": "Miscellaneous"
    },
    {
      "name": "PaintWorklet.registerPaint",
      "path": "paintworklet/registerpaint",
      "type": "Miscellaneous"
    },
    { "name": "PannerNode", "path": "pannernode", "type": "Audio" },
    {
      "name": "PannerNode.coneInnerAngle",
      "path": "pannernode/coneinnerangle",
      "type": "Audio"
    },
    {
      "name": "PannerNode.coneOuterAngle",
      "path": "pannernode/coneouterangle",
      "type": "Audio"
    },
    {
      "name": "PannerNode.coneOuterGain",
      "path": "pannernode/coneoutergain",
      "type": "Audio"
    },
    {
      "name": "PannerNode.constructor",
      "path": "pannernode/pannernode",
      "type": "Audio"
    },
    {
      "name": "PannerNode.distanceModel",
      "path": "pannernode/distancemodel",
      "type": "Audio"
    },
    {
      "name": "PannerNode.maxDistance",
      "path": "pannernode/maxdistance",
      "type": "Audio"
    },
    {
      "name": "PannerNode.orientationX",
      "path": "pannernode/orientationx",
      "type": "Audio"
    },
    {
      "name": "PannerNode.orientationY",
      "path": "pannernode/orientationy",
      "type": "Audio"
    },
    {
      "name": "PannerNode.orientationZ",
      "path": "pannernode/orientationz",
      "type": "Audio"
    },
    {
      "name": "PannerNode.panningModel",
      "path": "pannernode/panningmodel",
      "type": "Audio"
    },
    {
      "name": "PannerNode.positionX",
      "path": "pannernode/positionx",
      "type": "Audio"
    },
    {
      "name": "PannerNode.positionY",
      "path": "pannernode/positiony",
      "type": "Audio"
    },
    {
      "name": "PannerNode.positionZ",
      "path": "pannernode/positionz",
      "type": "Audio"
    },
    {
      "name": "PannerNode.refDistance",
      "path": "pannernode/refdistance",
      "type": "Audio"
    },
    {
      "name": "PannerNode.rolloffFactor",
      "path": "pannernode/rollofffactor",
      "type": "Audio"
    },
    {
      "name": "PannerNode.setOrientation",
      "path": "pannernode/setorientation",
      "type": "Audio"
    },
    {
      "name": "PannerNode.setPosition",
      "path": "pannernode/setposition",
      "type": "Audio"
    },
    {
      "name": "PannerNode.setVelocity",
      "path": "pannernode/setvelocity",
      "type": "Audio"
    },
    { "name": "ParentNode", "path": "parentnode", "type": "Nodes" },
    {
      "name": "ParentNode.querySelector",
      "path": "parentnode/queryselector",
      "type": "Nodes"
    },
    {
      "name": "ParentNode.querySelectorAll",
      "path": "parentnode/queryselectorall",
      "type": "Nodes"
    },
    {
      "name": "PasswordCredential",
      "path": "passwordcredential",
      "type": "Credential Management"
    },
    {
      "name": "PasswordCredential.constructor",
      "path": "passwordcredential/passwordcredential",
      "type": "Credential Management"
    },
    {
      "name": "PasswordCredential.iconURL",
      "path": "passwordcredential/iconurl",
      "type": "Credential Management"
    },
    {
      "name": "PasswordCredential.name",
      "path": "passwordcredential/name",
      "type": "Credential Management"
    },
    {
      "name": "PasswordCredential.password",
      "path": "passwordcredential/password",
      "type": "Credential Management"
    },
    { "name": "Path2D", "path": "path2d", "type": "Canvas" },
    { "name": "Path2D.addPath", "path": "path2d/addpath", "type": "Canvas" },
    { "name": "Path2D.constructor", "path": "path2d/path2d", "type": "Canvas" },
    { "name": "PayerErrors", "path": "payererrors", "type": "Payments" },
    {
      "name": "PayerErrors.email",
      "path": "payererrors/email",
      "type": "Payments"
    },
    {
      "name": "PayerErrors.name",
      "path": "payererrors/name",
      "type": "Payments"
    },
    {
      "name": "PayerErrors.phone",
      "path": "payererrors/phone",
      "type": "Payments"
    },
    {
      "name": "Payment Request API",
      "path": "payment_request_api",
      "type": "Payments"
    },
    {
      "name": "Payment Request API: Concepts",
      "path": "payment_request_api/concepts",
      "type": "Payments"
    },
    {
      "name": "Payment Request API: Using the Payment Request API",
      "path": "payment_request_api/using_the_payment_request_api",
      "type": "Miscellaneous"
    },
    { "name": "PaymentAddress", "path": "paymentaddress", "type": "Payments" },
    {
      "name": "PaymentAddress.addressLine",
      "path": "paymentaddress/addressline",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.city",
      "path": "paymentaddress/city",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.country",
      "path": "paymentaddress/country",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.dependentLocality",
      "path": "paymentaddress/dependentlocality",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.languageCode",
      "path": "paymentaddress/languagecode",
      "type": "Miscellaneous"
    },
    {
      "name": "PaymentAddress.organization",
      "path": "paymentaddress/organization",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.phone",
      "path": "paymentaddress/phone",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.postalCode",
      "path": "paymentaddress/postalcode",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.recipient",
      "path": "paymentaddress/recipient",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.region",
      "path": "paymentaddress/region",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.regionCode",
      "path": "paymentaddress/regioncode",
      "type": "Miscellaneous"
    },
    {
      "name": "PaymentAddress.sortingCode",
      "path": "paymentaddress/sortingcode",
      "type": "Payments"
    },
    {
      "name": "PaymentAddress.toJSON",
      "path": "paymentaddress/tojson",
      "type": "Miscellaneous"
    },
    {
      "name": "PaymentCurrencyAmount",
      "path": "paymentcurrencyamount",
      "type": "Payments"
    },
    {
      "name": "PaymentCurrencyAmount.currency",
      "path": "paymentcurrencyamount/currency",
      "type": "Payments"
    },
    {
      "name": "PaymentCurrencyAmount.currencySystem",
      "path": "paymentcurrencyamount/currencysystem",
      "type": "Payments"
    },
    {
      "name": "PaymentCurrencyAmount.value",
      "path": "paymentcurrencyamount/value",
      "type": "Payments"
    },
    {
      "name": "PaymentDetailsBase",
      "path": "paymentdetailsbase",
      "type": "Payments"
    },
    {
      "name": "PaymentDetailsUpdate",
      "path": "paymentdetailsupdate",
      "type": "Payments"
    },
    {
      "name": "PaymentDetailsUpdate.error",
      "path": "paymentdetailsupdate/error",
      "type": "Payments"
    },
    {
      "name": "PaymentDetailsUpdate.shippingAddressErrors",
      "path": "paymentdetailsupdate/shippingaddresserrors",
      "type": "Payments"
    },
    { "name": "PaymentItem", "path": "paymentitem", "type": "Payments" },
    {
      "name": "PaymentMethodChangeEvent",
      "path": "paymentmethodchangeevent",
      "type": "Payments"
    },
    {
      "name": "PaymentMethodChangeEvent.constructor",
      "path": "paymentmethodchangeevent/paymentmethodchangeevent",
      "type": "Payments"
    },
    {
      "name": "PaymentMethodChangeEvent.methodDetails",
      "path": "paymentmethodchangeevent/methoddetails",
      "type": "Payments"
    },
    {
      "name": "PaymentMethodChangeEvent.methodName",
      "path": "paymentmethodchangeevent/methodname",
      "type": "Payments"
    },
    { "name": "PaymentRequest", "path": "paymentrequest", "type": "Payments" },
    {
      "name": "PaymentRequest.abort",
      "path": "paymentrequest/abort",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.canMakePayment",
      "path": "paymentrequest/canmakepayment",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.constructor",
      "path": "paymentrequest/paymentrequest",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.id",
      "path": "paymentrequest/id",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.merchantvalidation event",
      "path": "paymentrequest/merchantvalidation_event",
      "type": "Miscellaneous"
    },
    {
      "name": "PaymentRequest.onmerchantvalidation",
      "path": "paymentrequest/onmerchantvalidation",
      "type": "Miscellaneous"
    },
    {
      "name": "PaymentRequest.onpaymentmethodchange",
      "path": "paymentrequest/onpaymentmethodchange",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.onshippingaddresschange",
      "path": "paymentrequest/onshippingaddresschange",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.onshippingoptionchange",
      "path": "paymentrequest/onshippingoptionchange",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.paymentmethodchange event",
      "path": "paymentrequest/paymentmethodchange_event",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.shippingAddress",
      "path": "paymentrequest/shippingaddress",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.shippingaddresschange event",
      "path": "paymentrequest/shippingaddresschange_event",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.shippingOption",
      "path": "paymentrequest/shippingoption",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.shippingoptionchange event",
      "path": "paymentrequest/shippingoptionchange_event",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.shippingType",
      "path": "paymentrequest/shippingtype",
      "type": "Payments"
    },
    {
      "name": "PaymentRequest.show",
      "path": "paymentrequest/show",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent",
      "path": "paymentrequestevent",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.constructor",
      "path": "paymentrequestevent/paymentrequestevent",
      "type": "Events"
    },
    {
      "name": "PaymentRequestEvent.instrumentKey",
      "path": "paymentrequestevent/instrumentkey",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.methodData",
      "path": "paymentrequestevent/methoddata",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.modifiers",
      "path": "paymentrequestevent/modifiers",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.openWindow",
      "path": "paymentrequestevent/openwindow",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.paymentRequestId",
      "path": "paymentrequestevent/paymentrequestid",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.paymentRequestOrigin",
      "path": "paymentrequestevent/paymentrequestorigin",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.respondWith",
      "path": "paymentrequestevent/respondwith",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.topOrigin",
      "path": "paymentrequestevent/toporigin",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestEvent.total",
      "path": "paymentrequestevent/total",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestUpdateEvent",
      "path": "paymentrequestupdateevent",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestUpdateEvent.constructor",
      "path": "paymentrequestupdateevent/paymentrequestupdateevent",
      "type": "Payments"
    },
    {
      "name": "PaymentRequestUpdateEvent.updateWith",
      "path": "paymentrequestupdateevent/updatewith",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse",
      "path": "paymentresponse",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.complete",
      "path": "paymentresponse/complete",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.details",
      "path": "paymentresponse/details",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.methodName",
      "path": "paymentresponse/methodname",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.onpayerdetailchange",
      "path": "paymentresponse/onpayerdetailchange",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.payerdetailchange event",
      "path": "paymentresponse/payerdetailchange_event",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.payerEmail",
      "path": "paymentresponse/payeremail",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.payerName",
      "path": "paymentresponse/payername",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.payerPhone",
      "path": "paymentresponse/payerphone",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.requestId",
      "path": "paymentresponse/requestid",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.retry",
      "path": "paymentresponse/retry",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.shippingAddress",
      "path": "paymentresponse/shippingaddress",
      "type": "Payments"
    },
    {
      "name": "PaymentResponse.shippingOption",
      "path": "paymentresponse/shippingoption",
      "type": "Payments"
    },
    {
      "name": "PaymentValidationErrors",
      "path": "paymentvalidationerrors",
      "type": "Payments"
    },
    { "name": "Pbkdf2Params", "path": "pbkdf2params", "type": "Cryptography" },
    { "name": "Performance", "path": "performance", "type": "Performance" },
    {
      "name": "Performance API",
      "path": "performance_api",
      "type": "Performance"
    },
    {
      "name": "Performance API: Using the Performance API",
      "path": "performance_api/using_the_performance_api",
      "type": "Performance"
    },
    {
      "name": "Performance Timeline",
      "path": "performance_timeline",
      "type": "Performance"
    },
    {
      "name": "Performance Timeline.Using Performance Timeline",
      "path": "performance_timeline/using_performance_timeline",
      "type": "Performance"
    },
    {
      "name": "Performance.clearMarks",
      "path": "performance/clearmarks",
      "type": "Performance"
    },
    {
      "name": "Performance.clearMeasures",
      "path": "performance/clearmeasures",
      "type": "Performance"
    },
    {
      "name": "Performance.clearResourceTimings",
      "path": "performance/clearresourcetimings",
      "type": "Performance"
    },
    {
      "name": "Performance.getEntries",
      "path": "performance/getentries",
      "type": "Performance"
    },
    {
      "name": "Performance.getEntriesByName",
      "path": "performance/getentriesbyname",
      "type": "Performance"
    },
    {
      "name": "Performance.getEntriesByType",
      "path": "performance/getentriesbytype",
      "type": "Performance"
    },
    {
      "name": "Performance.mark",
      "path": "performance/mark",
      "type": "Performance"
    },
    {
      "name": "Performance.measure",
      "path": "performance/measure",
      "type": "Performance"
    },
    {
      "name": "Performance.memory",
      "path": "performance/memory",
      "type": "Performance"
    },
    {
      "name": "Performance.navigation",
      "path": "performance/navigation",
      "type": "Performance"
    },
    {
      "name": "Performance.now",
      "path": "performance/now",
      "type": "Performance"
    },
    {
      "name": "Performance.onresourcetimingbufferfull",
      "path": "performance/onresourcetimingbufferfull",
      "type": "Performance"
    },
    {
      "name": "Performance.resourcetimingbufferfull event",
      "path": "performance/resourcetimingbufferfull_event",
      "type": "Performance"
    },
    {
      "name": "Performance.setResourceTimingBufferSize",
      "path": "performance/setresourcetimingbuffersize",
      "type": "Performance"
    },
    {
      "name": "Performance.timeOrigin",
      "path": "performance/timeorigin",
      "type": "Performance"
    },
    {
      "name": "Performance.timing",
      "path": "performance/timing",
      "type": "Performance"
    },
    {
      "name": "Performance.toJSON",
      "path": "performance/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming",
      "path": "performanceelementtiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.element",
      "path": "performanceelementtiming/element",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.id",
      "path": "performanceelementtiming/id",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.identifier",
      "path": "performanceelementtiming/identifier",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.intersectionRect",
      "path": "performanceelementtiming/intersectionrect",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.loadTime",
      "path": "performanceelementtiming/loadtime",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.naturalHeight",
      "path": "performanceelementtiming/naturalheight",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.naturalWidth",
      "path": "performanceelementtiming/naturalwidth",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.renderTime",
      "path": "performanceelementtiming/rendertime",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.toJSON",
      "path": "performanceelementtiming/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceElementTiming.url",
      "path": "performanceelementtiming/url",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry",
      "path": "performanceentry",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry.duration",
      "path": "performanceentry/duration",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry.entryType",
      "path": "performanceentry/entrytype",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry.name",
      "path": "performanceentry/name",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry.startTime",
      "path": "performanceentry/starttime",
      "type": "Performance"
    },
    {
      "name": "PerformanceEntry.toJSON",
      "path": "performanceentry/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceEventTiming",
      "path": "performanceeventtiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceFrameTiming",
      "path": "performanceframetiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceLongTaskTiming",
      "path": "performancelongtasktiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceLongTaskTiming.attribution",
      "path": "performancelongtasktiming/attribution",
      "type": "Performance"
    },
    {
      "name": "PerformanceMark",
      "path": "performancemark",
      "type": "Performance"
    },
    {
      "name": "PerformanceMeasure",
      "path": "performancemeasure",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigation",
      "path": "performancenavigation",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigation.redirectCount",
      "path": "performancenavigation/redirectcount",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigation.type",
      "path": "performancenavigation/type",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming",
      "path": "performancenavigationtiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.domComplete",
      "path": "performancenavigationtiming/domcomplete",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.domContentLoadedEventEnd",
      "path": "performancenavigationtiming/domcontentloadedeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.domContentLoadedEventStart",
      "path": "performancenavigationtiming/domcontentloadedeventstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.domInteractive",
      "path": "performancenavigationtiming/dominteractive",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.loadEventEnd",
      "path": "performancenavigationtiming/loadeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.loadEventStart",
      "path": "performancenavigationtiming/loadeventstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.redirectCount",
      "path": "performancenavigationtiming/redirectcount",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.toJSON",
      "path": "performancenavigationtiming/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.type",
      "path": "performancenavigationtiming/type",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.unloadEventEnd",
      "path": "performancenavigationtiming/unloadeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceNavigationTiming.unloadEventStart",
      "path": "performancenavigationtiming/unloadeventstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver",
      "path": "performanceobserver",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver.constructor",
      "path": "performanceobserver/performanceobserver",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver.disconnect",
      "path": "performanceobserver/disconnect",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver.observe",
      "path": "performanceobserver/observe",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver.supportedEntryTypes",
      "path": "performanceobserver/supportedentrytypes",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserver.takeRecords",
      "path": "performanceobserver/takerecords",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserverEntryList",
      "path": "performanceobserverentrylist",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserverEntryList.getEntries",
      "path": "performanceobserverentrylist/getentries",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserverEntryList.getEntriesByName",
      "path": "performanceobserverentrylist/getentriesbyname",
      "type": "Performance"
    },
    {
      "name": "PerformanceObserverEntryList.getEntriesByType",
      "path": "performanceobserverentrylist/getentriesbytype",
      "type": "Performance"
    },
    {
      "name": "PerformancePaintTiming",
      "path": "performancepainttiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming",
      "path": "performanceresourcetiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.connectEnd",
      "path": "performanceresourcetiming/connectend",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.connectStart",
      "path": "performanceresourcetiming/connectstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.decodedBodySize",
      "path": "performanceresourcetiming/decodedbodysize",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.domainLookupEnd",
      "path": "performanceresourcetiming/domainlookupend",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.domainLookupStart",
      "path": "performanceresourcetiming/domainlookupstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.encodedBodySize",
      "path": "performanceresourcetiming/encodedbodysize",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.fetchStart",
      "path": "performanceresourcetiming/fetchstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.initiatorType",
      "path": "performanceresourcetiming/initiatortype",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.nextHopProtocol",
      "path": "performanceresourcetiming/nexthopprotocol",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.redirectEnd",
      "path": "performanceresourcetiming/redirectend",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.redirectStart",
      "path": "performanceresourcetiming/redirectstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.requestStart",
      "path": "performanceresourcetiming/requeststart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.responseEnd",
      "path": "performanceresourcetiming/responseend",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.responseStart",
      "path": "performanceresourcetiming/responsestart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.secureConnectionStart",
      "path": "performanceresourcetiming/secureconnectionstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.serverTiming",
      "path": "performanceresourcetiming/servertiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.toJSON",
      "path": "performanceresourcetiming/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.transferSize",
      "path": "performanceresourcetiming/transfersize",
      "type": "Performance"
    },
    {
      "name": "PerformanceResourceTiming.workerStart",
      "path": "performanceresourcetiming/workerstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceServerTiming",
      "path": "performanceservertiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceServerTiming.description",
      "path": "performanceservertiming/description",
      "type": "Performance"
    },
    {
      "name": "PerformanceServerTiming.duration",
      "path": "performanceservertiming/duration",
      "type": "Performance"
    },
    {
      "name": "PerformanceServerTiming.name",
      "path": "performanceservertiming/name",
      "type": "Performance"
    },
    {
      "name": "PerformanceServerTiming.toJSON",
      "path": "performanceservertiming/tojson",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming",
      "path": "performancetiming",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.connectEnd",
      "path": "performancetiming/connectend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.connectStart",
      "path": "performancetiming/connectstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domainLookupEnd",
      "path": "performancetiming/domainlookupend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domainLookupStart",
      "path": "performancetiming/domainlookupstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domComplete",
      "path": "performancetiming/domcomplete",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domContentLoadedEventEnd",
      "path": "performancetiming/domcontentloadedeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domContentLoadedEventStart",
      "path": "performancetiming/domcontentloadedeventstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domInteractive",
      "path": "performancetiming/dominteractive",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.domLoading",
      "path": "performancetiming/domloading",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.fetchStart",
      "path": "performancetiming/fetchstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.loadEventEnd",
      "path": "performancetiming/loadeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.loadEventStart",
      "path": "performancetiming/loadeventstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.navigationStart",
      "path": "performancetiming/navigationstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.redirectEnd",
      "path": "performancetiming/redirectend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.redirectStart",
      "path": "performancetiming/redirectstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.requestStart",
      "path": "performancetiming/requeststart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.responseEnd",
      "path": "performancetiming/responseend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.responseStart",
      "path": "performancetiming/responsestart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.secureConnectionStart",
      "path": "performancetiming/secureconnectionstart",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.unloadEventEnd",
      "path": "performancetiming/unloadeventend",
      "type": "Performance"
    },
    {
      "name": "PerformanceTiming.unloadEventStart",
      "path": "performancetiming/unloadeventstart",
      "type": "Performance"
    },
    {
      "name": "PeriodicSyncEvent",
      "path": "periodicsyncevent",
      "type": "Events"
    },
    {
      "name": "PeriodicSyncEvent.constructor",
      "path": "periodicsyncevent/periodicsyncevent",
      "type": "Events"
    },
    {
      "name": "PeriodicSyncEvent.tag",
      "path": "periodicsyncevent/tag",
      "type": "Events"
    },
    {
      "name": "PeriodicSyncManager",
      "path": "periodicsyncmanager",
      "type": "Miscellaneous"
    },
    {
      "name": "PeriodicSyncManager.getTags",
      "path": "periodicsyncmanager/gettags",
      "type": "Miscellaneous"
    },
    {
      "name": "PeriodicSyncManager.register",
      "path": "periodicsyncmanager/register",
      "type": "Miscellaneous"
    },
    {
      "name": "PeriodicSyncManager.unregister",
      "path": "periodicsyncmanager/unregister",
      "type": "Miscellaneous"
    },
    { "name": "PeriodicWave", "path": "periodicwave", "type": "Audio" },
    {
      "name": "PeriodicWave.constructor",
      "path": "periodicwave/periodicwave",
      "type": "Audio"
    },
    { "name": "Permissions", "path": "permissions", "type": "Miscellaneous" },
    {
      "name": "Permissions API",
      "path": "permissions_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Permissions API: Using the Permissions API",
      "path": "permissions_api/using_the_permissions_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Permissions.query",
      "path": "permissions/query",
      "type": "Miscellaneous"
    },
    {
      "name": "Permissions.revoke",
      "path": "permissions/revoke",
      "type": "Miscellaneous"
    },
    {
      "name": "PermissionStatus",
      "path": "permissionstatus",
      "type": "Miscellaneous"
    },
    {
      "name": "PermissionStatus.onchange",
      "path": "permissionstatus/onchange",
      "type": "Miscellaneous"
    },
    {
      "name": "PermissionStatus.state",
      "path": "permissionstatus/state",
      "type": "Miscellaneous"
    },
    {
      "name": "PhotoCapabilities",
      "path": "photocapabilities",
      "type": "Media Streams"
    },
    {
      "name": "PhotoCapabilities.fillLightMode",
      "path": "photocapabilities/filllightmode",
      "type": "Media Streams"
    },
    {
      "name": "PhotoCapabilities.imageHeight",
      "path": "photocapabilities/imageheight",
      "type": "Media Streams"
    },
    {
      "name": "PhotoCapabilities.imageWidth",
      "path": "photocapabilities/imagewidth",
      "type": "Media Streams"
    },
    {
      "name": "PhotoCapabilities.redEyeReduction",
      "path": "photocapabilities/redeyereduction",
      "type": "Media Streams"
    },
    {
      "name": "Picture-in-Picture API",
      "path": "picture-in-picture_api",
      "type": "Miscellaneous"
    },
    {
      "name": "PictureInPictureEvent",
      "path": "pictureinpictureevent",
      "type": "Events"
    },
    {
      "name": "PictureInPictureEvent.constructor",
      "path": "pictureinpictureevent/pictureinpictureevent",
      "type": "Events"
    },
    {
      "name": "PictureInPictureWindow",
      "path": "pictureinpicturewindow",
      "type": "Miscellaneous"
    },
    {
      "name": "PictureInPictureWindow.height",
      "path": "pictureinpicturewindow/height",
      "type": "Miscellaneous"
    },
    {
      "name": "PictureInPictureWindow.onresize",
      "path": "pictureinpicturewindow/onresize",
      "type": "Miscellaneous"
    },
    {
      "name": "PictureInPictureWindow.resize event",
      "path": "pictureinpicturewindow/resize_event",
      "type": "Miscellaneous"
    },
    {
      "name": "PictureInPictureWindow.width",
      "path": "pictureinpicturewindow/width",
      "type": "Miscellaneous"
    },
    { "name": "Plugin", "path": "plugin", "type": "Miscellaneous" },
    { "name": "PluginArray", "path": "pluginarray", "type": "Miscellaneous" },
    { "name": "Point", "path": "point", "type": "Miscellaneous" },
    {
      "name": "Pointer events",
      "path": "pointer_events",
      "type": "Pointer Events"
    },
    {
      "name": "Pointer events.Multi-touch interaction",
      "path": "pointer_events/multi-touch_interaction",
      "type": "Pointer Events"
    },
    {
      "name": "Pointer events.Pinch zoom gestures",
      "path": "pointer_events/pinch_zoom_gestures",
      "type": "Pointer Events"
    },
    {
      "name": "Pointer events.Using Pointer Events",
      "path": "pointer_events/using_pointer_events",
      "type": "Pointer Events"
    },
    {
      "name": "Pointer Lock API",
      "path": "pointer_lock_api",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent",
      "path": "pointerevent",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.constructor",
      "path": "pointerevent/pointerevent",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.getCoalescedEvents",
      "path": "pointerevent/getcoalescedevents",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.height",
      "path": "pointerevent/height",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.isPrimary",
      "path": "pointerevent/isprimary",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.pointerId",
      "path": "pointerevent/pointerid",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.pointerType",
      "path": "pointerevent/pointertype",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.pressure",
      "path": "pointerevent/pressure",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.tangentialPressure",
      "path": "pointerevent/tangentialpressure",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.tiltX",
      "path": "pointerevent/tiltx",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.tiltY",
      "path": "pointerevent/tilty",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.twist",
      "path": "pointerevent/twist",
      "type": "Pointer Events"
    },
    {
      "name": "PointerEvent.width",
      "path": "pointerevent/width",
      "type": "Pointer Events"
    },
    { "name": "PopStateEvent", "path": "popstateevent", "type": "Events" },
    {
      "name": "PositionOptions",
      "path": "positionoptions",
      "type": "Geolocation"
    },
    {
      "name": "PositionOptions.enableHighAccuracy",
      "path": "positionoptions/enablehighaccuracy",
      "type": "Geolocation"
    },
    {
      "name": "PositionOptions.maximumAge",
      "path": "positionoptions/maximumage",
      "type": "Geolocation"
    },
    {
      "name": "PositionOptions.timeout",
      "path": "positionoptions/timeout",
      "type": "Geolocation"
    },
    {
      "name": "PositionSensorVRDevice",
      "path": "positionsensorvrdevice",
      "type": "WebVR"
    },
    {
      "name": "PositionSensorVRDevice.getImmediateState",
      "path": "positionsensorvrdevice/getimmediatestate",
      "type": "WebVR"
    },
    {
      "name": "PositionSensorVRDevice.getState",
      "path": "positionsensorvrdevice/getstate",
      "type": "WebVR"
    },
    {
      "name": "PositionSensorVRDevice.resetSensor",
      "path": "positionsensorvrdevice/resetsensor",
      "type": "WebVR"
    },
    { "name": "Presentation", "path": "presentation", "type": "Presentation" },
    {
      "name": "Presentation API",
      "path": "presentation_api",
      "type": "Presentation"
    },
    {
      "name": "Presentation.defaultRequest",
      "path": "presentation/defaultrequest",
      "type": "Presentation"
    },
    {
      "name": "Presentation.receiver",
      "path": "presentation/receiver",
      "type": "Presentation"
    },
    {
      "name": "PresentationAvailability",
      "path": "presentationavailability",
      "type": "Presentation"
    },
    {
      "name": "PresentationAvailability.onchange",
      "path": "presentationavailability/onchange",
      "type": "Presentation"
    },
    {
      "name": "PresentationAvailability.value",
      "path": "presentationavailability/value",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection",
      "path": "presentationconnection",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.binaryType",
      "path": "presentationconnection/binarytype",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.close",
      "path": "presentationconnection/close",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.id",
      "path": "presentationconnection/id",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.send",
      "path": "presentationconnection/send",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.state",
      "path": "presentationconnection/state",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.terminate",
      "path": "presentationconnection/terminate",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnection.url",
      "path": "presentationconnection/url",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnectionAvailableEvent",
      "path": "presentationconnectionavailableevent",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnectionAvailableEvent.connection",
      "path": "presentationconnectionavailableevent/connection",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnectionAvailableEvent.constructor",
      "path": "presentationconnectionavailableevent/presentationconnectionavailableevent",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnectionCloseEvent",
      "path": "presentationconnectioncloseevent",
      "type": "Presentation"
    },
    {
      "name": "PresentationConnectionList",
      "path": "presentationconnectionlist",
      "type": "Presentation"
    },
    {
      "name": "PresentationReceiver",
      "path": "presentationreceiver",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest",
      "path": "presentationrequest",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest.constructor",
      "path": "presentationrequest/presentationrequest",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest.getAvailability",
      "path": "presentationrequest/getavailability",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest.onconnectionavailable",
      "path": "presentationrequest/onconnectionavailable",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest.reconnect",
      "path": "presentationrequest/reconnect",
      "type": "Presentation"
    },
    {
      "name": "PresentationRequest.start",
      "path": "presentationrequest/start",
      "type": "Presentation"
    },
    {
      "name": "ProcessingInstruction",
      "path": "processinginstruction",
      "type": "Miscellaneous"
    },
    {
      "name": "ProgressEvent",
      "path": "progressevent",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "ProgressEvent.constructor",
      "path": "progressevent/progressevent",
      "type": "Events"
    },
    {
      "name": "ProgressEvent.initProgressEvent",
      "path": "progressevent/initprogressevent",
      "type": "Events"
    },
    {
      "name": "ProgressEvent.lengthComputable",
      "path": "progressevent/lengthcomputable",
      "type": "Events"
    },
    {
      "name": "ProgressEvent.loaded",
      "path": "progressevent/loaded",
      "type": "Events"
    },
    {
      "name": "ProgressEvent.total",
      "path": "progressevent/total",
      "type": "Events"
    },
    {
      "name": "PromiseRejectionEvent",
      "path": "promiserejectionevent",
      "type": "Events"
    },
    {
      "name": "PromiseRejectionEvent.constructor",
      "path": "promiserejectionevent/promiserejectionevent",
      "type": "Events"
    },
    {
      "name": "PromiseRejectionEvent.promise",
      "path": "promiserejectionevent/promise",
      "type": "Events"
    },
    {
      "name": "PromiseRejectionEvent.reason",
      "path": "promiserejectionevent/reason",
      "type": "Events"
    },
    {
      "name": "Proximity Events",
      "path": "proximity_events",
      "type": "Events"
    },
    {
      "name": "PublicKeyCredential",
      "path": "publickeycredential",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredential.getClientExtensionResults",
      "path": "publickeycredential/getclientextensionresults",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredential.id",
      "path": "publickeycredential/id",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable",
      "path": "publickeycredential/isuserverifyingplatformauthenticatoravailable",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredential.rawId",
      "path": "publickeycredential/rawid",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredential.response",
      "path": "publickeycredential/response",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions",
      "path": "publickeycredentialcreationoptions",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.attestation",
      "path": "publickeycredentialcreationoptions/attestation",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.authenticatorSelection",
      "path": "publickeycredentialcreationoptions/authenticatorselection",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.challenge",
      "path": "publickeycredentialcreationoptions/challenge",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.excludeCredentials",
      "path": "publickeycredentialcreationoptions/excludecredentials",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.extensions",
      "path": "publickeycredentialcreationoptions/extensions",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.pubKeyCredParams",
      "path": "publickeycredentialcreationoptions/pubkeycredparams",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.rp",
      "path": "publickeycredentialcreationoptions/rp",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.timeout",
      "path": "publickeycredentialcreationoptions/timeout",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialCreationOptions.user",
      "path": "publickeycredentialcreationoptions/user",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions",
      "path": "publickeycredentialrequestoptions",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.allowCredentials",
      "path": "publickeycredentialrequestoptions/allowcredentials",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.challenge",
      "path": "publickeycredentialrequestoptions/challenge",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.extensions",
      "path": "publickeycredentialrequestoptions/extensions",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.rpId",
      "path": "publickeycredentialrequestoptions/rpid",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.timeout",
      "path": "publickeycredentialrequestoptions/timeout",
      "type": "Credential Management"
    },
    {
      "name": "PublicKeyCredentialRequestOptions.userVerification",
      "path": "publickeycredentialrequestoptions/userverification",
      "type": "Credential Management"
    },
    { "name": "Push API", "path": "push_api", "type": "Push" },
    {
      "name": "Push API: Best Practices",
      "path": "push_api/best_practices",
      "type": "Push"
    },
    { "name": "PushEvent", "path": "pushevent", "type": "Push" },
    {
      "name": "PushEvent.constructor",
      "path": "pushevent/pushevent",
      "type": "Push"
    },
    { "name": "PushEvent.data", "path": "pushevent/data", "type": "Push" },
    { "name": "PushManager", "path": "pushmanager", "type": "Push" },
    {
      "name": "PushManager.getSubscription",
      "path": "pushmanager/getsubscription",
      "type": "Push"
    },
    {
      "name": "PushManager.hasPermission",
      "path": "pushmanager/haspermission",
      "type": "Push"
    },
    {
      "name": "PushManager.permissionState",
      "path": "pushmanager/permissionstate",
      "type": "Push"
    },
    {
      "name": "PushManager.register",
      "path": "pushmanager/register",
      "type": "Push"
    },
    {
      "name": "PushManager.registrations",
      "path": "pushmanager/registrations",
      "type": "Push"
    },
    {
      "name": "PushManager.subscribe",
      "path": "pushmanager/subscribe",
      "type": "Push"
    },
    {
      "name": "PushManager.supportedContentEncodings",
      "path": "pushmanager/supportedcontentencodings",
      "type": "Push"
    },
    {
      "name": "PushManager.unregister",
      "path": "pushmanager/unregister",
      "type": "Push"
    },
    { "name": "PushMessageData", "path": "pushmessagedata", "type": "Push" },
    {
      "name": "PushMessageData.arrayBuffer",
      "path": "pushmessagedata/arraybuffer",
      "type": "Push"
    },
    {
      "name": "PushMessageData.blob",
      "path": "pushmessagedata/blob",
      "type": "Push"
    },
    {
      "name": "PushMessageData.json",
      "path": "pushmessagedata/json",
      "type": "Push"
    },
    {
      "name": "PushMessageData.text",
      "path": "pushmessagedata/text",
      "type": "Push"
    },
    {
      "name": "PushRegistrationManager",
      "path": "pushregistrationmanager",
      "type": "Push"
    },
    { "name": "PushSubscription", "path": "pushsubscription", "type": "Push" },
    {
      "name": "PushSubscription.endpoint",
      "path": "pushsubscription/endpoint",
      "type": "Push"
    },
    {
      "name": "PushSubscription.expirationTime",
      "path": "pushsubscription/expirationtime",
      "type": "Push"
    },
    {
      "name": "PushSubscription.getKey",
      "path": "pushsubscription/getkey",
      "type": "Push"
    },
    {
      "name": "PushSubscription.options",
      "path": "pushsubscription/options",
      "type": "Push"
    },
    {
      "name": "PushSubscription.subscriptionId",
      "path": "pushsubscription/subscriptionid",
      "type": "Push"
    },
    {
      "name": "PushSubscription.toJSON",
      "path": "pushsubscription/tojson",
      "type": "Push"
    },
    {
      "name": "PushSubscription.unsubscribe",
      "path": "pushsubscription/unsubscribe",
      "type": "Push"
    },
    {
      "name": "PushSubscriptionOptions",
      "path": "pushsubscriptionoptions",
      "type": "Push"
    },
    {
      "name": "PushSubscriptionOptions.applicationServerKey",
      "path": "pushsubscriptionoptions/applicationserverkey",
      "type": "Push"
    },
    {
      "name": "PushSubscriptionOptions.userVisibleOnly",
      "path": "pushsubscriptionoptions/uservisibleonly",
      "type": "Push"
    },
    { "name": "RadioNodeList", "path": "radionodelist", "type": "Nodes" },
    {
      "name": "RadioNodeList.value",
      "path": "radionodelist/value",
      "type": "Nodes"
    },
    { "name": "Range", "path": "range", "type": "Range" },
    {
      "name": "Range.cloneContents",
      "path": "range/clonecontents",
      "type": "Range"
    },
    { "name": "Range.cloneRange", "path": "range/clonerange", "type": "Range" },
    { "name": "Range.collapse", "path": "range/collapse", "type": "Range" },
    { "name": "Range.collapsed", "path": "range/collapsed", "type": "Range" },
    {
      "name": "Range.commonAncestorContainer",
      "path": "range/commonancestorcontainer",
      "type": "Range"
    },
    {
      "name": "Range.compareBoundaryPoints",
      "path": "range/compareboundarypoints",
      "type": "Range"
    },
    {
      "name": "Range.compareNode",
      "path": "range/comparenode",
      "type": "Range"
    },
    {
      "name": "Range.comparePoint",
      "path": "range/comparepoint",
      "type": "Range"
    },
    { "name": "Range.constructor", "path": "range/range", "type": "Range" },
    {
      "name": "Range.createContextualFragment",
      "path": "range/createcontextualfragment",
      "type": "Range"
    },
    {
      "name": "Range.deleteContents",
      "path": "range/deletecontents",
      "type": "Range"
    },
    { "name": "Range.detach", "path": "range/detach", "type": "Range" },
    {
      "name": "Range.endContainer",
      "path": "range/endcontainer",
      "type": "Range"
    },
    { "name": "Range.endOffset", "path": "range/endoffset", "type": "Range" },
    {
      "name": "Range.extractContents",
      "path": "range/extractcontents",
      "type": "Range"
    },
    {
      "name": "Range.getBoundingClientRect",
      "path": "range/getboundingclientrect",
      "type": "Range"
    },
    {
      "name": "Range.getClientRects",
      "path": "range/getclientrects",
      "type": "Range"
    },
    { "name": "Range.insertNode", "path": "range/insertnode", "type": "Range" },
    {
      "name": "Range.intersectsNode",
      "path": "range/intersectsnode",
      "type": "Range"
    },
    {
      "name": "Range.isPointInRange",
      "path": "range/ispointinrange",
      "type": "Range"
    },
    { "name": "Range.selectNode", "path": "range/selectnode", "type": "Range" },
    {
      "name": "Range.selectNodeContents",
      "path": "range/selectnodecontents",
      "type": "Range"
    },
    { "name": "Range.setEnd", "path": "range/setend", "type": "Range" },
    {
      "name": "Range.setEndAfter",
      "path": "range/setendafter",
      "type": "Range"
    },
    {
      "name": "Range.setEndBefore",
      "path": "range/setendbefore",
      "type": "Range"
    },
    { "name": "Range.setStart", "path": "range/setstart", "type": "Range" },
    {
      "name": "Range.setStartAfter",
      "path": "range/setstartafter",
      "type": "Range"
    },
    {
      "name": "Range.setStartBefore",
      "path": "range/setstartbefore",
      "type": "Range"
    },
    {
      "name": "Range.startContainer",
      "path": "range/startcontainer",
      "type": "Range"
    },
    {
      "name": "Range.startOffset",
      "path": "range/startoffset",
      "type": "Range"
    },
    {
      "name": "Range.surroundContents",
      "path": "range/surroundcontents",
      "type": "Range"
    },
    { "name": "Range.toString", "path": "range/tostring", "type": "Range" },
    {
      "name": "ReadableByteStreamController",
      "path": "readablebytestreamcontroller",
      "type": "Media Streams"
    },
    {
      "name": "ReadableByteStreamController.byobRequest",
      "path": "readablebytestreamcontroller/byobrequest",
      "type": "Media Streams"
    },
    {
      "name": "ReadableByteStreamController.close",
      "path": "readablebytestreamcontroller/close",
      "type": "Media Streams"
    },
    {
      "name": "ReadableByteStreamController.desiredSize",
      "path": "readablebytestreamcontroller/desiredsize",
      "type": "Media Streams"
    },
    {
      "name": "ReadableByteStreamController.enqueue",
      "path": "readablebytestreamcontroller/enqueue",
      "type": "Media Streams"
    },
    {
      "name": "ReadableByteStreamController.error",
      "path": "readablebytestreamcontroller/error",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream",
      "path": "readablestream",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.cancel",
      "path": "readablestream/cancel",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.constructor",
      "path": "readablestream/readablestream",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.getReader",
      "path": "readablestream/getreader",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.locked",
      "path": "readablestream/locked",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.pipeThrough",
      "path": "readablestream/pipethrough",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.pipeTo",
      "path": "readablestream/pipeto",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStream.tee",
      "path": "readablestream/tee",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader",
      "path": "readablestreambyobreader",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader.cancel",
      "path": "readablestreambyobreader/cancel",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader.closed",
      "path": "readablestreambyobreader/closed",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader.constructor",
      "path": "readablestreambyobreader/readablestreambyobreader",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader.read",
      "path": "readablestreambyobreader/read",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBReader.releaseLock",
      "path": "readablestreambyobreader/releaselock",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBRequest",
      "path": "readablestreambyobrequest",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBRequest.respond",
      "path": "readablestreambyobrequest/respond",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBRequest.respondWithNewView",
      "path": "readablestreambyobrequest/respondwithnewview",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamBYOBRequest.view",
      "path": "readablestreambyobrequest/view",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultController",
      "path": "readablestreamdefaultcontroller",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultController.close",
      "path": "readablestreamdefaultcontroller/close",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultController.desiredSize",
      "path": "readablestreamdefaultcontroller/desiredsize",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultController.enqueue",
      "path": "readablestreamdefaultcontroller/enqueue",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultController.error",
      "path": "readablestreamdefaultcontroller/error",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader",
      "path": "readablestreamdefaultreader",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader.cancel",
      "path": "readablestreamdefaultreader/cancel",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader.closed",
      "path": "readablestreamdefaultreader/closed",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader.constructor",
      "path": "readablestreamdefaultreader/readablestreamdefaultreader",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader.read",
      "path": "readablestreamdefaultreader/read",
      "type": "Media Streams"
    },
    {
      "name": "ReadableStreamDefaultReader.releaseLock",
      "path": "readablestreamdefaultreader/releaselock",
      "type": "Media Streams"
    },
    {
      "name": "RelativeOrientationSensor",
      "path": "relativeorientationsensor",
      "type": "Sensors"
    },
    {
      "name": "RelativeOrientationSensor.constructor",
      "path": "relativeorientationsensor/relativeorientationsensor",
      "type": "Sensors"
    },
    {
      "name": "RenderingContext",
      "path": "renderingcontext",
      "type": "Canvas"
    },
    { "name": "Report", "path": "report", "type": "Miscellaneous" },
    { "name": "Report.body", "path": "report/body", "type": "Miscellaneous" },
    { "name": "Report.type", "path": "report/type", "type": "Miscellaneous" },
    { "name": "Report.url", "path": "report/url", "type": "Miscellaneous" },
    {
      "name": "Reporting API",
      "path": "reporting_api",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserver",
      "path": "reportingobserver",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserver.constructor",
      "path": "reportingobserver/reportingobserver",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserver.disconnect",
      "path": "reportingobserver/disconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserver.observe",
      "path": "reportingobserver/observe",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserver.takeRecords",
      "path": "reportingobserver/takerecords",
      "type": "Miscellaneous"
    },
    {
      "name": "ReportingObserverOptions",
      "path": "reportingobserveroptions",
      "type": "Miscellaneous"
    },
    { "name": "Request", "path": "request", "type": "Fetch" },
    { "name": "Request.cache", "path": "request/cache", "type": "Fetch" },
    { "name": "Request.clone", "path": "request/clone", "type": "Fetch" },
    {
      "name": "Request.constructor",
      "path": "request/request",
      "type": "Fetch"
    },
    {
      "name": "Request.context",
      "path": "request/context",
      "type": "Miscellaneous"
    },
    {
      "name": "Request.credentials",
      "path": "request/credentials",
      "type": "Fetch"
    },
    {
      "name": "Request.destination",
      "path": "request/destination",
      "type": "Fetch"
    },
    { "name": "Request.headers", "path": "request/headers", "type": "Fetch" },
    {
      "name": "Request.integrity",
      "path": "request/integrity",
      "type": "Fetch"
    },
    { "name": "Request.method", "path": "request/method", "type": "Fetch" },
    { "name": "Request.mode", "path": "request/mode", "type": "Fetch" },
    { "name": "Request.redirect", "path": "request/redirect", "type": "Fetch" },
    { "name": "Request.referrer", "path": "request/referrer", "type": "Fetch" },
    {
      "name": "Request.referrerPolicy",
      "path": "request/referrerpolicy",
      "type": "Fetch"
    },
    { "name": "Request.url", "path": "request/url", "type": "Fetch" },
    {
      "name": "RequestDestination",
      "path": "requestdestination",
      "type": "Fetch"
    },
    {
      "name": "Resize Observer API",
      "path": "resize_observer_api",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserver",
      "path": "resizeobserver",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserver.constructor",
      "path": "resizeobserver/resizeobserver",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserver.disconnect",
      "path": "resizeobserver/disconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserver.observe",
      "path": "resizeobserver/observe",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserver.unobserve",
      "path": "resizeobserver/unobserve",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverEntry",
      "path": "resizeobserverentry",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverEntry.borderBoxSize",
      "path": "resizeobserverentry/borderboxsize",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverEntry.contentBoxSize",
      "path": "resizeobserverentry/contentboxsize",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverEntry.contentRect",
      "path": "resizeobserverentry/contentrect",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverEntry.target",
      "path": "resizeobserverentry/target",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverSize",
      "path": "resizeobserversize",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverSize.blockSize",
      "path": "resizeobserversize/blocksize",
      "type": "Miscellaneous"
    },
    {
      "name": "ResizeObserverSize.inlineSize",
      "path": "resizeobserversize/inlinesize",
      "type": "Miscellaneous"
    },
    {
      "name": "Resource Timing API",
      "path": "resource_timing_api",
      "type": "Performance"
    },
    {
      "name": "Resource Timing API: Using the Resource Timing API",
      "path": "resource_timing_api/using_the_resource_timing_api",
      "type": "Performance"
    },
    { "name": "Response", "path": "response", "type": "Fetch" },
    { "name": "Response.clone", "path": "response/clone", "type": "Fetch" },
    {
      "name": "Response.constructor",
      "path": "response/response",
      "type": "Fetch"
    },
    { "name": "Response.error", "path": "response/error", "type": "Fetch" },
    { "name": "Response.headers", "path": "response/headers", "type": "Fetch" },
    { "name": "Response.ok", "path": "response/ok", "type": "Fetch" },
    {
      "name": "Response.redirect",
      "path": "response/redirect",
      "type": "Fetch"
    },
    {
      "name": "Response.redirected",
      "path": "response/redirected",
      "type": "Fetch"
    },
    { "name": "Response.status", "path": "response/status", "type": "Fetch" },
    {
      "name": "Response.statusText",
      "path": "response/statustext",
      "type": "Fetch"
    },
    { "name": "Response.type", "path": "response/type", "type": "Fetch" },
    { "name": "Response.url", "path": "response/url", "type": "Fetch" },
    {
      "name": "RsaHashedImportParams",
      "path": "rsahashedimportparams",
      "type": "Cryptography"
    },
    {
      "name": "RsaHashedKeyGenParams",
      "path": "rsahashedkeygenparams",
      "type": "Cryptography"
    },
    {
      "name": "RsaOaepParams",
      "path": "rsaoaepparams",
      "type": "Cryptography"
    },
    { "name": "RsaPssParams", "path": "rsapssparams", "type": "Cryptography" },
    {
      "name": "RTCAnswerOptions",
      "path": "rtcansweroptions",
      "type": "WebRTC"
    },
    { "name": "RTCCertificate", "path": "rtccertificate", "type": "WebRTC" },
    {
      "name": "RTCConfiguration",
      "path": "rtcconfiguration",
      "type": "WebRTC"
    },
    {
      "name": "RTCConfiguration.bundlePolicy",
      "path": "rtcconfiguration/bundlepolicy",
      "type": "WebRTC"
    },
    {
      "name": "RTCConfiguration.certificates",
      "path": "rtcconfiguration/certificates",
      "type": "WebRTC"
    },
    {
      "name": "RTCConfiguration.iceServers",
      "path": "rtcconfiguration/iceservers",
      "type": "WebRTC"
    },
    {
      "name": "RTCConfiguration.iceTransportPolicy",
      "path": "rtcconfiguration/icetransportpolicy",
      "type": "WebRTC"
    },
    { "name": "RTCDataChannel", "path": "rtcdatachannel", "type": "WebRTC" },
    {
      "name": "RTCDataChannel.binaryType",
      "path": "rtcdatachannel/binarytype",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.bufferedAmount",
      "path": "rtcdatachannel/bufferedamount",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.bufferedamountlow event",
      "path": "rtcdatachannel/bufferedamountlow_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.bufferedAmountLowThreshold",
      "path": "rtcdatachannel/bufferedamountlowthreshold",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.close",
      "path": "rtcdatachannel/close",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.close event",
      "path": "rtcdatachannel/close_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.closing event",
      "path": "rtcdatachannel/closing_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.error event",
      "path": "rtcdatachannel/error_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.id",
      "path": "rtcdatachannel/id",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.label",
      "path": "rtcdatachannel/label",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.maxPacketLifeTime",
      "path": "rtcdatachannel/maxpacketlifetime",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.maxRetransmits",
      "path": "rtcdatachannel/maxretransmits",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.message event",
      "path": "rtcdatachannel/message_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.negotiated",
      "path": "rtcdatachannel/negotiated",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onbufferedamountlow",
      "path": "rtcdatachannel/onbufferedamountlow",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onclose",
      "path": "rtcdatachannel/onclose",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onclosing",
      "path": "rtcdatachannel/onclosing",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onerror",
      "path": "rtcdatachannel/onerror",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onmessage",
      "path": "rtcdatachannel/onmessage",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.onopen",
      "path": "rtcdatachannel/onopen",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.open event",
      "path": "rtcdatachannel/open_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.ordered",
      "path": "rtcdatachannel/ordered",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.protocol",
      "path": "rtcdatachannel/protocol",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.readyState",
      "path": "rtcdatachannel/readystate",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.reliable",
      "path": "rtcdatachannel/reliable",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.send",
      "path": "rtcdatachannel/send",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannel.stream",
      "path": "rtcdatachannel/stream",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannelEvent",
      "path": "rtcdatachannelevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannelEvent.channel",
      "path": "rtcdatachannelevent/channel",
      "type": "WebRTC"
    },
    {
      "name": "RTCDataChannelEvent.constructor",
      "path": "rtcdatachannelevent/rtcdatachannelevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCDtlsTransport",
      "path": "rtcdtlstransport",
      "type": "WebRTC"
    },
    {
      "name": "RTCDtlsTransport.error event",
      "path": "rtcdtlstransport/error_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDtlsTransport.iceTransport",
      "path": "rtcdtlstransport/icetransport",
      "type": "WebRTC"
    },
    {
      "name": "RTCDtlsTransport.state",
      "path": "rtcdtlstransport/state",
      "type": "WebRTC"
    },
    { "name": "RTCDTMFSender", "path": "rtcdtmfsender", "type": "WebRTC" },
    {
      "name": "RTCDTMFSender.insertDTMF",
      "path": "rtcdtmfsender/insertdtmf",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFSender.ontonechange",
      "path": "rtcdtmfsender/ontonechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFSender.toneBuffer",
      "path": "rtcdtmfsender/tonebuffer",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFSender.tonechange event",
      "path": "rtcdtmfsender/tonechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFToneChangeEvent",
      "path": "rtcdtmftonechangeevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFToneChangeEvent.constructor",
      "path": "rtcdtmftonechangeevent/rtcdtmftonechangeevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCDTMFToneChangeEvent.tone",
      "path": "rtcdtmftonechangeevent/tone",
      "type": "WebRTC"
    },
    { "name": "RTCError", "path": "rtcerror", "type": "WebRTC" },
    {
      "name": "RTCError.errorDetail",
      "path": "rtcerror/errordetail",
      "type": "WebRTC"
    },
    {
      "name": "RTCError.receivedAlert",
      "path": "rtcerror/receivedalert",
      "type": "WebRTC"
    },
    {
      "name": "RTCError.sctpCauseCode",
      "path": "rtcerror/sctpcausecode",
      "type": "WebRTC"
    },
    {
      "name": "RTCError.sdpLineNumber",
      "path": "rtcerror/sdplinenumber",
      "type": "WebRTC"
    },
    {
      "name": "RTCError.sentAlert",
      "path": "rtcerror/sentalert",
      "type": "WebRTC"
    },
    { "name": "RTCErrorEvent", "path": "rtcerrorevent", "type": "WebRTC" },
    {
      "name": "RTCErrorEvent.error",
      "path": "rtcerrorevent/error",
      "type": "WebRTC"
    },
    { "name": "RTCIceCandidate", "path": "rtcicecandidate", "type": "WebRTC" },
    {
      "name": "RTCIceCandidate.address",
      "path": "rtcicecandidate/address",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.candidate",
      "path": "rtcicecandidate/candidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.component",
      "path": "rtcicecandidate/component",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.constructor",
      "path": "rtcicecandidate/rtcicecandidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.foundation",
      "path": "rtcicecandidate/foundation",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.port",
      "path": "rtcicecandidate/port",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.priority",
      "path": "rtcicecandidate/priority",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.protocol",
      "path": "rtcicecandidate/protocol",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.relatedAddress",
      "path": "rtcicecandidate/relatedaddress",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.relatedPort",
      "path": "rtcicecandidate/relatedport",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.sdpMid",
      "path": "rtcicecandidate/sdpmid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.sdpMLineIndex",
      "path": "rtcicecandidate/sdpmlineindex",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.tcpType",
      "path": "rtcicecandidate/tcptype",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.toJSON",
      "path": "rtcicecandidate/tojson",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.type",
      "path": "rtcicecandidate/type",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidate.usernameFragment",
      "path": "rtcicecandidate/usernamefragment",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateInit",
      "path": "rtcicecandidateinit",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateInit.candidate",
      "path": "rtcicecandidateinit/candidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateInit.sdpMid",
      "path": "rtcicecandidateinit/sdpmid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateInit.sdpMLineIndex",
      "path": "rtcicecandidateinit/sdpmlineindex",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateInit.usernameFragment",
      "path": "rtcicecandidateinit/usernamefragment",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePair",
      "path": "rtcicecandidatepair",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePair.local",
      "path": "rtcicecandidatepair/local",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePair.remote",
      "path": "rtcicecandidatepair/remote",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats",
      "path": "rtcicecandidatepairstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.availableIncomingBitrate",
      "path": "rtcicecandidatepairstats/availableincomingbitrate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.availableOutgoingBitrate",
      "path": "rtcicecandidatepairstats/availableoutgoingbitrate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.bytesReceived",
      "path": "rtcicecandidatepairstats/bytesreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.bytesSent",
      "path": "rtcicecandidatepairstats/bytessent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.circuitBreakerTriggerCount",
      "path": "rtcicecandidatepairstats/circuitbreakertriggercount",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.consentExpiredTimestamp",
      "path": "rtcicecandidatepairstats/consentexpiredtimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.consentRequestsSent",
      "path": "rtcicecandidatepairstats/consentrequestssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.currentRoundTripTime",
      "path": "rtcicecandidatepairstats/currentroundtriptime",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.firstRequestTimestamp",
      "path": "rtcicecandidatepairstats/firstrequesttimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.lastPacketReceivedTimestamp",
      "path": "rtcicecandidatepairstats/lastpacketreceivedtimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.lastPacketSentTimestamp",
      "path": "rtcicecandidatepairstats/lastpacketsenttimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.lastRequestTimestamp",
      "path": "rtcicecandidatepairstats/lastrequesttimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.lastResponseTimestamp",
      "path": "rtcicecandidatepairstats/lastresponsetimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.localCandidateId",
      "path": "rtcicecandidatepairstats/localcandidateid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.nominated",
      "path": "rtcicecandidatepairstats/nominated",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.packetsReceived",
      "path": "rtcicecandidatepairstats/packetsreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.packetsSent",
      "path": "rtcicecandidatepairstats/packetssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.priority",
      "path": "rtcicecandidatepairstats/priority",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.readable",
      "path": "rtcicecandidatepairstats/readable",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.remoteCandidateId",
      "path": "rtcicecandidatepairstats/remotecandidateid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.requestsReceived",
      "path": "rtcicecandidatepairstats/requestsreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.requestsSent",
      "path": "rtcicecandidatepairstats/requestssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.responsesReceived",
      "path": "rtcicecandidatepairstats/responsesreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.responsesSent",
      "path": "rtcicecandidatepairstats/responsessent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.retransmissionsReceived",
      "path": "rtcicecandidatepairstats/retransmissionsreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.retransmissionsSent",
      "path": "rtcicecandidatepairstats/retransmissionssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.selected",
      "path": "rtcicecandidatepairstats/selected",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.state",
      "path": "rtcicecandidatepairstats/state",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.totalRoundTripTime",
      "path": "rtcicecandidatepairstats/totalroundtriptime",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.transportId",
      "path": "rtcicecandidatepairstats/transportid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidatePairStats.writable",
      "path": "rtcicecandidatepairstats/writable",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats",
      "path": "rtcicecandidatestats",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.address",
      "path": "rtcicecandidatestats/address",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.candidateType",
      "path": "rtcicecandidatestats/candidatetype",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.deleted",
      "path": "rtcicecandidatestats/deleted",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.mozLocalTransport",
      "path": "rtcicecandidatestats/mozlocaltransport",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.networkType",
      "path": "rtcicecandidatestats/networktype",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.port",
      "path": "rtcicecandidatestats/port",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.priority",
      "path": "rtcicecandidatestats/priority",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.protocol",
      "path": "rtcicecandidatestats/protocol",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.relayProtocol",
      "path": "rtcicecandidatestats/relayprotocol",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.transportId",
      "path": "rtcicecandidatestats/transportid",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateStats.url",
      "path": "rtcicecandidatestats/url",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceCandidateType",
      "path": "rtcicecandidatetype",
      "type": "WebRTC"
    },
    { "name": "RTCIceComponent", "path": "rtcicecomponent", "type": "WebRTC" },
    {
      "name": "RTCIceCredentialType",
      "path": "rtcicecredentialtype",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceGathererState",
      "path": "rtcicegathererstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceParameters",
      "path": "rtciceparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceParameters.password",
      "path": "rtciceparameters/password",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceParameters.usernameFragment",
      "path": "rtciceparameters/usernamefragment",
      "type": "WebRTC"
    },
    { "name": "RTCIceProtocol", "path": "rtciceprotocol", "type": "WebRTC" },
    { "name": "RTCIceRole", "path": "rtcicerole", "type": "WebRTC" },
    { "name": "RTCIceServer", "path": "rtciceserver", "type": "WebRTC" },
    {
      "name": "RTCIceServer.credential",
      "path": "rtciceserver/credential",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceServer.credentialType",
      "path": "rtciceserver/credentialtype",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceServer.url",
      "path": "rtciceserver/url",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceServer.urls",
      "path": "rtciceserver/urls",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceServer.username",
      "path": "rtciceserver/username",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTcpCandidateType",
      "path": "rtcicetcpcandidatetype",
      "type": "WebRTC"
    },
    { "name": "RTCIceTransport", "path": "rtcicetransport", "type": "WebRTC" },
    {
      "name": "RTCIceTransport.component",
      "path": "rtcicetransport/component",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.gatheringState",
      "path": "rtcicetransport/gatheringstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.gatheringstatechange event",
      "path": "rtcicetransport/gatheringstatechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.getLocalCandidates",
      "path": "rtcicetransport/getlocalcandidates",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.getLocalParameters",
      "path": "rtcicetransport/getlocalparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.getRemoteCandidates",
      "path": "rtcicetransport/getremotecandidates",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.getRemoteParameters",
      "path": "rtcicetransport/getremoteparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.getSelectedCandidatePair",
      "path": "rtcicetransport/getselectedcandidatepair",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.ongatheringstatechange",
      "path": "rtcicetransport/ongatheringstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.onselectedcandidatepairchange",
      "path": "rtcicetransport/onselectedcandidatepairchange",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.onstatechange",
      "path": "rtcicetransport/onstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.role",
      "path": "rtcicetransport/role",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.selectedcandidatepairchange event",
      "path": "rtcicetransport/selectedcandidatepairchange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.state",
      "path": "rtcicetransport/state",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransport.statechange event",
      "path": "rtcicetransport/statechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCIceTransportState",
      "path": "rtcicetransportstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityAssertion",
      "path": "rtcidentityassertion",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityErrorEvent",
      "path": "rtcidentityerrorevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityErrorEvent.idp",
      "path": "rtcidentityerrorevent/idp",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityErrorEvent.loginUrl",
      "path": "rtcidentityerrorevent/loginurl",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityErrorEvent.protocol",
      "path": "rtcidentityerrorevent/protocol",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityEvent",
      "path": "rtcidentityevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCIdentityEvent.assertion",
      "path": "rtcidentityevent/assertion",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats",
      "path": "rtcinboundrtpstreamstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.averageRtcpInterval",
      "path": "rtcinboundrtpstreamstats/averagertcpinterval",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.bytesReceived",
      "path": "rtcinboundrtpstreamstats/bytesreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.fecPacketsDiscarded",
      "path": "rtcinboundrtpstreamstats/fecpacketsdiscarded",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.fecPacketsReceived",
      "path": "rtcinboundrtpstreamstats/fecpacketsreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.firCount",
      "path": "rtcinboundrtpstreamstats/fircount",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.framesDecoded",
      "path": "rtcinboundrtpstreamstats/framesdecoded",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.lastPacketReceivedTimestamp",
      "path": "rtcinboundrtpstreamstats/lastpacketreceivedtimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.nackCount",
      "path": "rtcinboundrtpstreamstats/nackcount",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.packetsDuplicated",
      "path": "rtcinboundrtpstreamstats/packetsduplicated",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.packetsFailedDecryption",
      "path": "rtcinboundrtpstreamstats/packetsfaileddecryption",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.perDscpPacketsReceived",
      "path": "rtcinboundrtpstreamstats/perdscppacketsreceived",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.pliCount",
      "path": "rtcinboundrtpstreamstats/plicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.qpSum",
      "path": "rtcinboundrtpstreamstats/qpsum",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.receiverId",
      "path": "rtcinboundrtpstreamstats/receiverid",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.remoteId",
      "path": "rtcinboundrtpstreamstats/remoteid",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.sliCount",
      "path": "rtcinboundrtpstreamstats/slicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCInboundRtpStreamStats.trackId",
      "path": "rtcinboundrtpstreamstats/trackid",
      "type": "WebRTC"
    },
    { "name": "RTCNetworkType", "path": "rtcnetworktype", "type": "WebRTC" },
    {
      "name": "RTCOfferAnswerOptions",
      "path": "rtcofferansweroptions",
      "type": "WebRTC"
    },
    {
      "name": "RTCOfferAnswerOptions.voiceActivityDetection",
      "path": "rtcofferansweroptions/voiceactivitydetection",
      "type": "WebRTC"
    },
    { "name": "RTCOfferOptions", "path": "rtcofferoptions", "type": "WebRTC" },
    {
      "name": "RTCOfferOptions.iceRestart",
      "path": "rtcofferoptions/icerestart",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats",
      "path": "rtcoutboundrtpstreamstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.averageRtcpInterval",
      "path": "rtcoutboundrtpstreamstats/averagertcpinterval",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.firCount",
      "path": "rtcoutboundrtpstreamstats/fircount",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.framesEncoded",
      "path": "rtcoutboundrtpstreamstats/framesencoded",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.lastPacketSentTimestamp",
      "path": "rtcoutboundrtpstreamstats/lastpacketsenttimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.nackCount",
      "path": "rtcoutboundrtpstreamstats/nackcount",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.perDscpPacketsSent",
      "path": "rtcoutboundrtpstreamstats/perdscppacketssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.pliCount",
      "path": "rtcoutboundrtpstreamstats/plicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.qpSum",
      "path": "rtcoutboundrtpstreamstats/qpsum",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.qualityLimitationReason",
      "path": "rtcoutboundrtpstreamstats/qualitylimitationreason",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.remoteId",
      "path": "rtcoutboundrtpstreamstats/remoteid",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.sliCount",
      "path": "rtcoutboundrtpstreamstats/slicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCOutboundRtpStreamStats.trackId",
      "path": "rtcoutboundrtpstreamstats/trackid",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection",
      "path": "rtcpeerconnection",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection idpvalidationerror event",
      "path": "rtcpeerconnection_idpvalidationerror_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.addIceCandidate",
      "path": "rtcpeerconnection/addicecandidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.addStream",
      "path": "rtcpeerconnection/addstream",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.addstream event",
      "path": "rtcpeerconnection/addstream_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.addTrack",
      "path": "rtcpeerconnection/addtrack",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.addTransceiver",
      "path": "rtcpeerconnection/addtransceiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.canTrickleIceCandidates",
      "path": "rtcpeerconnection/cantrickleicecandidates",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.close",
      "path": "rtcpeerconnection/close",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.connectionState",
      "path": "rtcpeerconnection/connectionstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.connectionstatechange event",
      "path": "rtcpeerconnection/connectionstatechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.constructor",
      "path": "rtcpeerconnection/rtcpeerconnection",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.createAnswer",
      "path": "rtcpeerconnection/createanswer",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.createDataChannel",
      "path": "rtcpeerconnection/createdatachannel",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.createOffer",
      "path": "rtcpeerconnection/createoffer",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.currentLocalDescription",
      "path": "rtcpeerconnection/currentlocaldescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.currentRemoteDescription",
      "path": "rtcpeerconnection/currentremotedescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.datachannel event",
      "path": "rtcpeerconnection/datachannel_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.generateCertificate",
      "path": "rtcpeerconnection/generatecertificate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getConfiguration",
      "path": "rtcpeerconnection/getconfiguration",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getDefaultIceServers",
      "path": "rtcpeerconnection/getdefaulticeservers",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getIdentityAssertion",
      "path": "rtcpeerconnection/getidentityassertion",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getReceivers",
      "path": "rtcpeerconnection/getreceivers",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getSenders",
      "path": "rtcpeerconnection/getsenders",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getStats",
      "path": "rtcpeerconnection/getstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getStreamById",
      "path": "rtcpeerconnection/getstreambyid",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.getTransceivers",
      "path": "rtcpeerconnection/gettransceivers",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.icecandidate event",
      "path": "rtcpeerconnection/icecandidate_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.icecandidateerror event",
      "path": "rtcpeerconnection/icecandidateerror_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.iceConnectionState",
      "path": "rtcpeerconnection/iceconnectionstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.iceconnectionstatechange event",
      "path": "rtcpeerconnection/iceconnectionstatechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.iceGatheringState",
      "path": "rtcpeerconnection/icegatheringstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.icegatheringstatechange event",
      "path": "rtcpeerconnection/icegatheringstatechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.identityresult event",
      "path": "rtcpeerconnection/identityresult_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.idpassertionerror event",
      "path": "rtcpeerconnection/idpassertionerror_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.idpvalidationerror event",
      "path": "rtcpeerconnection/idpvalidationerror_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.localDescription",
      "path": "rtcpeerconnection/localdescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.negotiationneeded event",
      "path": "rtcpeerconnection/negotiationneeded_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onaddstream",
      "path": "rtcpeerconnection/onaddstream",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onconnectionstatechange",
      "path": "rtcpeerconnection/onconnectionstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.ondatachannel",
      "path": "rtcpeerconnection/ondatachannel",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onicecandidate",
      "path": "rtcpeerconnection/onicecandidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onicecandidateerror",
      "path": "rtcpeerconnection/onicecandidateerror",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.oniceconnectionstatechange",
      "path": "rtcpeerconnection/oniceconnectionstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onicegatheringstatechange",
      "path": "rtcpeerconnection/onicegatheringstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onidentityresult",
      "path": "rtcpeerconnection/onidentityresult",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onidpassertionerror",
      "path": "rtcpeerconnection/onidpassertionerror",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onidpvalidationerror",
      "path": "rtcpeerconnection/onidpvalidationerror",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onnegotiationneeded",
      "path": "rtcpeerconnection/onnegotiationneeded",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onpeeridentity",
      "path": "rtcpeerconnection/onpeeridentity",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onremovestream",
      "path": "rtcpeerconnection/onremovestream",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.onsignalingstatechange",
      "path": "rtcpeerconnection/onsignalingstatechange",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.ontrack",
      "path": "rtcpeerconnection/ontrack",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.peerIdentity",
      "path": "rtcpeerconnection/peeridentity",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.peeridentity event",
      "path": "rtcpeerconnection/peeridentity_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.pendingLocalDescription",
      "path": "rtcpeerconnection/pendinglocaldescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.pendingRemoteDescription",
      "path": "rtcpeerconnection/pendingremotedescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.remoteDescription",
      "path": "rtcpeerconnection/remotedescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.removeStream",
      "path": "rtcpeerconnection/removestream",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.removestream event",
      "path": "rtcpeerconnection/removestream_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.removeTrack",
      "path": "rtcpeerconnection/removetrack",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.restartIce",
      "path": "rtcpeerconnection/restartice",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.sctp",
      "path": "rtcpeerconnection/sctp",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.setConfiguration",
      "path": "rtcpeerconnection/setconfiguration",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.setIdentityProvider",
      "path": "rtcpeerconnection/setidentityprovider",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.setLocalDescription",
      "path": "rtcpeerconnection/setlocaldescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.setRemoteDescription",
      "path": "rtcpeerconnection/setremotedescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.signalingState",
      "path": "rtcpeerconnection/signalingstate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.signalingstatechange event",
      "path": "rtcpeerconnection/signalingstatechange_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnection.track event",
      "path": "rtcpeerconnection/track_event",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnectionIceErrorEvent",
      "path": "rtcpeerconnectioniceerrorevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnectionIceErrorEvent.address",
      "path": "rtcpeerconnectioniceerrorevent/address",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnectionIceEvent",
      "path": "rtcpeerconnectioniceevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnectionIceEvent.candidate",
      "path": "rtcpeerconnectioniceevent/candidate",
      "type": "WebRTC"
    },
    {
      "name": "RTCPeerConnectionIceEvent.constructor",
      "path": "rtcpeerconnectioniceevent/rtcpeerconnectioniceevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCRemoteOutboundRtpStreamStats",
      "path": "rtcremoteoutboundrtpstreamstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCRemoteOutboundRtpStreamStats.localId",
      "path": "rtcremoteoutboundrtpstreamstats/localid",
      "type": "WebRTC"
    },
    {
      "name": "RTCRemoteOutboundRtpStreamStats.remoteTimestamp",
      "path": "rtcremoteoutboundrtpstreamstats/remotetimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCRemoteOutboundRtpStreamStats.reportsSent",
      "path": "rtcremoteoutboundrtpstreamstats/reportssent",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtcpParameters",
      "path": "rtcrtcpparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpCapabilities",
      "path": "rtcrtpcapabilities",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpCodecCapability",
      "path": "rtcrtpcodeccapability",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpCodecParameters",
      "path": "rtcrtpcodecparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpContributingSource",
      "path": "rtcrtpcontributingsource",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpContributingSource.audioLevel",
      "path": "rtcrtpcontributingsource/audiolevel",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpContributingSource.rtpTimestamp",
      "path": "rtcrtpcontributingsource/rtptimestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpContributingSource.source",
      "path": "rtcrtpcontributingsource/source",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpContributingSource.timestamp",
      "path": "rtcrtpcontributingsource/timestamp",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpEncodingParameters",
      "path": "rtcrtpencodingparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpEncodingParameters.maxBitrate",
      "path": "rtcrtpencodingparameters/maxbitrate",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpEncodingParameters.scaleResolutionDownBy",
      "path": "rtcrtpencodingparameters/scaleresolutiondownby",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpParameters",
      "path": "rtcrtpparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiveParameters",
      "path": "rtcrtpreceiveparameters",
      "type": "WebRTC"
    },
    { "name": "RTCRtpReceiver", "path": "rtcrtpreceiver", "type": "WebRTC" },
    {
      "name": "RTCRtpReceiver.getCapabilities",
      "path": "rtcrtpreceiver/getcapabilities",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.getContributingSources",
      "path": "rtcrtpreceiver/getcontributingsources",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.getParameters",
      "path": "rtcrtpreceiver/getparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.getStats",
      "path": "rtcrtpreceiver/getstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.getSynchronizationSources",
      "path": "rtcrtpreceiver/getsynchronizationsources",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.track",
      "path": "rtcrtpreceiver/track",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpReceiver.transport",
      "path": "rtcrtpreceiver/transport",
      "type": "WebRTC"
    },
    { "name": "RTCRtpSender", "path": "rtcrtpsender", "type": "WebRTC" },
    {
      "name": "RTCRtpSender.dtmf",
      "path": "rtcrtpsender/dtmf",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.getCapabilities",
      "path": "rtcrtpsender/getcapabilities",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.getParameters",
      "path": "rtcrtpsender/getparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.getStats",
      "path": "rtcrtpsender/getstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.replaceTrack",
      "path": "rtcrtpsender/replacetrack",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.setParameters",
      "path": "rtcrtpsender/setparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.setStreams",
      "path": "rtcrtpsender/setstreams",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.track",
      "path": "rtcrtpsender/track",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSender.transport",
      "path": "rtcrtpsender/transport",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSendParameters",
      "path": "rtcrtpsendparameters",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSendParameters.encodings",
      "path": "rtcrtpsendparameters/encodings",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats",
      "path": "rtcrtpstreamstats",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.codecId",
      "path": "rtcrtpstreamstats/codecid",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.firCount",
      "path": "rtcrtpstreamstats/fircount",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.kind",
      "path": "rtcrtpstreamstats/kind",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.nackCount",
      "path": "rtcrtpstreamstats/nackcount",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.pliCount",
      "path": "rtcrtpstreamstats/plicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.qpSum",
      "path": "rtcrtpstreamstats/qpsum",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.sliCount",
      "path": "rtcrtpstreamstats/slicount",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.ssrc",
      "path": "rtcrtpstreamstats/ssrc",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.trackId",
      "path": "rtcrtpstreamstats/trackid",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpStreamStats.transportId",
      "path": "rtcrtpstreamstats/transportid",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSynchronizationSource",
      "path": "rtcrtpsynchronizationsource",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpSynchronizationSource.voiceActivityFlag",
      "path": "rtcrtpsynchronizationsource/voiceactivityflag",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver",
      "path": "rtcrtptransceiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.currentDirection",
      "path": "rtcrtptransceiver/currentdirection",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.direction",
      "path": "rtcrtptransceiver/direction",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.mid",
      "path": "rtcrtptransceiver/mid",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.receiver",
      "path": "rtcrtptransceiver/receiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.sender",
      "path": "rtcrtptransceiver/sender",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.setCodecPreferences",
      "path": "rtcrtptransceiver/setcodecpreferences",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.stop",
      "path": "rtcrtptransceiver/stop",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiver.stopped",
      "path": "rtcrtptransceiver/stopped",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiverDirection",
      "path": "rtcrtptransceiverdirection",
      "type": "WebRTC"
    },
    {
      "name": "RTCRtpTransceiverInit",
      "path": "rtcrtptransceiverinit",
      "type": "WebRTC"
    },
    {
      "name": "RTCSctpTransport",
      "path": "rtcsctptransport",
      "type": "WebRTC"
    },
    {
      "name": "RTCSctpTransport.state",
      "path": "rtcsctptransport/state",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescription",
      "path": "rtcsessiondescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescription.constructor",
      "path": "rtcsessiondescription/rtcsessiondescription",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescription.sdp",
      "path": "rtcsessiondescription/sdp",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescription.toJSON",
      "path": "rtcsessiondescription/tojson",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescription.type",
      "path": "rtcsessiondescription/type",
      "type": "WebRTC"
    },
    {
      "name": "RTCSessionDescriptionCallback",
      "path": "rtcsessiondescriptioncallback",
      "type": "WebRTC"
    },
    { "name": "RTCStats", "path": "rtcstats", "type": "WebRTC" },
    { "name": "RTCStats.id", "path": "rtcstats/id", "type": "WebRTC" },
    {
      "name": "RTCStats.timestamp",
      "path": "rtcstats/timestamp",
      "type": "WebRTC"
    },
    { "name": "RTCStats.type", "path": "rtcstats/type", "type": "WebRTC" },
    {
      "name": "RTCStatsIceCandidatePairState",
      "path": "rtcstatsicecandidatepairstate",
      "type": "WebRTC"
    },
    { "name": "RTCStatsReport", "path": "rtcstatsreport", "type": "WebRTC" },
    { "name": "RTCStatsType", "path": "rtcstatstype", "type": "WebRTC" },
    { "name": "RTCTrackEvent", "path": "rtctrackevent", "type": "WebRTC" },
    {
      "name": "RTCTrackEvent.constructor",
      "path": "rtctrackevent/rtctrackevent",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEvent.receiver",
      "path": "rtctrackevent/receiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEvent.streams",
      "path": "rtctrackevent/streams",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEvent.track",
      "path": "rtctrackevent/track",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEvent.transceiver",
      "path": "rtctrackevent/transceiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEventInit",
      "path": "rtctrackeventinit",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEventInit.receiver",
      "path": "rtctrackeventinit/receiver",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEventInit.streams",
      "path": "rtctrackeventinit/streams",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEventInit.track",
      "path": "rtctrackeventinit/track",
      "type": "WebRTC"
    },
    {
      "name": "RTCTrackEventInit.transceiver",
      "path": "rtctrackeventinit/transceiver",
      "type": "WebRTC"
    },
    { "name": "Sanitizer", "path": "sanitizer", "type": "Miscellaneous" },
    {
      "name": "Sanitizer.constructor",
      "path": "sanitizer/sanitizer",
      "type": "Miscellaneous"
    },
    {
      "name": "Sanitizer.sanitize",
      "path": "sanitizer/sanitize",
      "type": "Miscellaneous"
    },
    {
      "name": "Sanitizer.sanitizeToString",
      "path": "sanitizer/sanitizetostring",
      "type": "Miscellaneous"
    },
    { "name": "Screen", "path": "screen", "type": "CSS" },
    {
      "name": "Screen Capture API",
      "path": "screen_capture_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen Capture API: Using Screen Capture",
      "path": "screen_capture_api/using_screen_capture",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen Orientation API",
      "path": "screen_orientation_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen Wake Lock API",
      "path": "screen_wake_lock_api",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.availHeight",
      "path": "screen/availheight",
      "type": "CSS"
    },
    {
      "name": "Screen.availLeft",
      "path": "screen/availleft",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.availTop",
      "path": "screen/availtop",
      "type": "Miscellaneous"
    },
    { "name": "Screen.availWidth", "path": "screen/availwidth", "type": "CSS" },
    { "name": "Screen.colorDepth", "path": "screen/colordepth", "type": "CSS" },
    { "name": "Screen.height", "path": "screen/height", "type": "CSS" },
    { "name": "Screen.left", "path": "screen/left", "type": "Miscellaneous" },
    {
      "name": "Screen.lockOrientation",
      "path": "screen/lockorientation",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.mozBrightness",
      "path": "screen/mozbrightness",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.mozEnabled",
      "path": "screen/mozenabled",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.onorientationchange",
      "path": "screen/onorientationchange",
      "type": "Miscellaneous"
    },
    {
      "name": "Screen.orientation",
      "path": "screen/orientation",
      "type": "Miscellaneous"
    },
    { "name": "Screen.pixelDepth", "path": "screen/pixeldepth", "type": "CSS" },
    { "name": "Screen.top", "path": "screen/top", "type": "Miscellaneous" },
    {
      "name": "Screen.unlockOrientation",
      "path": "screen/unlockorientation",
      "type": "Miscellaneous"
    },
    { "name": "Screen.width", "path": "screen/width", "type": "CSS" },
    {
      "name": "ScreenOrientation",
      "path": "screenorientation",
      "type": "Miscellaneous"
    },
    {
      "name": "ScreenOrientation.angle",
      "path": "screenorientation/angle",
      "type": "Miscellaneous"
    },
    {
      "name": "ScreenOrientation.lock",
      "path": "screenorientation/lock",
      "type": "Miscellaneous"
    },
    {
      "name": "ScreenOrientation.onchange",
      "path": "screenorientation/onchange",
      "type": "Miscellaneous"
    },
    {
      "name": "ScreenOrientation.type",
      "path": "screenorientation/type",
      "type": "Miscellaneous"
    },
    {
      "name": "ScreenOrientation.unlock",
      "path": "screenorientation/unlock",
      "type": "Miscellaneous"
    },
    {
      "name": "ScriptProcessorNode",
      "path": "scriptprocessornode",
      "type": "Audio"
    },
    {
      "name": "ScriptProcessorNode.audioprocess event",
      "path": "scriptprocessornode/audioprocess_event",
      "type": "Audio"
    },
    {
      "name": "ScriptProcessorNode.bufferSize",
      "path": "scriptprocessornode/buffersize",
      "type": "Audio"
    },
    {
      "name": "ScriptProcessorNode.onaudioprocess",
      "path": "scriptprocessornode/onaudioprocess",
      "type": "Audio"
    },
    { "name": "ScrollToOptions", "path": "scrolltooptions", "type": "CSS" },
    {
      "name": "ScrollToOptions.behavior",
      "path": "scrolltooptions/behavior",
      "type": "CSS"
    },
    {
      "name": "ScrollToOptions.left",
      "path": "scrolltooptions/left",
      "type": "CSS"
    },
    {
      "name": "ScrollToOptions.top",
      "path": "scrolltooptions/top",
      "type": "CSS"
    },
    {
      "name": "SecurityPolicyViolationEvent",
      "path": "securitypolicyviolationevent",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.blockedURI",
      "path": "securitypolicyviolationevent/blockeduri",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.columnNumber",
      "path": "securitypolicyviolationevent/columnnumber",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.constructor",
      "path": "securitypolicyviolationevent/securitypolicyviolationevent",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.disposition",
      "path": "securitypolicyviolationevent/disposition",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.documentURI",
      "path": "securitypolicyviolationevent/documenturi",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.effectiveDirective",
      "path": "securitypolicyviolationevent/effectivedirective",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.lineNumber",
      "path": "securitypolicyviolationevent/linenumber",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.originalPolicy",
      "path": "securitypolicyviolationevent/originalpolicy",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.referrer",
      "path": "securitypolicyviolationevent/referrer",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.sample",
      "path": "securitypolicyviolationevent/sample",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.sourceFile",
      "path": "securitypolicyviolationevent/sourcefile",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.statusCode",
      "path": "securitypolicyviolationevent/statuscode",
      "type": "Content Security Policy"
    },
    {
      "name": "SecurityPolicyViolationEvent.violatedDirective",
      "path": "securitypolicyviolationevent/violateddirective",
      "type": "Content Security Policy"
    },
    { "name": "Selection", "path": "selection", "type": "Selection" },
    {
      "name": "Selection.addRange",
      "path": "selection/addrange",
      "type": "Selection"
    },
    {
      "name": "Selection.anchorNode",
      "path": "selection/anchornode",
      "type": "Selection"
    },
    {
      "name": "Selection.anchorOffset",
      "path": "selection/anchoroffset",
      "type": "Selection"
    },
    {
      "name": "Selection.collapse",
      "path": "selection/collapse",
      "type": "Selection"
    },
    {
      "name": "Selection.collapseToEnd",
      "path": "selection/collapsetoend",
      "type": "Selection"
    },
    {
      "name": "Selection.collapseToStart",
      "path": "selection/collapsetostart",
      "type": "Selection"
    },
    {
      "name": "Selection.containsNode",
      "path": "selection/containsnode",
      "type": "Selection"
    },
    {
      "name": "Selection.deleteFromDocument",
      "path": "selection/deletefromdocument",
      "type": "Selection"
    },
    {
      "name": "Selection.extend",
      "path": "selection/extend",
      "type": "Selection"
    },
    {
      "name": "Selection.focusNode",
      "path": "selection/focusnode",
      "type": "Selection"
    },
    {
      "name": "Selection.focusOffset",
      "path": "selection/focusoffset",
      "type": "Selection"
    },
    {
      "name": "Selection.getRangeAt",
      "path": "selection/getrangeat",
      "type": "Selection"
    },
    {
      "name": "Selection.isCollapsed",
      "path": "selection/iscollapsed",
      "type": "Selection"
    },
    {
      "name": "Selection.modify",
      "path": "selection/modify",
      "type": "Selection"
    },
    {
      "name": "Selection.rangeCount",
      "path": "selection/rangecount",
      "type": "Selection"
    },
    {
      "name": "Selection.removeAllRanges",
      "path": "selection/removeallranges",
      "type": "Selection"
    },
    {
      "name": "Selection.removeRange",
      "path": "selection/removerange",
      "type": "Selection"
    },
    {
      "name": "Selection.selectAllChildren",
      "path": "selection/selectallchildren",
      "type": "Selection"
    },
    {
      "name": "Selection.selectionLanguageChange",
      "path": "selection/selectionlanguagechange",
      "type": "Selection"
    },
    {
      "name": "Selection.setBaseAndExtent",
      "path": "selection/setbaseandextent",
      "type": "Selection"
    },
    {
      "name": "Selection.toString",
      "path": "selection/tostring",
      "type": "Selection"
    },
    { "name": "Selection.type", "path": "selection/type", "type": "Selection" },
    { "name": "Sensor", "path": "sensor", "type": "Sensors" },
    { "name": "Sensor APIs", "path": "sensor_apis", "type": "Sensors" },
    {
      "name": "Sensor.activated",
      "path": "sensor/activated",
      "type": "Sensors"
    },
    {
      "name": "Sensor.hasReading",
      "path": "sensor/hasreading",
      "type": "Sensors"
    },
    {
      "name": "Sensor.onactivate",
      "path": "sensor/onactivate",
      "type": "Sensors"
    },
    { "name": "Sensor.onerror", "path": "sensor/onerror", "type": "Sensors" },
    {
      "name": "Sensor.onreading",
      "path": "sensor/onreading",
      "type": "Sensors"
    },
    { "name": "Sensor.start", "path": "sensor/start", "type": "Sensors" },
    { "name": "Sensor.stop", "path": "sensor/stop", "type": "Sensors" },
    {
      "name": "Sensor.timestamp",
      "path": "sensor/timestamp",
      "type": "Sensors"
    },
    {
      "name": "SensorErrorEvent",
      "path": "sensorerrorevent",
      "type": "Sensors"
    },
    {
      "name": "SensorErrorEvent.constructor",
      "path": "sensorerrorevent/sensorerrorevent",
      "type": "Sensors"
    },
    {
      "name": "SensorErrorEvent.error",
      "path": "sensorerrorevent/error",
      "type": "Sensors"
    },
    { "name": "Serial", "path": "serial", "type": "Miscellaneous" },
    {
      "name": "Serial.getPorts",
      "path": "serial/getports",
      "type": "Miscellaneous"
    },
    {
      "name": "Serial.onconnect",
      "path": "serial/onconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "Serial.ondisconnect",
      "path": "serial/ondisconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "Serial.requestPort",
      "path": "serial/requestport",
      "type": "Miscellaneous"
    },
    { "name": "SerialPort", "path": "serialport", "type": "Miscellaneous" },
    {
      "name": "SerialPort.close",
      "path": "serialport/close",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.getInfo",
      "path": "serialport/getinfo",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.getSignals",
      "path": "serialport/getsignals",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.onconnect",
      "path": "serialport/onconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.ondisconnect",
      "path": "serialport/ondisconnect",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.open",
      "path": "serialport/open",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.readable",
      "path": "serialport/readable",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.setSignals",
      "path": "serialport/setsignals",
      "type": "Miscellaneous"
    },
    {
      "name": "SerialPort.writable",
      "path": "serialport/writable",
      "type": "Miscellaneous"
    },
    {
      "name": "Server-sent events",
      "path": "server-sent_events",
      "type": "Server-Sent Events"
    },
    {
      "name": "Server-sent events.Using server-sent events",
      "path": "server-sent_events/using_server-sent_events",
      "type": "Server-Sent Events"
    },
    {
      "name": "Service Worker API",
      "path": "service_worker_api",
      "type": "Web Workers"
    },
    {
      "name": "Service Worker API: Using Service Workers",
      "path": "service_worker_api/using_service_workers",
      "type": "Web Workers"
    },
    {
      "name": "ServiceWorker",
      "path": "serviceworker",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorker.onstatechange",
      "path": "serviceworker/onstatechange",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorker.scriptURL",
      "path": "serviceworker/scripturl",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorker.state",
      "path": "serviceworker/state",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer",
      "path": "serviceworkercontainer",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.controller",
      "path": "serviceworkercontainer/controller",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.getRegistration",
      "path": "serviceworkercontainer/getregistration",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.getRegistrations",
      "path": "serviceworkercontainer/getregistrations",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.message event",
      "path": "serviceworkercontainer/message_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.oncontrollerchange",
      "path": "serviceworkercontainer/oncontrollerchange",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.onerror",
      "path": "serviceworkercontainer/onerror",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.onmessage",
      "path": "serviceworkercontainer/onmessage",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.ready",
      "path": "serviceworkercontainer/ready",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.register",
      "path": "serviceworkercontainer/register",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerContainer.startMessages",
      "path": "serviceworkercontainer/startmessages",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope",
      "path": "serviceworkerglobalscope",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.activate event",
      "path": "serviceworkerglobalscope/activate_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.caches",
      "path": "serviceworkerglobalscope/caches",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.clients",
      "path": "serviceworkerglobalscope/clients",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.contentdelete event",
      "path": "serviceworkerglobalscope/contentdelete_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.install event",
      "path": "serviceworkerglobalscope/install_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.message event",
      "path": "serviceworkerglobalscope/message_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.notificationclick event",
      "path": "serviceworkerglobalscope/notificationclick_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onactivate",
      "path": "serviceworkerglobalscope/onactivate",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.oncontentdelete",
      "path": "serviceworkerglobalscope/oncontentdelete",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onfetch",
      "path": "serviceworkerglobalscope/onfetch",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.oninstall",
      "path": "serviceworkerglobalscope/oninstall",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onmessage",
      "path": "serviceworkerglobalscope/onmessage",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onnotificationclick",
      "path": "serviceworkerglobalscope/onnotificationclick",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onnotificationclose",
      "path": "serviceworkerglobalscope/onnotificationclose",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onperiodicsync",
      "path": "serviceworkerglobalscope/onperiodicsync",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onpush",
      "path": "serviceworkerglobalscope/onpush",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onpushsubscriptionchange",
      "path": "serviceworkerglobalscope/onpushsubscriptionchange",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.onsync",
      "path": "serviceworkerglobalscope/onsync",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.periodicsync event",
      "path": "serviceworkerglobalscope/periodicsync_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.push event",
      "path": "serviceworkerglobalscope/push_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.pushsubscriptionchange event",
      "path": "serviceworkerglobalscope/pushsubscriptionchange_event",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.registration",
      "path": "serviceworkerglobalscope/registration",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerGlobalScope.skipWaiting",
      "path": "serviceworkerglobalscope/skipwaiting",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent",
      "path": "serviceworkermessageevent",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.constructor",
      "path": "serviceworkermessageevent/serviceworkermessageevent",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.data",
      "path": "serviceworkermessageevent/data",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.lastEventId",
      "path": "serviceworkermessageevent/lasteventid",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.origin",
      "path": "serviceworkermessageevent/origin",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.ports",
      "path": "serviceworkermessageevent/ports",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerMessageEvent.source",
      "path": "serviceworkermessageevent/source",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration",
      "path": "serviceworkerregistration",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.active",
      "path": "serviceworkerregistration/active",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.getNotifications",
      "path": "serviceworkerregistration/getnotifications",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.index",
      "path": "serviceworkerregistration/index",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.installing",
      "path": "serviceworkerregistration/installing",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.navigationPreload",
      "path": "serviceworkerregistration/navigationpreload",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.onupdatefound",
      "path": "serviceworkerregistration/onupdatefound",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.periodicSync",
      "path": "serviceworkerregistration/periodicsync",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.pushManager",
      "path": "serviceworkerregistration/pushmanager",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.scope",
      "path": "serviceworkerregistration/scope",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.showNotification",
      "path": "serviceworkerregistration/shownotification",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.sync",
      "path": "serviceworkerregistration/sync",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.unregister",
      "path": "serviceworkerregistration/unregister",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.update",
      "path": "serviceworkerregistration/update",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerRegistration.waiting",
      "path": "serviceworkerregistration/waiting",
      "type": "Service Workers"
    },
    {
      "name": "ServiceWorkerState",
      "path": "serviceworkerstate",
      "type": "Service Workers"
    },
    { "name": "ShadowRoot", "path": "shadowroot", "type": "Shadow DOM" },
    {
      "name": "ShadowRoot.activeElement",
      "path": "shadowroot/activeelement",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.delegatesFocus",
      "path": "shadowroot/delegatesfocus",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.fullscreenElement",
      "path": "shadowroot/fullscreenelement",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.getAnimations",
      "path": "shadowroot/getanimations",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.host",
      "path": "shadowroot/host",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.innerHTML",
      "path": "shadowroot/innerhtml",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.mode",
      "path": "shadowroot/mode",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.pictureInPictureElement",
      "path": "shadowroot/pictureinpictureelement",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.pointerLockElement",
      "path": "shadowroot/pointerlockelement",
      "type": "Shadow DOM"
    },
    {
      "name": "ShadowRoot.styleSheets",
      "path": "shadowroot/stylesheets",
      "type": "Shadow DOM"
    },
    { "name": "SharedWorker", "path": "sharedworker", "type": "Web Workers" },
    {
      "name": "SharedWorker.constructor",
      "path": "sharedworker/sharedworker",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorker.port",
      "path": "sharedworker/port",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope",
      "path": "sharedworkerglobalscope",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope.applicationCache",
      "path": "sharedworkerglobalscope/applicationcache",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope.close",
      "path": "sharedworkerglobalscope/close",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope.connect event",
      "path": "sharedworkerglobalscope/connect_event",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope.name",
      "path": "sharedworkerglobalscope/name",
      "type": "Web Workers"
    },
    {
      "name": "SharedWorkerGlobalScope.onconnect",
      "path": "sharedworkerglobalscope/onconnect",
      "type": "Web Workers"
    },
    { "name": "SourceBuffer", "path": "sourcebuffer", "type": "Media" },
    {
      "name": "SourceBuffer.abort",
      "path": "sourcebuffer/abort",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.appendBuffer",
      "path": "sourcebuffer/appendbuffer",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.appendBufferAsync",
      "path": "sourcebuffer/appendbufferasync",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.appendStream",
      "path": "sourcebuffer/appendstream",
      "type": "Miscellaneous"
    },
    {
      "name": "SourceBuffer.appendWindowEnd",
      "path": "sourcebuffer/appendwindowend",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.appendWindowStart",
      "path": "sourcebuffer/appendwindowstart",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.audioTracks",
      "path": "sourcebuffer/audiotracks",
      "type": "Audio"
    },
    {
      "name": "SourceBuffer.buffered",
      "path": "sourcebuffer/buffered",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.changeType",
      "path": "sourcebuffer/changetype",
      "type": "Miscellaneous"
    },
    {
      "name": "SourceBuffer.mode",
      "path": "sourcebuffer/mode",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.remove",
      "path": "sourcebuffer/remove",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.removeAsync",
      "path": "sourcebuffer/removeasync",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.textTracks",
      "path": "sourcebuffer/texttracks",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.timestampOffset",
      "path": "sourcebuffer/timestampoffset",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.trackDefaults",
      "path": "sourcebuffer/trackdefaults",
      "type": "Miscellaneous"
    },
    {
      "name": "SourceBuffer.updating",
      "path": "sourcebuffer/updating",
      "type": "Media"
    },
    {
      "name": "SourceBuffer.videoTracks",
      "path": "sourcebuffer/videotracks",
      "type": "Media"
    },
    { "name": "SourceBufferList", "path": "sourcebufferlist", "type": "Media" },
    {
      "name": "SourceBufferList.length",
      "path": "sourcebufferlist/length",
      "type": "Media"
    },
    {
      "name": "SourceBufferList.SourceBuffer",
      "path": "sourcebufferlist/sourcebuffer",
      "type": "Media"
    },
    { "name": "SpeechGrammar", "path": "speechgrammar", "type": "Speech" },
    {
      "name": "SpeechGrammar.constructor",
      "path": "speechgrammar/speechgrammar",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammar.src",
      "path": "speechgrammar/src",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammar.weight",
      "path": "speechgrammar/weight",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList",
      "path": "speechgrammarlist",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList.addFromString",
      "path": "speechgrammarlist/addfromstring",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList.addFromURI",
      "path": "speechgrammarlist/addfromuri",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList.constructor",
      "path": "speechgrammarlist/speechgrammarlist",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList.item",
      "path": "speechgrammarlist/item",
      "type": "Speech"
    },
    {
      "name": "SpeechGrammarList.length",
      "path": "speechgrammarlist/length",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition",
      "path": "speechrecognition",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.abort",
      "path": "speechrecognition/abort",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.audioend event",
      "path": "speechrecognition/audioend_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.audiostart event",
      "path": "speechrecognition/audiostart_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.constructor",
      "path": "speechrecognition/speechrecognition",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.continuous",
      "path": "speechrecognition/continuous",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.end event",
      "path": "speechrecognition/end_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.error event",
      "path": "speechrecognition/error_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.grammars",
      "path": "speechrecognition/grammars",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.interimResults",
      "path": "speechrecognition/interimresults",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.lang",
      "path": "speechrecognition/lang",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.maxAlternatives",
      "path": "speechrecognition/maxalternatives",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.nomatch event",
      "path": "speechrecognition/nomatch_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onaudioend",
      "path": "speechrecognition/onaudioend",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onaudiostart",
      "path": "speechrecognition/onaudiostart",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onend",
      "path": "speechrecognition/onend",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onerror",
      "path": "speechrecognition/onerror",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onnomatch",
      "path": "speechrecognition/onnomatch",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onresult",
      "path": "speechrecognition/onresult",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onsoundend",
      "path": "speechrecognition/onsoundend",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onsoundstart",
      "path": "speechrecognition/onsoundstart",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onspeechend",
      "path": "speechrecognition/onspeechend",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onspeechstart",
      "path": "speechrecognition/onspeechstart",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.onstart",
      "path": "speechrecognition/onstart",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.result event",
      "path": "speechrecognition/result_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.serviceURI",
      "path": "speechrecognition/serviceuri",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.soundend event",
      "path": "speechrecognition/soundend_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.soundstart event",
      "path": "speechrecognition/soundstart_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.speechend event",
      "path": "speechrecognition/speechend_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.speechstart event",
      "path": "speechrecognition/speechstart_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.start",
      "path": "speechrecognition/start",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.start event",
      "path": "speechrecognition/start_event",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognition.stop",
      "path": "speechrecognition/stop",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionAlternative",
      "path": "speechrecognitionalternative",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionAlternative.confidence",
      "path": "speechrecognitionalternative/confidence",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionAlternative.transcript",
      "path": "speechrecognitionalternative/transcript",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionError",
      "path": "speechrecognitionerror",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionError.error",
      "path": "speechrecognitionerror/error",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionError.message",
      "path": "speechrecognitionerror/message",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionErrorEvent",
      "path": "speechrecognitionerrorevent",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionErrorEvent.error",
      "path": "speechrecognitionerrorevent/error",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionErrorEvent.message",
      "path": "speechrecognitionerrorevent/message",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionEvent",
      "path": "speechrecognitionevent",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionEvent.emma",
      "path": "speechrecognitionevent/emma",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionEvent.interpretation",
      "path": "speechrecognitionevent/interpretation",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionEvent.resultIndex",
      "path": "speechrecognitionevent/resultindex",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionEvent.results",
      "path": "speechrecognitionevent/results",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResult",
      "path": "speechrecognitionresult",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResult.isFinal",
      "path": "speechrecognitionresult/isfinal",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResult.item",
      "path": "speechrecognitionresult/item",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResult.length",
      "path": "speechrecognitionresult/length",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResultList",
      "path": "speechrecognitionresultlist",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResultList.item",
      "path": "speechrecognitionresultlist/item",
      "type": "Speech"
    },
    {
      "name": "SpeechRecognitionResultList.length",
      "path": "speechrecognitionresultlist/length",
      "type": "Speech"
    },
    { "name": "SpeechSynthesis", "path": "speechsynthesis", "type": "Speech" },
    {
      "name": "SpeechSynthesis.cancel",
      "path": "speechsynthesis/cancel",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.getVoices",
      "path": "speechsynthesis/getvoices",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.onvoiceschanged",
      "path": "speechsynthesis/onvoiceschanged",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.pause",
      "path": "speechsynthesis/pause",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.paused",
      "path": "speechsynthesis/paused",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.pending",
      "path": "speechsynthesis/pending",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.resume",
      "path": "speechsynthesis/resume",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.speak",
      "path": "speechsynthesis/speak",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.speaking",
      "path": "speechsynthesis/speaking",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesis.voiceschanged event",
      "path": "speechsynthesis/voiceschanged_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisErrorEvent",
      "path": "speechsynthesiserrorevent",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisErrorEvent.error",
      "path": "speechsynthesiserrorevent/error",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisEvent",
      "path": "speechsynthesisevent",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisEvent.charIndex",
      "path": "speechsynthesisevent/charindex",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisEvent.elapsedTime",
      "path": "speechsynthesisevent/elapsedtime",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisEvent.name",
      "path": "speechsynthesisevent/name",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisEvent.utterance",
      "path": "speechsynthesisevent/utterance",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance",
      "path": "speechsynthesisutterance",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.boundary event",
      "path": "speechsynthesisutterance/boundary_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.constructor",
      "path": "speechsynthesisutterance/speechsynthesisutterance",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.end event",
      "path": "speechsynthesisutterance/end_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.error event",
      "path": "speechsynthesisutterance/error_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.lang",
      "path": "speechsynthesisutterance/lang",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.mark event",
      "path": "speechsynthesisutterance/mark_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onboundary",
      "path": "speechsynthesisutterance/onboundary",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onend",
      "path": "speechsynthesisutterance/onend",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onerror",
      "path": "speechsynthesisutterance/onerror",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onmark",
      "path": "speechsynthesisutterance/onmark",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onpause",
      "path": "speechsynthesisutterance/onpause",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onresume",
      "path": "speechsynthesisutterance/onresume",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.onstart",
      "path": "speechsynthesisutterance/onstart",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.pause event",
      "path": "speechsynthesisutterance/pause_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.pitch",
      "path": "speechsynthesisutterance/pitch",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.rate",
      "path": "speechsynthesisutterance/rate",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.resume event",
      "path": "speechsynthesisutterance/resume_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.start event",
      "path": "speechsynthesisutterance/start_event",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.text",
      "path": "speechsynthesisutterance/text",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.voice",
      "path": "speechsynthesisutterance/voice",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisUtterance.volume",
      "path": "speechsynthesisutterance/volume",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice",
      "path": "speechsynthesisvoice",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice.default",
      "path": "speechsynthesisvoice/default",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice.lang",
      "path": "speechsynthesisvoice/lang",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice.localService",
      "path": "speechsynthesisvoice/localservice",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice.name",
      "path": "speechsynthesisvoice/name",
      "type": "Speech"
    },
    {
      "name": "SpeechSynthesisVoice.voiceURI",
      "path": "speechsynthesisvoice/voiceuri",
      "type": "Speech"
    },
    { "name": "StaticRange", "path": "staticrange", "type": "Range" },
    {
      "name": "StaticRange.collapsed",
      "path": "staticrange/collapsed",
      "type": "Range"
    },
    {
      "name": "StaticRange.constructor",
      "path": "staticrange/staticrange",
      "type": "Range"
    },
    {
      "name": "StaticRange.endContainer",
      "path": "staticrange/endcontainer",
      "type": "Range"
    },
    {
      "name": "StaticRange.endOffset",
      "path": "staticrange/endoffset",
      "type": "Range"
    },
    {
      "name": "StaticRange.startContainer",
      "path": "staticrange/startcontainer",
      "type": "Range"
    },
    {
      "name": "StaticRange.startOffset",
      "path": "staticrange/startoffset",
      "type": "Range"
    },
    { "name": "StereoPannerNode", "path": "stereopannernode", "type": "Audio" },
    {
      "name": "StereoPannerNode.constructor",
      "path": "stereopannernode/stereopannernode",
      "type": "Audio"
    },
    {
      "name": "StereoPannerNode.pan",
      "path": "stereopannernode/pan",
      "type": "Audio"
    },
    { "name": "Storage", "path": "storage", "type": "Storage" },
    {
      "name": "Storage Access API",
      "path": "storage_access_api",
      "type": "Storage"
    },
    {
      "name": "Storage Access API: Using",
      "path": "storage_access_api/using",
      "type": "Storage"
    },
    { "name": "Storage API", "path": "storage_api", "type": "Storage" },
    { "name": "Storage.clear", "path": "storage/clear", "type": "Storage" },
    { "name": "Storage.getItem", "path": "storage/getitem", "type": "Storage" },
    { "name": "Storage.key", "path": "storage/key", "type": "Storage" },
    { "name": "Storage.length", "path": "storage/length", "type": "Storage" },
    {
      "name": "Storage.removeItem",
      "path": "storage/removeitem",
      "type": "Storage"
    },
    { "name": "Storage.setItem", "path": "storage/setitem", "type": "Storage" },
    { "name": "StorageEstimate", "path": "storageestimate", "type": "Storage" },
    {
      "name": "StorageEstimate.quota",
      "path": "storageestimate/quota",
      "type": "Storage"
    },
    {
      "name": "StorageEstimate.usage",
      "path": "storageestimate/usage",
      "type": "Storage"
    },
    { "name": "StorageEvent", "path": "storageevent", "type": "Storage" },
    { "name": "StorageManager", "path": "storagemanager", "type": "Storage" },
    {
      "name": "StorageManager.estimate",
      "path": "storagemanager/estimate",
      "type": "Storage"
    },
    {
      "name": "StorageManager.persist",
      "path": "storagemanager/persist",
      "type": "Storage"
    },
    {
      "name": "StorageManager.persisted",
      "path": "storagemanager/persisted",
      "type": "Storage"
    },
    { "name": "Streams API", "path": "streams_api", "type": "Media Streams" },
    {
      "name": "Streams API: Concepts",
      "path": "streams_api/concepts",
      "type": "Media Streams"
    },
    {
      "name": "Streams API: Using readable streams",
      "path": "streams_api/using_readable_streams",
      "type": "Media Streams"
    },
    {
      "name": "Streams API: Using writable streams",
      "path": "streams_api/using_writable_streams",
      "type": "Media Streams"
    },
    { "name": "StylePropertyMap", "path": "stylepropertymap", "type": "CSS" },
    {
      "name": "StylePropertyMap.append",
      "path": "stylepropertymap/append",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMap.clear",
      "path": "stylepropertymap/clear",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMap.delete",
      "path": "stylepropertymap/delete",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMap.set",
      "path": "stylepropertymap/set",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly",
      "path": "stylepropertymapreadonly",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.entries",
      "path": "stylepropertymapreadonly/entries",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.forEach",
      "path": "stylepropertymapreadonly/foreach",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.get",
      "path": "stylepropertymapreadonly/get",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.getAll",
      "path": "stylepropertymapreadonly/getall",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.has",
      "path": "stylepropertymapreadonly/has",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.keys",
      "path": "stylepropertymapreadonly/keys",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.size",
      "path": "stylepropertymapreadonly/size",
      "type": "CSS"
    },
    {
      "name": "StylePropertyMapReadOnly.values",
      "path": "stylepropertymapreadonly/values",
      "type": "CSS"
    },
    { "name": "StyleSheet", "path": "stylesheet", "type": "CSS" },
    {
      "name": "StyleSheet.disabled",
      "path": "stylesheet/disabled",
      "type": "CSS"
    },
    { "name": "StyleSheet.href", "path": "stylesheet/href", "type": "CSS" },
    { "name": "StyleSheet.media", "path": "stylesheet/media", "type": "CSS" },
    {
      "name": "StyleSheet.ownerNode",
      "path": "stylesheet/ownernode",
      "type": "CSS"
    },
    {
      "name": "StyleSheet.parentStyleSheet",
      "path": "stylesheet/parentstylesheet",
      "type": "CSS"
    },
    { "name": "StyleSheet.title", "path": "stylesheet/title", "type": "CSS" },
    { "name": "StyleSheet.type", "path": "stylesheet/type", "type": "CSS" },
    { "name": "StyleSheetList", "path": "stylesheetlist", "type": "CSS" },
    { "name": "SubmitEvent", "path": "submitevent", "type": "Events" },
    {
      "name": "SubmitEvent.constructor",
      "path": "submitevent/submitevent",
      "type": "Events"
    },
    {
      "name": "SubmitEvent.submitter",
      "path": "submitevent/submitter",
      "type": "Events"
    },
    { "name": "SubtleCrypto", "path": "subtlecrypto", "type": "Cryptography" },
    {
      "name": "SubtleCrypto.decrypt",
      "path": "subtlecrypto/decrypt",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.deriveBits",
      "path": "subtlecrypto/derivebits",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.deriveKey",
      "path": "subtlecrypto/derivekey",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.digest",
      "path": "subtlecrypto/digest",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.encrypt",
      "path": "subtlecrypto/encrypt",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.exportKey",
      "path": "subtlecrypto/exportkey",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.generateKey",
      "path": "subtlecrypto/generatekey",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.importKey",
      "path": "subtlecrypto/importkey",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.sign",
      "path": "subtlecrypto/sign",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.unwrapKey",
      "path": "subtlecrypto/unwrapkey",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.verify",
      "path": "subtlecrypto/verify",
      "type": "Cryptography"
    },
    {
      "name": "SubtleCrypto.wrapKey",
      "path": "subtlecrypto/wrapkey",
      "type": "Cryptography"
    },
    { "name": "SVGAElement", "path": "svgaelement", "type": "SVG" },
    {
      "name": "SVGAElement.target",
      "path": "svgaelement/target",
      "type": "SVG"
    },
    {
      "name": "SVGAltGlyphDefElement",
      "path": "svgaltglyphdefelement",
      "type": "SVG"
    },
    {
      "name": "SVGAltGlyphElement",
      "path": "svgaltglyphelement",
      "type": "SVG"
    },
    {
      "name": "SVGAltGlyphElement.format",
      "path": "svgaltglyphelement/format",
      "type": "SVG"
    },
    {
      "name": "SVGAltGlyphElement.glyphRef",
      "path": "svgaltglyphelement/glyphref",
      "type": "SVG"
    },
    {
      "name": "SVGAltGlyphItemElement",
      "path": "svgaltglyphitemelement",
      "type": "SVG"
    },
    { "name": "SVGAngle", "path": "svgangle", "type": "SVG" },
    {
      "name": "SVGAnimateColorElement",
      "path": "svganimatecolorelement",
      "type": "SVG"
    },
    { "name": "SVGAnimatedAngle", "path": "svganimatedangle", "type": "SVG" },
    {
      "name": "SVGAnimatedBoolean",
      "path": "svganimatedboolean",
      "type": "SVG"
    },
    {
      "name": "SVGAnimatedEnumeration",
      "path": "svganimatedenumeration",
      "type": "SVG"
    },
    {
      "name": "SVGAnimatedInteger",
      "path": "svganimatedinteger",
      "type": "SVG"
    },
    { "name": "SVGAnimatedLength", "path": "svganimatedlength", "type": "SVG" },
    {
      "name": "SVGAnimatedLengthList",
      "path": "svganimatedlengthlist",
      "type": "SVG"
    },
    { "name": "SVGAnimatedNumber", "path": "svganimatednumber", "type": "SVG" },
    {
      "name": "SVGAnimatedNumberList",
      "path": "svganimatednumberlist",
      "type": "SVG"
    },
    { "name": "SVGAnimatedPoints", "path": "svganimatedpoints", "type": "SVG" },
    {
      "name": "SVGAnimatedPreserveAspectRatio",
      "path": "svganimatedpreserveaspectratio",
      "type": "SVG"
    },
    { "name": "SVGAnimatedRect", "path": "svganimatedrect", "type": "SVG" },
    { "name": "SVGAnimatedString", "path": "svganimatedstring", "type": "SVG" },
    {
      "name": "SVGAnimatedString.animVal",
      "path": "svganimatedstring/animval",
      "type": "SVG"
    },
    {
      "name": "SVGAnimatedString.baseVal",
      "path": "svganimatedstring/baseval",
      "type": "SVG"
    },
    {
      "name": "SVGAnimatedTransformList",
      "path": "svganimatedtransformlist",
      "type": "SVG"
    },
    { "name": "SVGAnimateElement", "path": "svganimateelement", "type": "SVG" },
    {
      "name": "SVGAnimateMotionElement",
      "path": "svganimatemotionelement",
      "type": "SVG"
    },
    {
      "name": "SVGAnimateTransformElement",
      "path": "svganimatetransformelement",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement",
      "path": "svganimationelement",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.beginEvent event",
      "path": "svganimationelement/beginevent_event",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.endEvent event",
      "path": "svganimationelement/endevent_event",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.onbegin",
      "path": "svganimationelement/onbegin",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.onend",
      "path": "svganimationelement/onend",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.onrepeat",
      "path": "svganimationelement/onrepeat",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.repeatEvent event",
      "path": "svganimationelement/repeatevent_event",
      "type": "SVG"
    },
    {
      "name": "SVGAnimationElement.targetElement",
      "path": "svganimationelement/targetelement",
      "type": "SVG"
    },
    { "name": "SVGCircleElement", "path": "svgcircleelement", "type": "SVG" },
    {
      "name": "SVGCircleElement.cx",
      "path": "svgcircleelement/cx",
      "type": "SVG"
    },
    {
      "name": "SVGCircleElement.cy",
      "path": "svgcircleelement/cy",
      "type": "SVG"
    },
    {
      "name": "SVGCircleElement.r",
      "path": "svgcircleelement/r",
      "type": "SVG"
    },
    {
      "name": "SVGClipPathElement",
      "path": "svgclippathelement",
      "type": "SVG"
    },
    {
      "name": "SVGColorProfileElement",
      "path": "svgcolorprofileelement",
      "type": "SVG"
    },
    {
      "name": "SVGComponentTransferFunctionElement",
      "path": "svgcomponenttransferfunctionelement",
      "type": "SVG"
    },
    { "name": "SVGCursorElement", "path": "svgcursorelement", "type": "SVG" },
    { "name": "SVGDefsElement", "path": "svgdefselement", "type": "SVG" },
    { "name": "SVGDescElement", "path": "svgdescelement", "type": "SVG" },
    { "name": "SVGElement", "path": "svgelement", "type": "SVG" },
    {
      "name": "SVGElement.abort event",
      "path": "svgelement/abort_event",
      "type": "SVG"
    },
    {
      "name": "SVGElement.error event",
      "path": "svgelement/error_event",
      "type": "SVG"
    },
    {
      "name": "SVGElement.load event",
      "path": "svgelement/load_event",
      "type": "SVG"
    },
    {
      "name": "SVGElement.resize event",
      "path": "svgelement/resize_event",
      "type": "SVG"
    },
    {
      "name": "SVGElement.scroll event",
      "path": "svgelement/scroll_event",
      "type": "SVG"
    },
    {
      "name": "SVGElement.unload event",
      "path": "svgelement/unload_event",
      "type": "SVG"
    },
    { "name": "SVGEllipseElement", "path": "svgellipseelement", "type": "SVG" },
    { "name": "SVGEvent", "path": "svgevent", "type": "SVG" },
    {
      "name": "SVGExternalResourcesRequired",
      "path": "svgexternalresourcesrequired",
      "type": "SVG"
    },
    { "name": "SVGFEBlendElement", "path": "svgfeblendelement", "type": "SVG" },
    {
      "name": "SVGFEColorMatrixElement",
      "path": "svgfecolormatrixelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEComponentTransferElement",
      "path": "svgfecomponenttransferelement",
      "type": "SVG"
    },
    {
      "name": "SVGFECompositeElement",
      "path": "svgfecompositeelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEConvolveMatrixElement",
      "path": "svgfeconvolvematrixelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEDiffuseLightingElement",
      "path": "svgfediffuselightingelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEDisplacementMapElement",
      "path": "svgfedisplacementmapelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEDistantLightElement",
      "path": "svgfedistantlightelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEDropShadowElement",
      "path": "svgfedropshadowelement",
      "type": "SVG"
    },
    { "name": "SVGFEFloodElement", "path": "svgfefloodelement", "type": "SVG" },
    { "name": "SVGFEFuncAElement", "path": "svgfefuncaelement", "type": "SVG" },
    { "name": "SVGFEFuncBElement", "path": "svgfefuncbelement", "type": "SVG" },
    { "name": "SVGFEFuncGElement", "path": "svgfefuncgelement", "type": "SVG" },
    { "name": "SVGFEFuncRElement", "path": "svgfefuncrelement", "type": "SVG" },
    {
      "name": "SVGFEGaussianBlurElement",
      "path": "svgfegaussianblurelement",
      "type": "SVG"
    },
    { "name": "SVGFEImageElement", "path": "svgfeimageelement", "type": "SVG" },
    { "name": "SVGFEMergeElement", "path": "svgfemergeelement", "type": "SVG" },
    {
      "name": "SVGFEMergeNodeElement",
      "path": "svgfemergenodeelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEMorphologyElement",
      "path": "svgfemorphologyelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEOffsetElement",
      "path": "svgfeoffsetelement",
      "type": "SVG"
    },
    {
      "name": "SVGFEPointLightElement",
      "path": "svgfepointlightelement",
      "type": "SVG"
    },
    {
      "name": "SVGFESpecularLightingElement",
      "path": "svgfespecularlightingelement",
      "type": "SVG"
    },
    {
      "name": "SVGFESpotLightElement",
      "path": "svgfespotlightelement",
      "type": "SVG"
    },
    { "name": "SVGFETileElement", "path": "svgfetileelement", "type": "SVG" },
    {
      "name": "SVGFETurbulenceElement",
      "path": "svgfeturbulenceelement",
      "type": "SVG"
    },
    { "name": "SVGFilterElement", "path": "svgfilterelement", "type": "SVG" },
    {
      "name": "SVGFilterPrimitiveStandardAttributes",
      "path": "svgfilterprimitivestandardattributes",
      "type": "SVG"
    },
    { "name": "SVGFontElement", "path": "svgfontelement", "type": "SVG" },
    {
      "name": "SVGFontFaceElement",
      "path": "svgfontfaceelement",
      "type": "SVG"
    },
    {
      "name": "SVGFontFaceFormatElement",
      "path": "svgfontfaceformatelement",
      "type": "SVG"
    },
    {
      "name": "SVGFontFaceNameElement",
      "path": "svgfontfacenameelement",
      "type": "SVG"
    },
    {
      "name": "SVGFontFaceSrcElement",
      "path": "svgfontfacesrcelement",
      "type": "SVG"
    },
    {
      "name": "SVGFontFaceUriElement",
      "path": "svgfontfaceurielement",
      "type": "SVG"
    },
    {
      "name": "SVGForeignObjectElement",
      "path": "svgforeignobjectelement",
      "type": "SVG"
    },
    { "name": "SVGGElement", "path": "svggelement", "type": "SVG" },
    {
      "name": "SVGGeometryElement",
      "path": "svggeometryelement",
      "type": "SVG"
    },
    {
      "name": "SVGGeometryElement.getPointAtLength",
      "path": "svggeometryelement/getpointatlength",
      "type": "SVG"
    },
    {
      "name": "SVGGeometryElement.getTotalLength",
      "path": "svggeometryelement/gettotallength",
      "type": "SVG"
    },
    {
      "name": "SVGGeometryElement.isPointInFill",
      "path": "svggeometryelement/ispointinfill",
      "type": "SVG"
    },
    {
      "name": "SVGGeometryElement.isPointInStroke",
      "path": "svggeometryelement/ispointinstroke",
      "type": "SVG"
    },
    {
      "name": "SVGGeometryElement.pathLength",
      "path": "svggeometryelement/pathlength",
      "type": "SVG"
    },
    { "name": "SVGGlyphElement", "path": "svgglyphelement", "type": "SVG" },
    {
      "name": "SVGGlyphRefElement",
      "path": "svgglyphrefelement",
      "type": "SVG"
    },
    {
      "name": "SVGGradientElement",
      "path": "svggradientelement",
      "type": "SVG"
    },
    {
      "name": "SVGGraphicsElement",
      "path": "svggraphicselement",
      "type": "SVG"
    },
    {
      "name": "SVGGraphicsElement.copy event",
      "path": "svggraphicselement/copy_event",
      "type": "SVG"
    },
    {
      "name": "SVGGraphicsElement.cut event",
      "path": "svggraphicselement/cut_event",
      "type": "SVG"
    },
    {
      "name": "SVGGraphicsElement.getBBox",
      "path": "svggraphicselement/getbbox",
      "type": "SVG"
    },
    {
      "name": "SVGGraphicsElement.paste event",
      "path": "svggraphicselement/paste_event",
      "type": "SVG"
    },
    { "name": "SVGHKernElement", "path": "svghkernelement", "type": "SVG" },
    { "name": "SVGImageElement", "path": "svgimageelement", "type": "SVG" },
    {
      "name": "SVGImageElement.decode",
      "path": "svgimageelement/decode",
      "type": "SVG"
    },
    {
      "name": "SVGImageElement.decoding",
      "path": "svgimageelement/decoding",
      "type": "SVG"
    },
    {
      "name": "SVGImageElement.height",
      "path": "svgimageelement/height",
      "type": "SVG"
    },
    {
      "name": "SVGImageElement.preserveAspectRatio",
      "path": "svgimageelement/preserveaspectratio",
      "type": "SVG"
    },
    {
      "name": "SVGImageElement.width",
      "path": "svgimageelement/width",
      "type": "SVG"
    },
    { "name": "SVGImageElement.x", "path": "svgimageelement/x", "type": "SVG" },
    { "name": "SVGImageElement.y", "path": "svgimageelement/y", "type": "SVG" },
    { "name": "SVGLength", "path": "svglength", "type": "SVG" },
    { "name": "SVGLengthList", "path": "svglengthlist", "type": "SVG" },
    {
      "name": "SVGLinearGradientElement",
      "path": "svglineargradientelement",
      "type": "SVG"
    },
    { "name": "SVGLineElement", "path": "svglineelement", "type": "SVG" },
    { "name": "SVGMaskElement", "path": "svgmaskelement", "type": "SVG" },
    { "name": "SVGMatrix", "path": "svgmatrix", "type": "SVG" },
    {
      "name": "SVGMetadataElement",
      "path": "svgmetadataelement",
      "type": "SVG"
    },
    {
      "name": "SVGMissingGlyphElement",
      "path": "svgmissingglyphelement",
      "type": "SVG"
    },
    { "name": "SVGMPathElement", "path": "svgmpathelement", "type": "SVG" },
    { "name": "SVGNumber", "path": "svgnumber", "type": "SVG" },
    { "name": "SVGNumberList", "path": "svgnumberlist", "type": "SVG" },
    { "name": "SVGPathElement", "path": "svgpathelement", "type": "SVG" },
    { "name": "SVGPatternElement", "path": "svgpatternelement", "type": "SVG" },
    { "name": "SVGPoint", "path": "svgpoint", "type": "SVG" },
    { "name": "SVGPolygonElement", "path": "svgpolygonelement", "type": "SVG" },
    {
      "name": "SVGPolylineElement",
      "path": "svgpolylineelement",
      "type": "SVG"
    },
    {
      "name": "SVGPreserveAspectRatio",
      "path": "svgpreserveaspectratio",
      "type": "SVG"
    },
    {
      "name": "SVGRadialGradientElement",
      "path": "svgradialgradientelement",
      "type": "SVG"
    },
    { "name": "SVGRect", "path": "svgrect", "type": "SVG" },
    {
      "name": "SVGRect.The X property",
      "path": "svgrect/the__x__property",
      "type": "SVG"
    },
    { "name": "SVGRectElement", "path": "svgrectelement", "type": "SVG" },
    {
      "name": "SVGRenderingIntent",
      "path": "svgrenderingintent",
      "type": "SVG"
    },
    { "name": "SVGScriptElement", "path": "svgscriptelement", "type": "SVG" },
    { "name": "SVGSetElement", "path": "svgsetelement", "type": "SVG" },
    {
      "name": "SVGSolidcolorElement",
      "path": "svgsolidcolorelement",
      "type": "SVG"
    },
    { "name": "SVGStopElement", "path": "svgstopelement", "type": "SVG" },
    { "name": "SVGStringList", "path": "svgstringlist", "type": "SVG" },
    { "name": "SVGStylable", "path": "svgstylable", "type": "SVG" },
    { "name": "SVGStyleElement", "path": "svgstyleelement", "type": "SVG" },
    { "name": "SVGSVGElement", "path": "svgsvgelement", "type": "SVG" },
    { "name": "SVGSwitchElement", "path": "svgswitchelement", "type": "SVG" },
    { "name": "SVGSymbolElement", "path": "svgsymbolelement", "type": "SVG" },
    { "name": "SVGTests", "path": "svgtests", "type": "SVG" },
    {
      "name": "SVGTextContentElement",
      "path": "svgtextcontentelement",
      "type": "SVG"
    },
    { "name": "SVGTextElement", "path": "svgtextelement", "type": "SVG" },
    {
      "name": "SVGTextPathElement",
      "path": "svgtextpathelement",
      "type": "SVG"
    },
    {
      "name": "SVGTextPositioningElement",
      "path": "svgtextpositioningelement",
      "type": "SVG"
    },
    { "name": "SVGTitleElement", "path": "svgtitleelement", "type": "SVG" },
    { "name": "SVGTransform", "path": "svgtransform", "type": "SVG" },
    { "name": "SVGTransformable", "path": "svgtransformable", "type": "SVG" },
    { "name": "SVGTransformList", "path": "svgtransformlist", "type": "SVG" },
    { "name": "SVGTRefElement", "path": "svgtrefelement", "type": "SVG" },
    { "name": "SVGTSpanElement", "path": "svgtspanelement", "type": "SVG" },
    { "name": "SVGUnitTypes", "path": "svgunittypes", "type": "SVG" },
    { "name": "SVGURIReference", "path": "svgurireference", "type": "SVG" },
    { "name": "SVGUseElement", "path": "svguseelement", "type": "SVG" },
    { "name": "SVGViewElement", "path": "svgviewelement", "type": "SVG" },
    { "name": "SVGVKernElement", "path": "svgvkernelement", "type": "SVG" },
    { "name": "SVGZoomAndPan", "path": "svgzoomandpan", "type": "SVG" },
    { "name": "SyncEvent", "path": "syncevent", "type": "Events" },
    {
      "name": "SyncEvent.constructor",
      "path": "syncevent/syncevent",
      "type": "Events"
    },
    {
      "name": "SyncEvent.lastChance",
      "path": "syncevent/lastchance",
      "type": "Events"
    },
    {
      "name": "SyncEvent.registration",
      "path": "syncevent/registration",
      "type": "Events"
    },
    { "name": "SyncEvent.tag", "path": "syncevent/tag", "type": "Events" },
    { "name": "SyncManager", "path": "syncmanager", "type": "Miscellaneous" },
    {
      "name": "SyncManager.getTags",
      "path": "syncmanager/gettags",
      "type": "Miscellaneous"
    },
    {
      "name": "SyncManager.register",
      "path": "syncmanager/register",
      "type": "Miscellaneous"
    },
    {
      "name": "TaskAttributionTiming",
      "path": "taskattributiontiming",
      "type": "Performance"
    },
    {
      "name": "TaskAttributionTiming.containerId",
      "path": "taskattributiontiming/containerid",
      "type": "Performance"
    },
    {
      "name": "TaskAttributionTiming.containerName",
      "path": "taskattributiontiming/containername",
      "type": "Performance"
    },
    {
      "name": "TaskAttributionTiming.containerSrc",
      "path": "taskattributiontiming/containersrc",
      "type": "Performance"
    },
    {
      "name": "TaskAttributionTiming.containerType",
      "path": "taskattributiontiming/containertype",
      "type": "Performance"
    },
    { "name": "Text", "path": "text", "type": "Nodes" },
    {
      "name": "Text.assignedSlot",
      "path": "text/assignedslot",
      "type": "Nodes"
    },
    { "name": "Text.constructor", "path": "text/text", "type": "Nodes" },
    {
      "name": "Text.isElementContentWhitespace",
      "path": "text/iselementcontentwhitespace",
      "type": "Nodes"
    },
    {
      "name": "Text.replaceWholeText",
      "path": "text/replacewholetext",
      "type": "Nodes"
    },
    { "name": "Text.splitText", "path": "text/splittext", "type": "Nodes" },
    { "name": "Text.wholeText", "path": "text/wholetext", "type": "Nodes" },
    { "name": "TextDecoder", "path": "textdecoder", "type": "Encoding" },
    {
      "name": "TextDecoder.constructor",
      "path": "textdecoder/textdecoder",
      "type": "Encoding"
    },
    {
      "name": "TextDecoder.decode",
      "path": "textdecoder/decode",
      "type": "Encoding"
    },
    {
      "name": "TextDecoder.encoding",
      "path": "textdecoder/encoding",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream",
      "path": "textdecoderstream",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream.constructor",
      "path": "textdecoderstream/textdecoderstream",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream.encoding",
      "path": "textdecoderstream/encoding",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream.fatal",
      "path": "textdecoderstream/fatal",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream.ignoreBOM",
      "path": "textdecoderstream/ignorebom",
      "type": "Encoding"
    },
    {
      "name": "TextDecoderStream.readable",
      "path": "textdecoderstream/readable",
      "type": "Media Streams"
    },
    {
      "name": "TextDecoderStream.writable",
      "path": "textdecoderstream/writable",
      "type": "Media Streams"
    },
    { "name": "TextEncoder", "path": "textencoder", "type": "Encoding" },
    {
      "name": "TextEncoder.constructor",
      "path": "textencoder/textencoder",
      "type": "Encoding"
    },
    {
      "name": "TextEncoder.encode",
      "path": "textencoder/encode",
      "type": "Encoding"
    },
    {
      "name": "TextEncoder.encodeInto",
      "path": "textencoder/encodeinto",
      "type": "Encoding"
    },
    {
      "name": "TextEncoder.encoding",
      "path": "textencoder/encoding",
      "type": "Encoding"
    },
    {
      "name": "TextEncoderStream",
      "path": "textencoderstream",
      "type": "Encoding"
    },
    {
      "name": "TextEncoderStream.constructor",
      "path": "textencoderstream/textencoderstream",
      "type": "Encoding"
    },
    {
      "name": "TextEncoderStream.encoding",
      "path": "textencoderstream/encoding",
      "type": "Encoding"
    },
    {
      "name": "TextEncoderStream.readable",
      "path": "textencoderstream/readable",
      "type": "Media Streams"
    },
    {
      "name": "TextEncoderStream.writable",
      "path": "textencoderstream/writable",
      "type": "Media Streams"
    },
    { "name": "TextMetrics", "path": "textmetrics", "type": "Canvas" },
    {
      "name": "TextMetrics.actualBoundingBoxAscent",
      "path": "textmetrics/actualboundingboxascent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.actualBoundingBoxDescent",
      "path": "textmetrics/actualboundingboxdescent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.actualBoundingBoxLeft",
      "path": "textmetrics/actualboundingboxleft",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.actualBoundingBoxRight",
      "path": "textmetrics/actualboundingboxright",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.alphabeticBaseline",
      "path": "textmetrics/alphabeticbaseline",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.emHeightAscent",
      "path": "textmetrics/emheightascent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.emHeightDescent",
      "path": "textmetrics/emheightdescent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.fontBoundingBoxAscent",
      "path": "textmetrics/fontboundingboxascent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.fontBoundingBoxDescent",
      "path": "textmetrics/fontboundingboxdescent",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.hangingBaseline",
      "path": "textmetrics/hangingbaseline",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.ideographicBaseline",
      "path": "textmetrics/ideographicbaseline",
      "type": "Canvas"
    },
    {
      "name": "TextMetrics.width",
      "path": "textmetrics/width",
      "type": "Canvas"
    },
    { "name": "TextRange", "path": "textrange", "type": "Miscellaneous" },
    { "name": "TextTrack", "path": "texttrack", "type": "WebVTT" },
    {
      "name": "TextTrack.cuechange event",
      "path": "texttrack/cuechange_event",
      "type": "WebVTT"
    },
    { "name": "TextTrack.mode", "path": "texttrack/mode", "type": "WebVTT" },
    { "name": "TextTrackCue", "path": "texttrackcue", "type": "WebVTT" },
    {
      "name": "TextTrackCueList",
      "path": "texttrackcuelist",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackCueList.getCueById",
      "path": "texttrackcuelist/getcuebyid",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackCueList.length",
      "path": "texttrackcuelist/length",
      "type": "WebVTT"
    },
    { "name": "TextTrackList", "path": "texttracklist", "type": "WebVTT" },
    {
      "name": "TextTrackList.addtrack event",
      "path": "texttracklist/addtrack_event",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.change event",
      "path": "texttracklist/change_event",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.getTrackById",
      "path": "texttracklist/gettrackbyid",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.length",
      "path": "texttracklist/length",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.onaddtrack",
      "path": "texttracklist/onaddtrack",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.onchange",
      "path": "texttracklist/onchange",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.onremovetrack",
      "path": "texttracklist/onremovetrack",
      "type": "WebVTT"
    },
    {
      "name": "TextTrackList.removeTrack event",
      "path": "texttracklist/removetrack_event",
      "type": "WebVTT"
    },
    { "name": "TimeEvent", "path": "timeevent", "type": "Events" },
    { "name": "TimeRanges", "path": "timeranges", "type": "Media" },
    { "name": "TimeRanges.end", "path": "timeranges/end", "type": "Media" },
    {
      "name": "TimeRanges.length",
      "path": "timeranges/length",
      "type": "Media"
    },
    { "name": "TimeRanges.start", "path": "timeranges/start", "type": "Media" },
    { "name": "Touch", "path": "touch", "type": "Touch Events" },
    { "name": "Touch events", "path": "touch_events", "type": "Touch Events" },
    {
      "name": "Touch events.Mozilla experimental events",
      "path": "touch_events/mozilla_experimental_events",
      "type": "Touch Events"
    },
    {
      "name": "Touch events.Multi-touch interaction",
      "path": "touch_events/multi-touch_interaction",
      "type": "Touch Events"
    },
    {
      "name": "Touch events.Supporting both TouchEvent and MouseEvent",
      "path": "touch_events/supporting_both_touchevent_and_mouseevent",
      "type": "Touch Events"
    },
    {
      "name": "Touch events.Using Touch Events",
      "path": "touch_events/using_touch_events",
      "type": "Touch Events"
    },
    {
      "name": "Touch.clientX",
      "path": "touch/clientx",
      "type": "Touch Events"
    },
    {
      "name": "Touch.clientY",
      "path": "touch/clienty",
      "type": "Touch Events"
    },
    {
      "name": "Touch.constructor",
      "path": "touch/touch",
      "type": "Touch Events"
    },
    { "name": "Touch.force", "path": "touch/force", "type": "Touch Events" },
    {
      "name": "Touch.identifier",
      "path": "touch/identifier",
      "type": "Touch Events"
    },
    {
      "name": "Touch.MsManipulationViewsEnabled",
      "path": "touch/msmanipulationviewsenabled",
      "type": "Touch Events"
    },
    { "name": "Touch.pageX", "path": "touch/pagex", "type": "Touch Events" },
    { "name": "Touch.pageY", "path": "touch/pagey", "type": "Touch Events" },
    {
      "name": "Touch.radiusX",
      "path": "touch/radiusx",
      "type": "Touch Events"
    },
    {
      "name": "Touch.radiusY",
      "path": "touch/radiusy",
      "type": "Touch Events"
    },
    {
      "name": "Touch.rotationAngle",
      "path": "touch/rotationangle",
      "type": "Touch Events"
    },
    {
      "name": "Touch.screenX",
      "path": "touch/screenx",
      "type": "Touch Events"
    },
    {
      "name": "Touch.screenY",
      "path": "touch/screeny",
      "type": "Touch Events"
    },
    { "name": "Touch.target", "path": "touch/target", "type": "Touch Events" },
    { "name": "TouchEvent", "path": "touchevent", "type": "Touch Events" },
    {
      "name": "TouchEvent.altKey",
      "path": "touchevent/altkey",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.changedTouches",
      "path": "touchevent/changedtouches",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.constructor",
      "path": "touchevent/touchevent",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.ctrlKey",
      "path": "touchevent/ctrlkey",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.metaKey",
      "path": "touchevent/metakey",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.shiftKey",
      "path": "touchevent/shiftkey",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.targetTouches",
      "path": "touchevent/targettouches",
      "type": "Touch Events"
    },
    {
      "name": "TouchEvent.touches",
      "path": "touchevent/touches",
      "type": "Touch Events"
    },
    { "name": "TouchList", "path": "touchlist", "type": "Touch Events" },
    {
      "name": "TouchList.identifiedTouch",
      "path": "touchlist/identifiedtouch",
      "type": "Touch Events"
    },
    {
      "name": "TouchList.item",
      "path": "touchlist/item",
      "type": "Touch Events"
    },
    {
      "name": "TouchList.length",
      "path": "touchlist/length",
      "type": "Touch Events"
    },
    { "name": "TrackDefault", "path": "trackdefault", "type": "Miscellaneous" },
    {
      "name": "TrackDefault.byteStreamTrackID",
      "path": "trackdefault/bytestreamtrackid",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefault.constructor",
      "path": "trackdefault/trackdefault",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefault.kinds",
      "path": "trackdefault/kinds",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefault.label",
      "path": "trackdefault/label",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefault.language",
      "path": "trackdefault/language",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefault.type",
      "path": "trackdefault/type",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefaultList",
      "path": "trackdefaultlist",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefaultList.constructor",
      "path": "trackdefaultlist/trackdefaultlist",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefaultList.length",
      "path": "trackdefaultlist/length",
      "type": "Miscellaneous"
    },
    {
      "name": "TrackDefaultList.TrackDefault",
      "path": "trackdefaultlist/trackdefault",
      "type": "Miscellaneous"
    },
    { "name": "TrackEvent", "path": "trackevent", "type": "Events" },
    {
      "name": "TrackEvent.constructor",
      "path": "trackevent/trackevent",
      "type": "Events"
    },
    {
      "name": "TrackEvent.track",
      "path": "trackevent/track",
      "type": "Events"
    },
    { "name": "Transferable", "path": "transferable", "type": "Miscellaneous" },
    {
      "name": "TransformStream",
      "path": "transformstream",
      "type": "Media Streams"
    },
    { "name": "TransitionEvent", "path": "transitionevent", "type": "Events" },
    {
      "name": "TransitionEvent.animationName",
      "path": "transitionevent/animationname",
      "type": "Events"
    },
    {
      "name": "TransitionEvent.constructor",
      "path": "transitionevent/transitionevent",
      "type": "Events"
    },
    {
      "name": "TransitionEvent.elapsedTime",
      "path": "transitionevent/elapsedtime",
      "type": "Events"
    },
    {
      "name": "TransitionEvent.initTransitionEvent",
      "path": "transitionevent/inittransitionevent",
      "type": "Events"
    },
    {
      "name": "TransitionEvent.pseudoElement",
      "path": "transitionevent/pseudoelement",
      "type": "Events"
    },
    { "name": "TreeWalker", "path": "treewalker", "type": "TreeWalker" },
    {
      "name": "TreeWalker.currentNode",
      "path": "treewalker/currentnode",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.expandEntityReferences",
      "path": "treewalker/expandentityreferences",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.filter",
      "path": "treewalker/filter",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.firstChild",
      "path": "treewalker/firstchild",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.lastChild",
      "path": "treewalker/lastchild",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.nextNode",
      "path": "treewalker/nextnode",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.nextSibling",
      "path": "treewalker/nextsibling",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.parentNode",
      "path": "treewalker/parentnode",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.previousNode",
      "path": "treewalker/previousnode",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.previousSibling",
      "path": "treewalker/previoussibling",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.root",
      "path": "treewalker/root",
      "type": "TreeWalker"
    },
    {
      "name": "TreeWalker.whatToShow",
      "path": "treewalker/whattoshow",
      "type": "TreeWalker"
    },
    {
      "name": "Trusted Types API",
      "path": "trusted_types_api",
      "type": "Miscellaneous"
    },
    { "name": "TrustedHTML", "path": "trustedhtml", "type": "Miscellaneous" },
    {
      "name": "TrustedHTML.toJSON",
      "path": "trustedhtml/tojson",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedHTML.toString",
      "path": "trustedhtml/tostring",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScript",
      "path": "trustedscript",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScript.toJSON",
      "path": "trustedscript/tojson",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScript.toString",
      "path": "trustedscript/tostring",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScriptURL",
      "path": "trustedscripturl",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScriptURL.toJSON",
      "path": "trustedscripturl/tojson",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedScriptURL.toString",
      "path": "trustedscripturl/tostring",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicy",
      "path": "trustedtypepolicy",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicy.createHTML",
      "path": "trustedtypepolicy/createhtml",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicy.createScript",
      "path": "trustedtypepolicy/createscript",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicy.createScriptURL",
      "path": "trustedtypepolicy/createscripturl",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicy.name",
      "path": "trustedtypepolicy/name",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory",
      "path": "trustedtypepolicyfactory",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.createPolicy",
      "path": "trustedtypepolicyfactory/createpolicy",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.defaultPolicy",
      "path": "trustedtypepolicyfactory/defaultpolicy",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.emptyHTML",
      "path": "trustedtypepolicyfactory/emptyhtml",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.emptyScript",
      "path": "trustedtypepolicyfactory/emptyscript",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.getAttributeType",
      "path": "trustedtypepolicyfactory/getattributetype",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.getPropertyType",
      "path": "trustedtypepolicyfactory/getpropertytype",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.isHTML",
      "path": "trustedtypepolicyfactory/ishtml",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.isScript",
      "path": "trustedtypepolicyfactory/isscript",
      "type": "Miscellaneous"
    },
    {
      "name": "TrustedTypePolicyFactory.isScriptURL",
      "path": "trustedtypepolicyfactory/isscripturl",
      "type": "Miscellaneous"
    },
    { "name": "TypeInfo", "path": "typeinfo", "type": "Miscellaneous" },
    {
      "name": "UDP Socket API",
      "path": "udp_socket_api",
      "type": "Miscellaneous"
    },
    { "name": "UIEvent", "path": "uievent", "type": "Events" },
    {
      "name": "UIEvent.cancelBubble",
      "path": "uievent/cancelbubble",
      "type": "Events"
    },
    {
      "name": "UIEvent.constructor",
      "path": "uievent/uievent",
      "type": "Events"
    },
    { "name": "UIEvent.detail", "path": "uievent/detail", "type": "Events" },
    {
      "name": "UIEvent.initUIEvent",
      "path": "uievent/inituievent",
      "type": "Events"
    },
    { "name": "UIEvent.isChar", "path": "uievent/ischar", "type": "Events" },
    { "name": "UIEvent.layerX", "path": "uievent/layerx", "type": "Events" },
    { "name": "UIEvent.layerY", "path": "uievent/layery", "type": "Events" },
    { "name": "UIEvent.pageX", "path": "uievent/pagex", "type": "Events" },
    { "name": "UIEvent.pageY", "path": "uievent/pagey", "type": "Events" },
    {
      "name": "UIEvent.sourceCapabilities",
      "path": "uievent/sourcecapabilities",
      "type": "Events"
    },
    { "name": "UIEvent.view", "path": "uievent/view", "type": "Events" },
    { "name": "ULongRange", "path": "ulongrange", "type": "Media" },
    { "name": "URL", "path": "url", "type": "URL" },
    { "name": "URL API", "path": "url_api", "type": "URL" },
    { "name": "URL.constructor", "path": "url/url", "type": "URL" },
    {
      "name": "URL.createObjectURL",
      "path": "url/createobjecturl",
      "type": "URL"
    },
    { "name": "URL.hash", "path": "url/hash", "type": "URL" },
    { "name": "URL.host", "path": "url/host", "type": "URL" },
    { "name": "URL.hostname", "path": "url/hostname", "type": "URL" },
    { "name": "URL.href", "path": "url/href", "type": "URL" },
    { "name": "URL.origin", "path": "url/origin", "type": "URL" },
    { "name": "URL.password", "path": "url/password", "type": "URL" },
    { "name": "URL.pathname", "path": "url/pathname", "type": "URL" },
    { "name": "URL.port", "path": "url/port", "type": "URL" },
    { "name": "URL.protocol", "path": "url/protocol", "type": "URL" },
    {
      "name": "URL.revokeObjectURL",
      "path": "url/revokeobjecturl",
      "type": "URL"
    },
    { "name": "URL.search", "path": "url/search", "type": "URL" },
    { "name": "URL.searchParams", "path": "url/searchparams", "type": "URL" },
    { "name": "URL.toJSON", "path": "url/tojson", "type": "URL" },
    { "name": "URL.toString", "path": "url/tostring", "type": "URL" },
    { "name": "URL.username", "path": "url/username", "type": "URL" },
    { "name": "URLSearchParams", "path": "urlsearchparams", "type": "URL" },
    {
      "name": "URLSearchParams.append",
      "path": "urlsearchparams/append",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.constructor",
      "path": "urlsearchparams/urlsearchparams",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.delete",
      "path": "urlsearchparams/delete",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.entries",
      "path": "urlsearchparams/entries",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.forEach",
      "path": "urlsearchparams/foreach",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.get",
      "path": "urlsearchparams/get",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.getAll",
      "path": "urlsearchparams/getall",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.has",
      "path": "urlsearchparams/has",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.keys",
      "path": "urlsearchparams/keys",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.set",
      "path": "urlsearchparams/set",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.sort",
      "path": "urlsearchparams/sort",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.toString",
      "path": "urlsearchparams/tostring",
      "type": "URL"
    },
    {
      "name": "URLSearchParams.values",
      "path": "urlsearchparams/values",
      "type": "URL"
    },
    { "name": "URLUtilsReadOnly", "path": "urlutilsreadonly", "type": "URL" },
    {
      "name": "URLUtilsReadOnly.hash",
      "path": "urlutilsreadonly/hash",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.host",
      "path": "urlutilsreadonly/host",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.hostname",
      "path": "urlutilsreadonly/hostname",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.href",
      "path": "urlutilsreadonly/href",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.origin",
      "path": "urlutilsreadonly/origin",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.pathname",
      "path": "urlutilsreadonly/pathname",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.port",
      "path": "urlutilsreadonly/port",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.protocol",
      "path": "urlutilsreadonly/protocol",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.search",
      "path": "urlutilsreadonly/search",
      "type": "URL"
    },
    {
      "name": "URLUtilsReadOnly.toString",
      "path": "urlutilsreadonly/tostring",
      "type": "URL"
    },
    { "name": "USB", "path": "usb", "type": "WebUSB" },
    { "name": "USB.getDevices", "path": "usb/getdevices", "type": "WebUSB" },
    { "name": "USB.onconnect", "path": "usb/onconnect", "type": "WebUSB" },
    {
      "name": "USB.ondisconnect",
      "path": "usb/ondisconnect",
      "type": "WebUSB"
    },
    {
      "name": "USB.requestDevice",
      "path": "usb/requestdevice",
      "type": "WebUSB"
    },
    {
      "name": "USBAlternateInterface",
      "path": "usbalternateinterface",
      "type": "WebUSB"
    },
    {
      "name": "USBConfiguration",
      "path": "usbconfiguration",
      "type": "WebUSB"
    },
    {
      "name": "USBConfiguration.configurationName",
      "path": "usbconfiguration/configurationname",
      "type": "WebUSB"
    },
    {
      "name": "USBConfiguration.configurationValue",
      "path": "usbconfiguration/configurationvalue",
      "type": "WebUSB"
    },
    {
      "name": "USBConfiguration.constructor",
      "path": "usbconfiguration/usbconfiguration",
      "type": "WebUSB"
    },
    {
      "name": "USBConfiguration.interfaces",
      "path": "usbconfiguration/interfaces",
      "type": "WebUSB"
    },
    { "name": "USBDevice", "path": "usbdevice", "type": "WebUSB" },
    {
      "name": "USBDevice.claimInterface",
      "path": "usbdevice/claiminterface",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.clearHalt",
      "path": "usbdevice/clearhalt",
      "type": "WebUSB"
    },
    { "name": "USBDevice.close", "path": "usbdevice/close", "type": "WebUSB" },
    {
      "name": "USBDevice.configuration",
      "path": "usbdevice/configuration",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.configurations",
      "path": "usbdevice/configurations",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.controlTransferIn",
      "path": "usbdevice/controltransferin",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.controlTransferOut",
      "path": "usbdevice/controltransferout",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceClass",
      "path": "usbdevice/deviceclass",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceProtocol",
      "path": "usbdevice/deviceprotocol",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceSubclass",
      "path": "usbdevice/devicesubclass",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceVersionMajor",
      "path": "usbdevice/deviceversionmajor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceVersionMinor",
      "path": "usbdevice/deviceversionminor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.deviceVersionSubminor",
      "path": "usbdevice/deviceversionsubminor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.isochronousTransferIn",
      "path": "usbdevice/isochronoustransferin",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.isochronousTransferOut",
      "path": "usbdevice/isochronoustransferout",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.manufacturerName",
      "path": "usbdevice/manufacturername",
      "type": "WebUSB"
    },
    { "name": "USBDevice.open", "path": "usbdevice/open", "type": "WebUSB" },
    {
      "name": "USBDevice.opened",
      "path": "usbdevice/opened",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.productID",
      "path": "usbdevice/productid",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.productName",
      "path": "usbdevice/productname",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.releaseInterface",
      "path": "usbdevice/releaseinterface",
      "type": "WebUSB"
    },
    { "name": "USBDevice.reset", "path": "usbdevice/reset", "type": "WebUSB" },
    {
      "name": "USBDevice.selectAlternateInterface",
      "path": "usbdevice/selectalternateinterface",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.selectConfiguration",
      "path": "usbdevice/selectconfiguration",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.serialNumber",
      "path": "usbdevice/serialnumber",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.transferIn",
      "path": "usbdevice/transferin",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.transferOut",
      "path": "usbdevice/transferout",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.usbVersionMajor",
      "path": "usbdevice/usbversionmajor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.usbVersionMinor",
      "path": "usbdevice/usbversionminor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.usbVersionSubminor",
      "path": "usbdevice/usbversionsubminor",
      "type": "WebUSB"
    },
    {
      "name": "USBDevice.vendorID",
      "path": "usbdevice/vendorid",
      "type": "WebUSB"
    },
    { "name": "USBEndpoint", "path": "usbendpoint", "type": "WebUSB" },
    { "name": "USBInterface", "path": "usbinterface", "type": "WebUSB" },
    {
      "name": "USBInTransferResult",
      "path": "usbintransferresult",
      "type": "WebUSB"
    },
    {
      "name": "USBIsochronousInTransferPacket",
      "path": "usbisochronousintransferpacket",
      "type": "WebUSB"
    },
    {
      "name": "USBIsochronousInTransferResult",
      "path": "usbisochronousintransferresult",
      "type": "WebUSB"
    },
    {
      "name": "USBIsochronousOutTransferPacket",
      "path": "usbisochronousouttransferpacket",
      "type": "WebUSB"
    },
    {
      "name": "USBIsochronousOutTransferResult",
      "path": "usbisochronousouttransferresult",
      "type": "WebUSB"
    },
    {
      "name": "USBOutTransferResult",
      "path": "usbouttransferresult",
      "type": "WebUSB"
    },
    {
      "name": "User Timing API",
      "path": "user_timing_api",
      "type": "Performance"
    },
    {
      "name": "User Timing API: Using the User Timing API",
      "path": "user_timing_api/using_the_user_timing_api",
      "type": "Performance"
    },
    {
      "name": "UserDataHandler",
      "path": "userdatahandler",
      "type": "Miscellaneous"
    },
    {
      "name": "UserProximityEvent",
      "path": "userproximityevent",
      "type": "Events"
    },
    {
      "name": "Using dynamic styling information",
      "path": "css_object_model/using_dynamic_styling_information",
      "type": "Miscellaneous"
    },
    { "name": "USVString", "path": "usvstring", "type": "Miscellaneous" },
    {
      "name": "ValidityState",
      "path": "validitystate",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.badInput",
      "path": "validitystate/badinput",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.patternMismatch",
      "path": "validitystate/patternmismatch",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.rangeOverflow",
      "path": "validitystate/rangeoverflow",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.rangeUnderflow",
      "path": "validitystate/rangeunderflow",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.stepMismatch",
      "path": "validitystate/stepmismatch",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.tooLong",
      "path": "validitystate/toolong",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.tooShort",
      "path": "validitystate/tooshort",
      "type": "Miscellaneous"
    },
    {
      "name": "ValidityState.typeMismatch",
      "path": "validitystate/typemismatch",
      "type": "Miscellaneous"
    },
    {
      "name": "vertexAttribDivisorANGLE",
      "path": "angle_instanced_arrays/vertexattribdivisorangle",
      "type": "WebGL"
    },
    {
      "name": "Vibration API",
      "path": "vibration_api",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoConfiguration",
      "path": "videoconfiguration",
      "type": "Media"
    },
    {
      "name": "VideoPlaybackQuality",
      "path": "videoplaybackquality",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoPlaybackQuality.corruptedVideoFrames",
      "path": "videoplaybackquality/corruptedvideoframes",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoPlaybackQuality.creationTime",
      "path": "videoplaybackquality/creationtime",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoPlaybackQuality.droppedVideoFrames",
      "path": "videoplaybackquality/droppedvideoframes",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoPlaybackQuality.totalFrameDelay",
      "path": "videoplaybackquality/totalframedelay",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoPlaybackQuality.totalVideoFrames",
      "path": "videoplaybackquality/totalvideoframes",
      "type": "Miscellaneous"
    },
    { "name": "VideoTrack", "path": "videotrack", "type": "Miscellaneous" },
    {
      "name": "VideoTrack.id",
      "path": "videotrack/id",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrack.kind",
      "path": "videotrack/kind",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrack.label",
      "path": "videotrack/label",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrack.language",
      "path": "videotrack/language",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrack.selected",
      "path": "videotrack/selected",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrack.sourceBuffer",
      "path": "videotrack/sourcebuffer",
      "type": "Media"
    },
    {
      "name": "VideoTrackList",
      "path": "videotracklist",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.addtrack event",
      "path": "videotracklist/addtrack_event",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.change event",
      "path": "videotracklist/change_event",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.getTrackById",
      "path": "videotracklist/gettrackbyid",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.length",
      "path": "videotracklist/length",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.onaddtrack",
      "path": "videotracklist/onaddtrack",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.onchange",
      "path": "videotracklist/onchange",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.onremovetrack",
      "path": "videotracklist/onremovetrack",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.removetrack event",
      "path": "videotracklist/removetrack_event",
      "type": "Miscellaneous"
    },
    {
      "name": "VideoTrackList.selectedIndex",
      "path": "videotracklist/selectedindex",
      "type": "Miscellaneous"
    },
    {
      "name": "Visual Viewport API",
      "path": "visual_viewport_api",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport",
      "path": "visualviewport",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.height",
      "path": "visualviewport/height",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.offsetleft",
      "path": "visualviewport/offsetleft",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.offsetTop",
      "path": "visualviewport/offsettop",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.onresize",
      "path": "visualviewport/onresize",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.onscroll",
      "path": "visualviewport/onscroll",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.pageLeft",
      "path": "visualviewport/pageleft",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.pageTop",
      "path": "visualviewport/pagetop",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.resize event",
      "path": "visualviewport/resize_event",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.scale",
      "path": "visualviewport/scale",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.scroll event",
      "path": "visualviewport/scroll_event",
      "type": "Visual Viewport"
    },
    {
      "name": "VisualViewport.width",
      "path": "visualviewport/width",
      "type": "Visual Viewport"
    },
    { "name": "VRDisplay", "path": "vrdisplay", "type": "WebVR" },
    {
      "name": "VRDisplay.cancelAnimationFrame",
      "path": "vrdisplay/cancelanimationframe",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.capabilities",
      "path": "vrdisplay/capabilities",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.depthFar",
      "path": "vrdisplay/depthfar",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.depthNear",
      "path": "vrdisplay/depthnear",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.displayId",
      "path": "vrdisplay/displayid",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.displayName",
      "path": "vrdisplay/displayname",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.exitPresent",
      "path": "vrdisplay/exitpresent",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.getEyeParameters",
      "path": "vrdisplay/geteyeparameters",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.getFrameData",
      "path": "vrdisplay/getframedata",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.getImmediatePose",
      "path": "vrdisplay/getimmediatepose",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.getLayers",
      "path": "vrdisplay/getlayers",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.getPose",
      "path": "vrdisplay/getpose",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.hardwareUnitId",
      "path": "vrdisplay/hardwareunitid",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.isConnected",
      "path": "vrdisplay/isconnected",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.isPresenting",
      "path": "vrdisplay/ispresenting",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.requestAnimationFrame",
      "path": "vrdisplay/requestanimationframe",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.requestPresent",
      "path": "vrdisplay/requestpresent",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.resetPose",
      "path": "vrdisplay/resetpose",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.stageParameters",
      "path": "vrdisplay/stageparameters",
      "type": "WebVR"
    },
    {
      "name": "VRDisplay.submitFrame",
      "path": "vrdisplay/submitframe",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities",
      "path": "vrdisplaycapabilities",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities.canPresent",
      "path": "vrdisplaycapabilities/canpresent",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities.hasExternalDisplay",
      "path": "vrdisplaycapabilities/hasexternaldisplay",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities.hasOrientation",
      "path": "vrdisplaycapabilities/hasorientation",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities.hasPosition",
      "path": "vrdisplaycapabilities/hasposition",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayCapabilities.maxLayers",
      "path": "vrdisplaycapabilities/maxlayers",
      "type": "WebVR"
    },
    { "name": "VRDisplayEvent", "path": "vrdisplayevent", "type": "WebVR" },
    {
      "name": "VRDisplayEvent.constructor",
      "path": "vrdisplayevent/vrdisplayevent",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayEvent.display",
      "path": "vrdisplayevent/display",
      "type": "WebVR"
    },
    {
      "name": "VRDisplayEvent.reason",
      "path": "vrdisplayevent/reason",
      "type": "WebVR"
    },
    { "name": "VREyeParameters", "path": "vreyeparameters", "type": "WebVR" },
    {
      "name": "VREyeParameters.fieldOfView",
      "path": "vreyeparameters/fieldofview",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.maximumFieldOfView",
      "path": "vreyeparameters/maximumfieldofview",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.minimumFieldOfView",
      "path": "vreyeparameters/minimumfieldofview",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.offset",
      "path": "vreyeparameters/offset",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.recommendedFieldOfView",
      "path": "vreyeparameters/recommendedfieldofview",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.renderHeight",
      "path": "vreyeparameters/renderheight",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.renderRect",
      "path": "vreyeparameters/renderrect",
      "type": "WebVR"
    },
    {
      "name": "VREyeParameters.renderWidth",
      "path": "vreyeparameters/renderwidth",
      "type": "WebVR"
    },
    { "name": "VRFieldOfView", "path": "vrfieldofview", "type": "WebVR" },
    {
      "name": "VRFieldOfView.constructor",
      "path": "vrfieldofview/vrfieldofview",
      "type": "WebVR"
    },
    {
      "name": "VRFieldOfView.downDegrees",
      "path": "vrfieldofview/downdegrees",
      "type": "WebVR"
    },
    {
      "name": "VRFieldOfView.leftDegrees",
      "path": "vrfieldofview/leftdegrees",
      "type": "WebVR"
    },
    {
      "name": "VRFieldOfView.rightDegrees",
      "path": "vrfieldofview/rightdegrees",
      "type": "WebVR"
    },
    {
      "name": "VRFieldOfView.upDegrees",
      "path": "vrfieldofview/updegrees",
      "type": "WebVR"
    },
    { "name": "VRFrameData", "path": "vrframedata", "type": "WebVR" },
    {
      "name": "VRFrameData.constructor",
      "path": "vrframedata/vrframedata",
      "type": "WebVR"
    },
    {
      "name": "VRFrameData.leftProjectionMatrix",
      "path": "vrframedata/leftprojectionmatrix",
      "type": "WebVR"
    },
    {
      "name": "VRFrameData.leftViewMatrix",
      "path": "vrframedata/leftviewmatrix",
      "type": "WebVR"
    },
    { "name": "VRFrameData.pose", "path": "vrframedata/pose", "type": "WebVR" },
    {
      "name": "VRFrameData.rightProjectionMatrix",
      "path": "vrframedata/rightprojectionmatrix",
      "type": "WebVR"
    },
    {
      "name": "VRFrameData.rightViewMatrix",
      "path": "vrframedata/rightviewmatrix",
      "type": "WebVR"
    },
    {
      "name": "VRFrameData.timestamp",
      "path": "vrframedata/timestamp",
      "type": "WebVR"
    },
    { "name": "VRLayerInit", "path": "vrlayerinit", "type": "WebVR" },
    {
      "name": "VRLayerInit.leftBounds",
      "path": "vrlayerinit/leftbounds",
      "type": "WebVR"
    },
    {
      "name": "VRLayerInit.rightBounds",
      "path": "vrlayerinit/rightbounds",
      "type": "WebVR"
    },
    {
      "name": "VRLayerInit.source",
      "path": "vrlayerinit/source",
      "type": "WebVR"
    },
    { "name": "VRPose", "path": "vrpose", "type": "WebVR" },
    {
      "name": "VRPose.angularAcceleration",
      "path": "vrpose/angularacceleration",
      "type": "WebVR"
    },
    {
      "name": "VRPose.angularVelocity",
      "path": "vrpose/angularvelocity",
      "type": "WebVR"
    },
    {
      "name": "VRPose.hasOrientation",
      "path": "vrpose/hasorientation",
      "type": "WebVR"
    },
    {
      "name": "VRPose.hasPosition",
      "path": "vrpose/hasposition",
      "type": "WebVR"
    },
    {
      "name": "VRPose.linearAcceleration",
      "path": "vrpose/linearacceleration",
      "type": "WebVR"
    },
    {
      "name": "VRPose.linearVelocity",
      "path": "vrpose/linearvelocity",
      "type": "WebVR"
    },
    {
      "name": "VRPose.orientation",
      "path": "vrpose/orientation",
      "type": "WebVR"
    },
    { "name": "VRPose.position", "path": "vrpose/position", "type": "WebVR" },
    { "name": "VRPose.timeStamp", "path": "vrpose/timestamp", "type": "WebVR" },
    {
      "name": "VRStageParameters",
      "path": "vrstageparameters",
      "type": "WebVR"
    },
    {
      "name": "VRStageParameters.sittingToStandingTransform",
      "path": "vrstageparameters/sittingtostandingtransform",
      "type": "WebVR"
    },
    {
      "name": "VRStageParameters.sizeX",
      "path": "vrstageparameters/sizex",
      "type": "WebVR"
    },
    {
      "name": "VRStageParameters.sizeY",
      "path": "vrstageparameters/sizey",
      "type": "WebVR"
    },
    { "name": "VTTCue", "path": "vttcue", "type": "WebVTT" },
    { "name": "VTTCue.constructor", "path": "vttcue/vttcue", "type": "WebVTT" },
    { "name": "VTTRegion", "path": "vttregion", "type": "WebVTT" },
    { "name": "WakeLock", "path": "wakelock", "type": "Miscellaneous" },
    {
      "name": "WakeLock.request",
      "path": "wakelock/request",
      "type": "Miscellaneous"
    },
    {
      "name": "WakeLockSentinel",
      "path": "wakelocksentinel",
      "type": "Miscellaneous"
    },
    {
      "name": "WakeLockSentinel.onrelease",
      "path": "wakelocksentinel/onrelease",
      "type": "Miscellaneous"
    },
    {
      "name": "WakeLockSentinel.release",
      "path": "wakelocksentinel/release",
      "type": "Miscellaneous"
    },
    {
      "name": "WakeLockSentinel.released",
      "path": "wakelocksentinel/released",
      "type": "Miscellaneous"
    },
    {
      "name": "WakeLockSentinel.type",
      "path": "wakelocksentinel/type",
      "type": "Miscellaneous"
    },
    { "name": "WaveShaperNode", "path": "waveshapernode", "type": "Audio" },
    {
      "name": "WaveShaperNode.constructor",
      "path": "waveshapernode/waveshapernode",
      "type": "Audio"
    },
    {
      "name": "WaveShaperNode.curve",
      "path": "waveshapernode/curve",
      "type": "Audio"
    },
    {
      "name": "WaveShaperNode.oversample",
      "path": "waveshapernode/oversample",
      "type": "Audio"
    },
    {
      "name": "Web Animations API",
      "path": "web_animations_api",
      "type": "Animation"
    },
    {
      "name": "Web Animations API: Keyframe Formats",
      "path": "web_animations_api/keyframe_formats",
      "type": "Animation"
    },
    {
      "name": "Web Animations API: Using the Web Animations API",
      "path": "web_animations_api/using_the_web_animations_api",
      "type": "Animation"
    },
    {
      "name": "Web Animations API: Web Animations API Concepts",
      "path": "web_animations_api/web_animations_api_concepts",
      "type": "Animation"
    },
    { "name": "Web Audio API", "path": "web_audio_api", "type": "Audio" },
    {
      "name": "Web Audio API: Advanced techniques",
      "path": "web_audio_api/advanced_techniques",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Basic concepts behind Web Audio API",
      "path": "web_audio_api/basic_concepts_behind_web_audio_api",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Best practices",
      "path": "web_audio_api/best_practices",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Controlling multiple parameters with ConstantSourceNode",
      "path": "web_audio_api/controlling_multiple_parameters_with_constantsourcenode",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Migrating from webkitAudioContext",
      "path": "web_audio_api/migrating_from_webkitaudiocontext",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Simple synth",
      "path": "web_audio_api/simple_synth",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Tools",
      "path": "web_audio_api/tools",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Using AudioWorklet",
      "path": "web_audio_api/using_audioworklet",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Using IIR filters",
      "path": "web_audio_api/using_iir_filters",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Using Web Audio API",
      "path": "web_audio_api/using_web_audio_api",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Visualizations with Web Audio API",
      "path": "web_audio_api/visualizations_with_web_audio_api",
      "type": "Audio"
    },
    {
      "name": "Web Audio API: Web audio spatialization basics",
      "path": "web_audio_api/web_audio_spatialization_basics",
      "type": "Audio"
    },
    {
      "name": "Web Authentication API",
      "path": "web_authentication_api",
      "type": "Credential Management"
    },
    {
      "name": "Web Authentication API: Attestation and Assertion",
      "path": "web_authentication_api/attestation_and_assertion",
      "type": "Miscellaneous"
    },
    {
      "name": "Web Bluetooth API",
      "path": "web_bluetooth_api",
      "type": "Miscellaneous"
    },
    { "name": "Web Budget API", "path": "web_budget_api", "type": "Budget" },
    {
      "name": "Web Crypto API",
      "path": "web_crypto_api",
      "type": "Cryptography"
    },
    { "name": "Web Locks API", "path": "web_locks_api", "type": "Locks" },
    { "name": "Web NFC API", "path": "web_nfc_api", "type": "Miscellaneous" },
    {
      "name": "Web Periodic Background Synchronization API",
      "path": "web_periodic_background_synchronization_api",
      "type": "Miscellaneous"
    },
    { "name": "Web Speech API", "path": "web_speech_api", "type": "Speech" },
    {
      "name": "Web Speech API: Using the Web Speech API",
      "path": "web_speech_api/using_the_web_speech_api",
      "type": "Speech"
    },
    { "name": "Web Storage API", "path": "web_storage_api", "type": "Storage" },
    {
      "name": "Web Storage API: Using the Web Storage API",
      "path": "web_storage_api/using_the_web_storage_api",
      "type": "Storage"
    },
    {
      "name": "Web Workers API",
      "path": "web_workers_api",
      "type": "Web Workers"
    },
    {
      "name": "Web Workers API: Functions and classes available to workers",
      "path": "web_workers_api/functions_and_classes_available_to_workers",
      "type": "Web Workers"
    },
    {
      "name": "Web Workers API: Structured clone algorithm",
      "path": "web_workers_api/structured_clone_algorithm",
      "type": "Web Workers"
    },
    {
      "name": "Web Workers API: Using web workers",
      "path": "web_workers_api/using_web_workers",
      "type": "Web Workers"
    },
    { "name": "WebGL API", "path": "webgl_api", "type": "WebGL" },
    {
      "name": "WebGL API: Adding 2D content to a WebGL context",
      "path": "webgl_api/tutorial/adding_2d_content_to_a_webgl_context",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Animating objects with WebGL",
      "path": "webgl_api/tutorial/animating_objects_with_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Animating textures in WebGL",
      "path": "webgl_api/tutorial/animating_textures_in_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Basic 2D animation example",
      "path": "webgl_api/basic_2d_animation_example",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example",
      "path": "webgl_api/by_example",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Basic scissoring",
      "path": "webgl_api/by_example/basic_scissoring",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Boilerplate 1",
      "path": "webgl_api/by_example/boilerplate_1",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Canvas size and WebGL",
      "path": "webgl_api/by_example/canvas_size_and_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Clearing by clicking",
      "path": "webgl_api/by_example/clearing_by_clicking",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Clearing with colors",
      "path": "webgl_api/by_example/clearing_with_colors",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Color masking",
      "path": "webgl_api/by_example/color_masking",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Detect WebGL",
      "path": "webgl_api/by_example/detect_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Hello GLSL",
      "path": "webgl_api/by_example/hello_glsl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Hello vertex attributes",
      "path": "webgl_api/by_example/hello_vertex_attributes",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Raining rectangles",
      "path": "webgl_api/by_example/raining_rectangles",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Scissor animation",
      "path": "webgl_api/by_example/scissor_animation",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Simple color animation",
      "path": "webgl_api/by_example/simple_color_animation",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Textures from code",
      "path": "webgl_api/by_example/textures_from_code",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: By example.Video textures",
      "path": "webgl_api/by_example/video_textures",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Compressed texture formats",
      "path": "webgl_api/compressed_texture_formats",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Constants",
      "path": "webgl_api/constants",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Creating 3D objects using WebGL",
      "path": "webgl_api/tutorial/creating_3d_objects_using_webgl",
      "type": "WebGL"
    },
    { "name": "WebGL API: Data", "path": "webgl_api/data", "type": "WebGL" },
    {
      "name": "WebGL API: Getting started with WebGL",
      "path": "webgl_api/tutorial/getting_started_with_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Lighting in WebGL",
      "path": "webgl_api/tutorial/lighting_in_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Matrix math for the web",
      "path": "webgl_api/matrix_math_for_the_web",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Tutorial",
      "path": "webgl_api/tutorial",
      "type": "WebGL"
    },
    { "name": "WebGL API: Types", "path": "webgl_api/types", "type": "WebGL" },
    {
      "name": "WebGL API: Using Extensions",
      "path": "webgl_api/using_extensions",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Using shaders to apply color in WebGL",
      "path": "webgl_api/tutorial/using_shaders_to_apply_color_in_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: Using textures in WebGL",
      "path": "webgl_api/tutorial/using_textures_in_webgl",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: WebGL best practices",
      "path": "webgl_api/webgl_best_practices",
      "type": "WebGL"
    },
    {
      "name": "WebGL API: WebGL model view projection",
      "path": "webgl_api/webgl_model_view_projection",
      "type": "WebGL"
    },
    {
      "name": "WEBGL color buffer float",
      "path": "webgl_color_buffer_float",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture astc",
      "path": "webgl_compressed_texture_astc",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture atc",
      "path": "webgl_compressed_texture_atc",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture etc",
      "path": "webgl_compressed_texture_etc",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture etc1",
      "path": "webgl_compressed_texture_etc1",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture pvrtc",
      "path": "webgl_compressed_texture_pvrtc",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture s3tc",
      "path": "webgl_compressed_texture_s3tc",
      "type": "WebGL"
    },
    {
      "name": "WEBGL compressed texture s3tc srgb",
      "path": "webgl_compressed_texture_s3tc_srgb",
      "type": "WebGL"
    },
    {
      "name": "WEBGL debug renderer info",
      "path": "webgl_debug_renderer_info",
      "type": "WebGL"
    },
    {
      "name": "WEBGL debug shaders",
      "path": "webgl_debug_shaders",
      "type": "WebGL"
    },
    {
      "name": "WEBGL depth texture",
      "path": "webgl_depth_texture",
      "type": "WebGL"
    },
    {
      "name": "WEBGL draw buffers",
      "path": "webgl_draw_buffers",
      "type": "WebGL"
    },
    {
      "name": "WEBGL lose context",
      "path": "webgl_lose_context",
      "type": "WebGL"
    },
    { "name": "WEBGL multi draw", "path": "webgl_multi_draw", "type": "WebGL" },
    {
      "name": "WebGL2RenderingContext",
      "path": "webgl2renderingcontext",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.beginQuery",
      "path": "webgl2renderingcontext/beginquery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.beginTransformFeedback",
      "path": "webgl2renderingcontext/begintransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.bindBufferBase",
      "path": "webgl2renderingcontext/bindbufferbase",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.bindBufferRange",
      "path": "webgl2renderingcontext/bindbufferrange",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.bindSampler",
      "path": "webgl2renderingcontext/bindsampler",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.bindTransformFeedback",
      "path": "webgl2renderingcontext/bindtransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.bindVertexArray",
      "path": "webgl2renderingcontext/bindvertexarray",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.blitFramebuffer",
      "path": "webgl2renderingcontext/blitframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.clearBuffer",
      "path": "webgl2renderingcontext/clearbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.clientWaitSync",
      "path": "webgl2renderingcontext/clientwaitsync",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.compressedTexSubImage3D",
      "path": "webgl2renderingcontext/compressedtexsubimage3d",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.copyBufferSubData",
      "path": "webgl2renderingcontext/copybuffersubdata",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.copyTexSubImage3D",
      "path": "webgl2renderingcontext/copytexsubimage3d",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.createQuery",
      "path": "webgl2renderingcontext/createquery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.createSampler",
      "path": "webgl2renderingcontext/createsampler",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.createTransformFeedback",
      "path": "webgl2renderingcontext/createtransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.createVertexArray",
      "path": "webgl2renderingcontext/createvertexarray",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.deleteQuery",
      "path": "webgl2renderingcontext/deletequery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.deleteSampler",
      "path": "webgl2renderingcontext/deletesampler",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.deleteSync",
      "path": "webgl2renderingcontext/deletesync",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.deleteTransformFeedback",
      "path": "webgl2renderingcontext/deletetransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.deleteVertexArray",
      "path": "webgl2renderingcontext/deletevertexarray",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.drawArraysInstanced",
      "path": "webgl2renderingcontext/drawarraysinstanced",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.drawBuffers",
      "path": "webgl2renderingcontext/drawbuffers",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.drawElementsInstanced",
      "path": "webgl2renderingcontext/drawelementsinstanced",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.drawRangeElements",
      "path": "webgl2renderingcontext/drawrangeelements",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.endQuery",
      "path": "webgl2renderingcontext/endquery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.endTransformFeedback",
      "path": "webgl2renderingcontext/endtransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.fenceSync",
      "path": "webgl2renderingcontext/fencesync",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.framebufferTextureLayer",
      "path": "webgl2renderingcontext/framebuffertexturelayer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getActiveUniformBlockName",
      "path": "webgl2renderingcontext/getactiveuniformblockname",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getActiveUniformBlockParameter",
      "path": "webgl2renderingcontext/getactiveuniformblockparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getActiveUniforms",
      "path": "webgl2renderingcontext/getactiveuniforms",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getBufferSubData",
      "path": "webgl2renderingcontext/getbuffersubdata",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getFragDataLocation",
      "path": "webgl2renderingcontext/getfragdatalocation",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getIndexedParameter",
      "path": "webgl2renderingcontext/getindexedparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getInternalformatParameter",
      "path": "webgl2renderingcontext/getinternalformatparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getQuery",
      "path": "webgl2renderingcontext/getquery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getQueryParameter",
      "path": "webgl2renderingcontext/getqueryparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getSamplerParameter",
      "path": "webgl2renderingcontext/getsamplerparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getSyncParameter",
      "path": "webgl2renderingcontext/getsyncparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getTransformFeedbackVarying",
      "path": "webgl2renderingcontext/gettransformfeedbackvarying",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getUniformBlockIndex",
      "path": "webgl2renderingcontext/getuniformblockindex",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.getUniformIndices",
      "path": "webgl2renderingcontext/getuniformindices",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.invalidateFramebuffer",
      "path": "webgl2renderingcontext/invalidateframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.invalidateSubFramebuffer",
      "path": "webgl2renderingcontext/invalidatesubframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.isQuery",
      "path": "webgl2renderingcontext/isquery",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.isSampler",
      "path": "webgl2renderingcontext/issampler",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.isSync",
      "path": "webgl2renderingcontext/issync",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.isTransformFeedback",
      "path": "webgl2renderingcontext/istransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.isVertexArray",
      "path": "webgl2renderingcontext/isvertexarray",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.pauseTransformFeedback",
      "path": "webgl2renderingcontext/pausetransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.readBuffer",
      "path": "webgl2renderingcontext/readbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.renderbufferStorageMultisample",
      "path": "webgl2renderingcontext/renderbufferstoragemultisample",
      "type": "Storage"
    },
    {
      "name": "WebGL2RenderingContext.resumeTransformFeedback",
      "path": "webgl2renderingcontext/resumetransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.samplerParameter",
      "path": "webgl2renderingcontext/samplerparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.texImage3D",
      "path": "webgl2renderingcontext/teximage3d",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.texStorage2D",
      "path": "webgl2renderingcontext/texstorage2d",
      "type": "Storage"
    },
    {
      "name": "WebGL2RenderingContext.texStorage3D",
      "path": "webgl2renderingcontext/texstorage3d",
      "type": "Storage"
    },
    {
      "name": "WebGL2RenderingContext.texSubImage3D",
      "path": "webgl2renderingcontext/texsubimage3d",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.transformFeedbackVaryings",
      "path": "webgl2renderingcontext/transformfeedbackvaryings",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.uniform",
      "path": "webgl2renderingcontext/uniform",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.uniformBlockBinding",
      "path": "webgl2renderingcontext/uniformblockbinding",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.uniformMatrix",
      "path": "webgl2renderingcontext/uniformmatrix",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.vertexAttribDivisor",
      "path": "webgl2renderingcontext/vertexattribdivisor",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.vertexAttribI",
      "path": "webgl2renderingcontext/vertexattribi",
      "type": "WebGL"
    },
    {
      "name": "WebGL2RenderingContext.vertexAttribIPointer",
      "path": "webgl2renderingcontext/vertexattribipointer",
      "type": "Pointer Events"
    },
    {
      "name": "WebGL2RenderingContext.waitSync",
      "path": "webgl2renderingcontext/waitsync",
      "type": "WebGL"
    },
    { "name": "WebGLActiveInfo", "path": "webglactiveinfo", "type": "WebGL" },
    {
      "name": "WebGLActiveInfo.name",
      "path": "webglactiveinfo/name",
      "type": "WebGL"
    },
    {
      "name": "WebGLActiveInfo.size",
      "path": "webglactiveinfo/size",
      "type": "WebGL"
    },
    {
      "name": "WebGLActiveInfo.type",
      "path": "webglactiveinfo/type",
      "type": "WebGL"
    },
    { "name": "WebGLBuffer", "path": "webglbuffer", "type": "WebGL" },
    {
      "name": "WebGLContextEvent",
      "path": "webglcontextevent",
      "type": "WebGL"
    },
    {
      "name": "WebGLContextEvent.statusMessage",
      "path": "webglcontextevent/statusmessage",
      "type": "WebGL"
    },
    { "name": "WebGLFramebuffer", "path": "webglframebuffer", "type": "WebGL" },
    { "name": "WebGLProgram", "path": "webglprogram", "type": "WebGL" },
    { "name": "WebGLQuery", "path": "webglquery", "type": "WebGL" },
    {
      "name": "WebGLRenderbuffer",
      "path": "webglrenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext",
      "path": "webglrenderingcontext",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.activeTexture",
      "path": "webglrenderingcontext/activetexture",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.attachShader",
      "path": "webglrenderingcontext/attachshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bindAttribLocation",
      "path": "webglrenderingcontext/bindattriblocation",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bindBuffer",
      "path": "webglrenderingcontext/bindbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bindFramebuffer",
      "path": "webglrenderingcontext/bindframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bindRenderbuffer",
      "path": "webglrenderingcontext/bindrenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bindTexture",
      "path": "webglrenderingcontext/bindtexture",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.blendColor",
      "path": "webglrenderingcontext/blendcolor",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.blendEquation",
      "path": "webglrenderingcontext/blendequation",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.blendEquationSeparate",
      "path": "webglrenderingcontext/blendequationseparate",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.blendFunc",
      "path": "webglrenderingcontext/blendfunc",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.blendFuncSeparate",
      "path": "webglrenderingcontext/blendfuncseparate",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bufferData",
      "path": "webglrenderingcontext/bufferdata",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.bufferSubData",
      "path": "webglrenderingcontext/buffersubdata",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.canvas",
      "path": "webglrenderingcontext/canvas",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.checkFramebufferStatus",
      "path": "webglrenderingcontext/checkframebufferstatus",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.clear",
      "path": "webglrenderingcontext/clear",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.clearColor",
      "path": "webglrenderingcontext/clearcolor",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.clearDepth",
      "path": "webglrenderingcontext/cleardepth",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.clearStencil",
      "path": "webglrenderingcontext/clearstencil",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.colorMask",
      "path": "webglrenderingcontext/colormask",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.commit",
      "path": "webglrenderingcontext/commit",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.compileShader",
      "path": "webglrenderingcontext/compileshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.compressedTexImage2D",
      "path": "webglrenderingcontext/compressedteximage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.compressedTexSubImage2D",
      "path": "webglrenderingcontext/compressedtexsubimage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.copyTexImage2D",
      "path": "webglrenderingcontext/copyteximage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.copyTexSubImage2D",
      "path": "webglrenderingcontext/copytexsubimage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createBuffer",
      "path": "webglrenderingcontext/createbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createFramebuffer",
      "path": "webglrenderingcontext/createframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createProgram",
      "path": "webglrenderingcontext/createprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createRenderbuffer",
      "path": "webglrenderingcontext/createrenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createShader",
      "path": "webglrenderingcontext/createshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.createTexture",
      "path": "webglrenderingcontext/createtexture",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.cullFace",
      "path": "webglrenderingcontext/cullface",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteBuffer",
      "path": "webglrenderingcontext/deletebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteFramebuffer",
      "path": "webglrenderingcontext/deleteframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteProgram",
      "path": "webglrenderingcontext/deleteprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteRenderbuffer",
      "path": "webglrenderingcontext/deleterenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteShader",
      "path": "webglrenderingcontext/deleteshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.deleteTexture",
      "path": "webglrenderingcontext/deletetexture",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.depthFunc",
      "path": "webglrenderingcontext/depthfunc",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.depthMask",
      "path": "webglrenderingcontext/depthmask",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.depthRange",
      "path": "webglrenderingcontext/depthrange",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.detachShader",
      "path": "webglrenderingcontext/detachshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.disable",
      "path": "webglrenderingcontext/disable",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.disableVertexAttribArray",
      "path": "webglrenderingcontext/disablevertexattribarray",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.drawArrays",
      "path": "webglrenderingcontext/drawarrays",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.drawElements",
      "path": "webglrenderingcontext/drawelements",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.drawingBufferHeight",
      "path": "webglrenderingcontext/drawingbufferheight",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.drawingBufferWidth",
      "path": "webglrenderingcontext/drawingbufferwidth",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.enable",
      "path": "webglrenderingcontext/enable",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.enableVertexAttribArray",
      "path": "webglrenderingcontext/enablevertexattribarray",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.finish",
      "path": "webglrenderingcontext/finish",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.flush",
      "path": "webglrenderingcontext/flush",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.framebufferRenderbuffer",
      "path": "webglrenderingcontext/framebufferrenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.framebufferTexture2D",
      "path": "webglrenderingcontext/framebuffertexture2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.frontFace",
      "path": "webglrenderingcontext/frontface",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.generateMipmap",
      "path": "webglrenderingcontext/generatemipmap",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getActiveAttrib",
      "path": "webglrenderingcontext/getactiveattrib",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getActiveUniform",
      "path": "webglrenderingcontext/getactiveuniform",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getAttachedShaders",
      "path": "webglrenderingcontext/getattachedshaders",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getAttribLocation",
      "path": "webglrenderingcontext/getattriblocation",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getBufferParameter",
      "path": "webglrenderingcontext/getbufferparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getContextAttributes",
      "path": "webglrenderingcontext/getcontextattributes",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getError",
      "path": "webglrenderingcontext/geterror",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getExtension",
      "path": "webglrenderingcontext/getextension",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getFramebufferAttachmentParameter",
      "path": "webglrenderingcontext/getframebufferattachmentparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getParameter",
      "path": "webglrenderingcontext/getparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getProgramInfoLog",
      "path": "webglrenderingcontext/getprograminfolog",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getProgramParameter",
      "path": "webglrenderingcontext/getprogramparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getRenderbufferParameter",
      "path": "webglrenderingcontext/getrenderbufferparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getShaderInfoLog",
      "path": "webglrenderingcontext/getshaderinfolog",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getShaderParameter",
      "path": "webglrenderingcontext/getshaderparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getShaderPrecisionFormat",
      "path": "webglrenderingcontext/getshaderprecisionformat",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getShaderSource",
      "path": "webglrenderingcontext/getshadersource",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getSupportedExtensions",
      "path": "webglrenderingcontext/getsupportedextensions",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getTexParameter",
      "path": "webglrenderingcontext/gettexparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getUniform",
      "path": "webglrenderingcontext/getuniform",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getUniformLocation",
      "path": "webglrenderingcontext/getuniformlocation",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getVertexAttrib",
      "path": "webglrenderingcontext/getvertexattrib",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.getVertexAttribOffset",
      "path": "webglrenderingcontext/getvertexattriboffset",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.hint",
      "path": "webglrenderingcontext/hint",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isBuffer",
      "path": "webglrenderingcontext/isbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isContextLost",
      "path": "webglrenderingcontext/iscontextlost",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isEnabled",
      "path": "webglrenderingcontext/isenabled",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isFramebuffer",
      "path": "webglrenderingcontext/isframebuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isProgram",
      "path": "webglrenderingcontext/isprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isRenderbuffer",
      "path": "webglrenderingcontext/isrenderbuffer",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isShader",
      "path": "webglrenderingcontext/isshader",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.isTexture",
      "path": "webglrenderingcontext/istexture",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.lineWidth",
      "path": "webglrenderingcontext/linewidth",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.linkProgram",
      "path": "webglrenderingcontext/linkprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.makeXRCompatible",
      "path": "webglrenderingcontext/makexrcompatible",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.pixelStorei",
      "path": "webglrenderingcontext/pixelstorei",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.polygonOffset",
      "path": "webglrenderingcontext/polygonoffset",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.readPixels",
      "path": "webglrenderingcontext/readpixels",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.renderbufferStorage",
      "path": "webglrenderingcontext/renderbufferstorage",
      "type": "Storage"
    },
    {
      "name": "WebGLRenderingContext.sampleCoverage",
      "path": "webglrenderingcontext/samplecoverage",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.scissor",
      "path": "webglrenderingcontext/scissor",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.shaderSource",
      "path": "webglrenderingcontext/shadersource",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilFunc",
      "path": "webglrenderingcontext/stencilfunc",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilFuncSeparate",
      "path": "webglrenderingcontext/stencilfuncseparate",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilMask",
      "path": "webglrenderingcontext/stencilmask",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilMaskSeparate",
      "path": "webglrenderingcontext/stencilmaskseparate",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilOp",
      "path": "webglrenderingcontext/stencilop",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.stencilOpSeparate",
      "path": "webglrenderingcontext/stencilopseparate",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.texImage2D",
      "path": "webglrenderingcontext/teximage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.texParameter",
      "path": "webglrenderingcontext/texparameter",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.texSubImage2D",
      "path": "webglrenderingcontext/texsubimage2d",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.uniform",
      "path": "webglrenderingcontext/uniform",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.uniformMatrix",
      "path": "webglrenderingcontext/uniformmatrix",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.useProgram",
      "path": "webglrenderingcontext/useprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.validateProgram",
      "path": "webglrenderingcontext/validateprogram",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.vertexAttrib",
      "path": "webglrenderingcontext/vertexattrib",
      "type": "WebGL"
    },
    {
      "name": "WebGLRenderingContext.vertexAttribPointer",
      "path": "webglrenderingcontext/vertexattribpointer",
      "type": "Pointer Events"
    },
    {
      "name": "WebGLRenderingContext.viewport",
      "path": "webglrenderingcontext/viewport",
      "type": "WebGL"
    },
    { "name": "WebGLSampler", "path": "webglsampler", "type": "WebGL" },
    { "name": "WebGLShader", "path": "webglshader", "type": "WebGL" },
    {
      "name": "WebGLShaderPrecisionFormat",
      "path": "webglshaderprecisionformat",
      "type": "WebGL"
    },
    {
      "name": "WebGLShaderPrecisionFormat.precision",
      "path": "webglshaderprecisionformat/precision",
      "type": "WebGL"
    },
    {
      "name": "WebGLShaderPrecisionFormat.rangeMax",
      "path": "webglshaderprecisionformat/rangemax",
      "type": "WebGL"
    },
    {
      "name": "WebGLShaderPrecisionFormat.rangeMin",
      "path": "webglshaderprecisionformat/rangemin",
      "type": "WebGL"
    },
    { "name": "WebGLSync", "path": "webglsync", "type": "WebGL" },
    { "name": "WebGLTexture", "path": "webgltexture", "type": "WebGL" },
    {
      "name": "WebGLTransformFeedback",
      "path": "webgltransformfeedback",
      "type": "WebGL"
    },
    {
      "name": "WebGLUniformLocation",
      "path": "webgluniformlocation",
      "type": "WebGL"
    },
    {
      "name": "WebGLVertexArrayObject",
      "path": "webglvertexarrayobject",
      "type": "WebGL"
    },
    { "name": "WebHID API", "path": "webhid_api", "type": "Miscellaneous" },
    { "name": "WebRTC API", "path": "webrtc_api", "type": "WebRTC" },
    {
      "name": "WebRTC API: adapter.js",
      "path": "webrtc_api/adapter.js",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs",
      "path": "webrtc_api/build_a_phone_with_peerjs",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Build the server",
      "path": "webrtc_api/build_a_phone_with_peerjs/build_the_server",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers.Answer a call",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/answer_a_call",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers.Create a peer connection",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/create_a_peer_connection",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers.Creating a call",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/creating_a_call",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: build a phone with peerjs.connect peers.End a call",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/end_a_call",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers.Get microphone permission",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/get_microphone_permission",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Connect peers.Show hide html",
      "path": "webrtc_api/build_a_phone_with_peerjs/connect_peers/show_hide_html",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Deployment and further reading",
      "path": "webrtc_api/build_a_phone_with_peerjs/deployment_and_further_reading",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Build a phone with peerjs.Setup",
      "path": "webrtc_api/build_a_phone_with_peerjs/setup",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Coding guide",
      "path": "webrtc_api/coding_guide",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Connectivity",
      "path": "webrtc_api/connectivity",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: High-level guide",
      "path": "webrtc_api/high-level_guide",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Intro to RTP",
      "path": "webrtc_api/intro_to_rtp",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Perfect negotiation",
      "path": "webrtc_api/perfect_negotiation",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Protocols",
      "path": "webrtc_api/protocols",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Session lifetime",
      "path": "webrtc_api/session_lifetime",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Signaling and video calling",
      "path": "webrtc_api/signaling_and_video_calling",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Simple RTCDataChannel sample",
      "path": "webrtc_api/simple_rtcdatachannel_sample",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Taking still photos",
      "path": "webrtc_api/taking_still_photos",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Using data channels",
      "path": "webrtc_api/using_data_channels",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC API: Using DTMF",
      "path": "webrtc_api/using_dtmf",
      "type": "WebRTC"
    },
    {
      "name": "WebRTC Statistics API",
      "path": "webrtc_statistics_api",
      "type": "WebRTC"
    },
    { "name": "WebSocket", "path": "websocket", "type": "Web Sockets" },
    {
      "name": "WebSocket.binaryType",
      "path": "websocket/binarytype",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.bufferedAmount",
      "path": "websocket/bufferedamount",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.close",
      "path": "websocket/close",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.close event",
      "path": "websocket/close_event",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.constructor",
      "path": "websocket/websocket",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.error event",
      "path": "websocket/error_event",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.extensions",
      "path": "websocket/extensions",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.message event",
      "path": "websocket/message_event",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.onclose",
      "path": "websocket/onclose",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.onerror",
      "path": "websocket/onerror",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.onmessage",
      "path": "websocket/onmessage",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.onopen",
      "path": "websocket/onopen",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.open event",
      "path": "websocket/open_event",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.protocol",
      "path": "websocket/protocol",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.readyState",
      "path": "websocket/readystate",
      "type": "Web Sockets"
    },
    {
      "name": "WebSocket.send",
      "path": "websocket/send",
      "type": "Web Sockets"
    },
    { "name": "WebSocket.url", "path": "websocket/url", "type": "Web Sockets" },
    {
      "name": "WebSockets API",
      "path": "websockets_api",
      "type": "Web Sockets"
    },
    {
      "name": "WebSockets API: Writing a WebSocket server in Java",
      "path": "websockets_api/writing_a_websocket_server_in_java",
      "type": "Web Sockets"
    },
    {
      "name": "WebSockets API: Writing WebSocket client applications",
      "path": "websockets_api/writing_websocket_client_applications",
      "type": "Web Sockets"
    },
    {
      "name": "WebSockets API: Writing WebSocket server",
      "path": "websockets_api/writing_websocket_server",
      "type": "Web Sockets"
    },
    {
      "name": "WebSockets API: Writing WebSocket servers",
      "path": "websockets_api/writing_websocket_servers",
      "type": "Web Sockets"
    },
    { "name": "WebVR API", "path": "webvr_api", "type": "WebVR" },
    {
      "name": "WebVR API: Concepts",
      "path": "webvr_api/concepts",
      "type": "WebVR"
    },
    {
      "name": "WebVR API: Using the WebVR API",
      "path": "webvr_api/using_the_webvr_api",
      "type": "WebVR"
    },
    {
      "name": "WebVR API: Using VR controllers with WebVR",
      "path": "webvr_api/using_vr_controllers_with_webvr",
      "type": "WebVR"
    },
    { "name": "WebVTT API", "path": "webvtt_api", "type": "WebVTT" },
    {
      "name": "WebXR Device API",
      "path": "webxr_device_api",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Bounded reference spaces",
      "path": "webxr_device_api/bounded_reference_spaces",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Cameras",
      "path": "webxr_device_api/cameras",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Fundamentals",
      "path": "webxr_device_api/fundamentals",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Geometry",
      "path": "webxr_device_api/geometry",
      "type": "Geometry"
    },
    {
      "name": "WebXR Device API: Inputs",
      "path": "webxr_device_api/inputs",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Lifecycle",
      "path": "webxr_device_api/lifecycle",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Lighting",
      "path": "webxr_device_api/lighting",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Movement and motion",
      "path": "webxr_device_api/movement_and_motion",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Performance",
      "path": "webxr_device_api/performance",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Permissions and security",
      "path": "webxr_device_api/permissions_and_security",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Perspective",
      "path": "webxr_device_api/perspective",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Rendering",
      "path": "webxr_device_api/rendering",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Spatial tracking",
      "path": "webxr_device_api/spatial_tracking",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Startup and shutdown",
      "path": "webxr_device_api/startup_and_shutdown",
      "type": "Miscellaneous"
    },
    {
      "name": "WebXR Device API: Targeting",
      "path": "webxr_device_api/targeting",
      "type": "Miscellaneous"
    },
    { "name": "WheelEvent", "path": "wheelevent", "type": "Events" },
    {
      "name": "WheelEvent.constructor",
      "path": "wheelevent/wheelevent",
      "type": "Events"
    },
    {
      "name": "WheelEvent.deltaMode",
      "path": "wheelevent/deltamode",
      "type": "Events"
    },
    {
      "name": "WheelEvent.deltaX",
      "path": "wheelevent/deltax",
      "type": "Events"
    },
    {
      "name": "WheelEvent.deltaY",
      "path": "wheelevent/deltay",
      "type": "Events"
    },
    {
      "name": "WheelEvent.deltaZ",
      "path": "wheelevent/deltaz",
      "type": "Events"
    },
    { "name": "Window", "path": "window", "type": "Window" },
    {
      "name": "Window.afterprint event",
      "path": "window/afterprint_event",
      "type": "Window"
    },
    { "name": "Window.alert", "path": "window/alert", "type": "Window" },
    {
      "name": "Window.animationcancel event",
      "path": "window/animationcancel_event",
      "type": "Window"
    },
    {
      "name": "Window.animationend event",
      "path": "window/animationend_event",
      "type": "Window"
    },
    {
      "name": "Window.animationiteration event",
      "path": "window/animationiteration_event",
      "type": "Window"
    },
    {
      "name": "Window.animationstart event",
      "path": "window/animationstart_event",
      "type": "Window"
    },
    {
      "name": "Window.appinstalled event",
      "path": "window/appinstalled_event",
      "type": "Window"
    },
    {
      "name": "Window.applicationCache",
      "path": "window/applicationcache",
      "type": "Window"
    },
    { "name": "Window.back", "path": "window/back", "type": "Window" },
    {
      "name": "Window.beforeprint event",
      "path": "window/beforeprint_event",
      "type": "Window"
    },
    {
      "name": "Window.beforeunload event",
      "path": "window/beforeunload_event",
      "type": "Window"
    },
    { "name": "Window.blur", "path": "window/blur", "type": "Window" },
    {
      "name": "Window.blur event",
      "path": "window/blur_event",
      "type": "Window"
    },
    {
      "name": "Window.cancelAnimationFrame",
      "path": "window/cancelanimationframe",
      "type": "Window"
    },
    {
      "name": "Window.cancelIdleCallback",
      "path": "window/cancelidlecallback",
      "type": "Window"
    },
    {
      "name": "Window.captureEvents",
      "path": "window/captureevents",
      "type": "Window"
    },
    {
      "name": "Window.clearImmediate",
      "path": "window/clearimmediate",
      "type": "Window"
    },
    { "name": "Window.close", "path": "window/close", "type": "Window" },
    { "name": "Window.closed", "path": "window/closed", "type": "Window" },
    { "name": "Window.confirm", "path": "window/confirm", "type": "Window" },
    { "name": "Window.console", "path": "window/console", "type": "Window" },
    { "name": "Window.content", "path": "window/content", "type": "Window" },
    {
      "name": "Window.controllers",
      "path": "window/controllers",
      "type": "Window"
    },
    {
      "name": "Window.convertPointFromNodeToPage",
      "path": "window/convertpointfromnodetopage",
      "type": "Window"
    },
    {
      "name": "Window.convertPointFromPageToNode",
      "path": "window/convertpointfrompagetonode",
      "type": "Window"
    },
    {
      "name": "Window.copy event",
      "path": "window/copy_event",
      "type": "Window"
    },
    { "name": "Window.crypto", "path": "window/crypto", "type": "Window" },
    {
      "name": "Window.customElements",
      "path": "window/customelements",
      "type": "Window"
    },
    {
      "name": "Window.cut event",
      "path": "window/cut_event",
      "type": "Window"
    },
    {
      "name": "Window.defaultStatus",
      "path": "window/defaultstatus",
      "type": "Window"
    },
    {
      "name": "Window.devicemotion event",
      "path": "window/devicemotion_event",
      "type": "Window"
    },
    {
      "name": "Window.deviceorientation event",
      "path": "window/deviceorientation_event",
      "type": "Window"
    },
    {
      "name": "Window.devicePixelRatio",
      "path": "window/devicepixelratio",
      "type": "Window"
    },
    {
      "name": "Window.dialogArguments",
      "path": "window/dialogarguments",
      "type": "Window"
    },
    {
      "name": "Window.directories",
      "path": "window/directories",
      "type": "Window"
    },
    { "name": "Window.document", "path": "window/document", "type": "Window" },
    {
      "name": "Window.DOMContentLoaded event",
      "path": "window/domcontentloaded_event",
      "type": "Window"
    },
    { "name": "Window.dump", "path": "window/dump", "type": "Window" },
    {
      "name": "Window.error event",
      "path": "window/error_event",
      "type": "Window"
    },
    { "name": "Window.event", "path": "window/event", "type": "Window" },
    { "name": "Window.external", "path": "window/external", "type": "Window" },
    { "name": "Window.find", "path": "window/find", "type": "Window" },
    { "name": "Window.focus", "path": "window/focus", "type": "Window" },
    {
      "name": "Window.focus event",
      "path": "window/focus_event",
      "type": "Window"
    },
    { "name": "Window.forward", "path": "window/forward", "type": "Window" },
    {
      "name": "Window.frameElement",
      "path": "window/frameelement",
      "type": "Window"
    },
    { "name": "Window.frames", "path": "window/frames", "type": "Window" },
    {
      "name": "Window.fullScreen",
      "path": "window/fullscreen",
      "type": "Window"
    },
    {
      "name": "Window.gamepadconnected event",
      "path": "window/gamepadconnected_event",
      "type": "Window"
    },
    {
      "name": "Window.gamepaddisconnected event",
      "path": "window/gamepaddisconnected_event",
      "type": "Window"
    },
    {
      "name": "Window.getComputedStyle",
      "path": "window/getcomputedstyle",
      "type": "Window"
    },
    {
      "name": "window.getDefaultComputedStyle",
      "path": "window/getdefaultcomputedstyle",
      "type": "Window"
    },
    {
      "name": "Window.getSelection",
      "path": "window/getselection",
      "type": "Window"
    },
    {
      "name": "Window.hashchange event",
      "path": "window/hashchange_event",
      "type": "Window"
    },
    { "name": "Window.history", "path": "window/history", "type": "Window" },
    { "name": "Window.home", "path": "window/home", "type": "Window" },
    {
      "name": "Window.innerHeight",
      "path": "window/innerheight",
      "type": "Window"
    },
    {
      "name": "Window.innerWidth",
      "path": "window/innerwidth",
      "type": "Window"
    },
    {
      "name": "Window.isSecureContext",
      "path": "window/issecurecontext",
      "type": "Window"
    },
    {
      "name": "Window.languagechange event",
      "path": "window/languagechange_event",
      "type": "Window"
    },
    { "name": "Window.length", "path": "window/length", "type": "Window" },
    {
      "name": "Window.load event",
      "path": "window/load_event",
      "type": "Window"
    },
    {
      "name": "Window.localStorage",
      "path": "window/localstorage",
      "type": "Window"
    },
    { "name": "Window.location", "path": "window/location", "type": "Window" },
    {
      "name": "Window.locationbar",
      "path": "window/locationbar",
      "type": "Window"
    },
    {
      "name": "Window.matchMedia",
      "path": "window/matchmedia",
      "type": "Window"
    },
    { "name": "Window.menubar", "path": "window/menubar", "type": "Window" },
    {
      "name": "Window.message event",
      "path": "window/message_event",
      "type": "Window"
    },
    {
      "name": "Window.messageerror event",
      "path": "window/messageerror_event",
      "type": "Window"
    },
    { "name": "Window.minimize", "path": "window/minimize", "type": "Window" },
    { "name": "Window.moveBy", "path": "window/moveby", "type": "Window" },
    { "name": "Window.moveTo", "path": "window/moveto", "type": "Window" },
    {
      "name": "Window.mozAnimationStartTime",
      "path": "window/mozanimationstarttime",
      "type": "Window"
    },
    {
      "name": "Window.mozInnerScreenX",
      "path": "window/mozinnerscreenx",
      "type": "Window"
    },
    {
      "name": "Window.mozInnerScreenY",
      "path": "window/mozinnerscreeny",
      "type": "Window"
    },
    {
      "name": "Window.mozPaintCount",
      "path": "window/mozpaintcount",
      "type": "Window"
    },
    { "name": "Window.name", "path": "window/name", "type": "Window" },
    {
      "name": "Window.navigator",
      "path": "window/navigator",
      "type": "Window"
    },
    {
      "name": "Window.offline event",
      "path": "window/offline_event",
      "type": "Window"
    },
    {
      "name": "Window.onappinstalled",
      "path": "window/onappinstalled",
      "type": "Window"
    },
    {
      "name": "Window.onbeforeinstallprompt",
      "path": "window/onbeforeinstallprompt",
      "type": "Window"
    },
    {
      "name": "Window.ondevicemotion",
      "path": "window/ondevicemotion",
      "type": "Window"
    },
    {
      "name": "Window.ondeviceorientation",
      "path": "window/ondeviceorientation",
      "type": "Window"
    },
    {
      "name": "Window.ondeviceorientationabsolute",
      "path": "window/ondeviceorientationabsolute",
      "type": "Window"
    },
    {
      "name": "Window.ondragdrop",
      "path": "window/ondragdrop",
      "type": "Window"
    },
    {
      "name": "Window.ongamepadconnected",
      "path": "window/ongamepadconnected",
      "type": "Window"
    },
    {
      "name": "Window.ongamepaddisconnected",
      "path": "window/ongamepaddisconnected",
      "type": "Window"
    },
    {
      "name": "Window.online event",
      "path": "window/online_event",
      "type": "Window"
    },
    {
      "name": "Window.onmozbeforepaint",
      "path": "window/onmozbeforepaint",
      "type": "Window"
    },
    { "name": "Window.onpaint", "path": "window/onpaint", "type": "Window" },
    {
      "name": "Window.onvrdisplayactivate",
      "path": "window/onvrdisplayactivate",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplayblur",
      "path": "window/onvrdisplayblur",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplayconnect",
      "path": "window/onvrdisplayconnect",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplaydeactivate",
      "path": "window/onvrdisplaydeactivate",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplaydisconnect",
      "path": "window/onvrdisplaydisconnect",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplayfocus",
      "path": "window/onvrdisplayfocus",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplaypointerrestricted",
      "path": "window/onvrdisplaypointerrestricted",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplaypointerunrestricted",
      "path": "window/onvrdisplaypointerunrestricted",
      "type": "Window"
    },
    {
      "name": "Window.onvrdisplaypresentchange",
      "path": "window/onvrdisplaypresentchange",
      "type": "Window"
    },
    { "name": "Window.open", "path": "window/open", "type": "Window" },
    {
      "name": "Window.open.Obsolete features",
      "path": "window/open/obsolete_features",
      "type": "Window"
    },
    {
      "name": "Window.open.Privileged features",
      "path": "window/open/privileged_features",
      "type": "Window"
    },
    {
      "name": "Window.openDialog",
      "path": "window/opendialog",
      "type": "Window"
    },
    { "name": "Window.opener", "path": "window/opener", "type": "Window" },
    {
      "name": "Window.orientation",
      "path": "window/orientation",
      "type": "Window"
    },
    {
      "name": "Window.orientationchange event",
      "path": "window/orientationchange_event",
      "type": "Window"
    },
    {
      "name": "Window.outerHeight",
      "path": "window/outerheight",
      "type": "Window"
    },
    {
      "name": "Window.outerWidth",
      "path": "window/outerwidth",
      "type": "Window"
    },
    {
      "name": "Window.pagehide event",
      "path": "window/pagehide_event",
      "type": "Window"
    },
    {
      "name": "Window.pageshow event",
      "path": "window/pageshow_event",
      "type": "Window"
    },
    {
      "name": "Window.pageXOffset",
      "path": "window/pagexoffset",
      "type": "Window"
    },
    {
      "name": "Window.pageYOffset",
      "path": "window/pageyoffset",
      "type": "Window"
    },
    { "name": "Window.parent", "path": "window/parent", "type": "Window" },
    {
      "name": "Window.paste event",
      "path": "window/paste_event",
      "type": "Window"
    },
    {
      "name": "Window.performance",
      "path": "window/performance",
      "type": "Window"
    },
    {
      "name": "Window.personalbar",
      "path": "window/personalbar",
      "type": "Window"
    },
    { "name": "Window.pkcs11", "path": "window/pkcs11", "type": "Window" },
    {
      "name": "Window.popstate event",
      "path": "window/popstate_event",
      "type": "Window"
    },
    {
      "name": "Window.postMessage",
      "path": "window/postmessage",
      "type": "Window"
    },
    { "name": "Window.print", "path": "window/print", "type": "Window" },
    { "name": "Window.prompt", "path": "window/prompt", "type": "Window" },
    {
      "name": "Window.rejectionhandled event",
      "path": "window/rejectionhandled_event",
      "type": "Window"
    },
    {
      "name": "Window.releaseEvents",
      "path": "window/releaseevents",
      "type": "Window"
    },
    {
      "name": "window.requestAnimationFrame",
      "path": "window/requestanimationframe",
      "type": "Window"
    },
    {
      "name": "Window.requestFileSystem",
      "path": "window/requestfilesystem",
      "type": "Window"
    },
    {
      "name": "Window.requestIdleCallback",
      "path": "window/requestidlecallback",
      "type": "Window"
    },
    {
      "name": "Window.resize event",
      "path": "window/resize_event",
      "type": "Window"
    },
    { "name": "Window.resizeBy", "path": "window/resizeby", "type": "Window" },
    { "name": "Window.resizeTo", "path": "window/resizeto", "type": "Window" },
    {
      "name": "Window.routeEvent",
      "path": "window/routeevent",
      "type": "Window"
    },
    { "name": "Window.screen", "path": "window/screen", "type": "Window" },
    {
      "name": "Window.screenLeft",
      "path": "window/screenleft",
      "type": "Window"
    },
    {
      "name": "Window.screenTop",
      "path": "window/screentop",
      "type": "Window"
    },
    { "name": "Window.screenX", "path": "window/screenx", "type": "Window" },
    { "name": "Window.screenY", "path": "window/screeny", "type": "Window" },
    { "name": "Window.scroll", "path": "window/scroll", "type": "Window" },
    {
      "name": "Window.scrollbars",
      "path": "window/scrollbars",
      "type": "Window"
    },
    { "name": "Window.scrollBy", "path": "window/scrollby", "type": "Window" },
    {
      "name": "Window.scrollByLines",
      "path": "window/scrollbylines",
      "type": "Window"
    },
    {
      "name": "Window.scrollByPages",
      "path": "window/scrollbypages",
      "type": "Window"
    },
    {
      "name": "Window.scrollMaxX",
      "path": "window/scrollmaxx",
      "type": "Window"
    },
    {
      "name": "Window.scrollMaxY",
      "path": "window/scrollmaxy",
      "type": "Window"
    },
    { "name": "Window.scrollTo", "path": "window/scrollto", "type": "Window" },
    { "name": "Window.scrollX", "path": "window/scrollx", "type": "Window" },
    { "name": "Window.scrollY", "path": "window/scrolly", "type": "Window" },
    { "name": "Window.self", "path": "window/self", "type": "Window" },
    {
      "name": "Window.sessionStorage",
      "path": "window/sessionstorage",
      "type": "Window"
    },
    {
      "name": "Window.setCursor",
      "path": "window/setcursor",
      "type": "Window"
    },
    {
      "name": "Window.setImmediate",
      "path": "window/setimmediate",
      "type": "Window"
    },
    {
      "name": "Window.showDirectoryPicker",
      "path": "window/showdirectorypicker",
      "type": "Window"
    },
    {
      "name": "Window.showModalDialog",
      "path": "window/showmodaldialog",
      "type": "Window"
    },
    {
      "name": "Window.showOpenFilePicker",
      "path": "window/showopenfilepicker",
      "type": "Window"
    },
    {
      "name": "Window.showSaveFilePicker",
      "path": "window/showsavefilepicker",
      "type": "Window"
    },
    { "name": "Window.sidebar", "path": "window/sidebar", "type": "Window" },
    {
      "name": "Window.sizeToContent",
      "path": "window/sizetocontent",
      "type": "Window"
    },
    {
      "name": "Window.speechSynthesis",
      "path": "window/speechsynthesis",
      "type": "Window"
    },
    { "name": "Window.status", "path": "window/status", "type": "Window" },
    {
      "name": "Window.statusbar",
      "path": "window/statusbar",
      "type": "Window"
    },
    { "name": "Window.stop", "path": "window/stop", "type": "Window" },
    {
      "name": "Window.storage event",
      "path": "window/storage_event",
      "type": "Window"
    },
    { "name": "Window.toolbar", "path": "window/toolbar", "type": "Window" },
    { "name": "Window.top", "path": "window/top", "type": "Window" },
    {
      "name": "Window.transitioncancel event",
      "path": "window/transitioncancel_event",
      "type": "Window"
    },
    {
      "name": "Window.transitionend event",
      "path": "window/transitionend_event",
      "type": "Window"
    },
    {
      "name": "Window.transitionrun event",
      "path": "window/transitionrun_event",
      "type": "Window"
    },
    {
      "name": "Window.transitionstart event",
      "path": "window/transitionstart_event",
      "type": "Window"
    },
    {
      "name": "Window.unhandledrejection event",
      "path": "window/unhandledrejection_event",
      "type": "Window"
    },
    {
      "name": "Window.unload event",
      "path": "window/unload_event",
      "type": "Window"
    },
    {
      "name": "Window.updateCommands",
      "path": "window/updatecommands",
      "type": "Window"
    },
    {
      "name": "Window.visualViewport",
      "path": "window/visualviewport",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplayactivate event",
      "path": "window/vrdisplayactivate_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplayblur event",
      "path": "window/vrdisplayblur_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplayconnect event",
      "path": "window/vrdisplayconnect_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplaydeactivate event",
      "path": "window/vrdisplaydeactivate_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplaydisconnect event",
      "path": "window/vrdisplaydisconnect_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplayfocus event",
      "path": "window/vrdisplayfocus_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplaypointerrestricted event",
      "path": "window/vrdisplaypointerrestricted_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplaypointerunrestricted event",
      "path": "window/vrdisplaypointerunrestricted_event",
      "type": "Window"
    },
    {
      "name": "Window.vrdisplaypresentchange event",
      "path": "window/vrdisplaypresentchange_event",
      "type": "Window"
    },
    { "name": "Window.window", "path": "window/window", "type": "Window" },
    { "name": "WindowClient", "path": "windowclient", "type": "Window" },
    {
      "name": "WindowClient.focus",
      "path": "windowclient/focus",
      "type": "Window"
    },
    {
      "name": "WindowClient.focused",
      "path": "windowclient/focused",
      "type": "Window"
    },
    {
      "name": "WindowClient.navigate",
      "path": "windowclient/navigate",
      "type": "Window"
    },
    {
      "name": "WindowClient.visibilityState",
      "path": "windowclient/visibilitystate",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers",
      "path": "windoweventhandlers",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onafterprint",
      "path": "windoweventhandlers/onafterprint",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onbeforeprint",
      "path": "windoweventhandlers/onbeforeprint",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onbeforeunload",
      "path": "windoweventhandlers/onbeforeunload",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onhashchange",
      "path": "windoweventhandlers/onhashchange",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onlanguagechange",
      "path": "windoweventhandlers/onlanguagechange",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onmessage",
      "path": "windoweventhandlers/onmessage",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onmessageerror",
      "path": "windoweventhandlers/onmessageerror",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onpopstate",
      "path": "windoweventhandlers/onpopstate",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onrejectionhandled",
      "path": "windoweventhandlers/onrejectionhandled",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onstorage",
      "path": "windoweventhandlers/onstorage",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onunhandledrejection",
      "path": "windoweventhandlers/onunhandledrejection",
      "type": "Window"
    },
    {
      "name": "WindowEventHandlers.onunload",
      "path": "windoweventhandlers/onunload",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope",
      "path": "windoworworkerglobalscope",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.atob",
      "path": "windoworworkerglobalscope/atob",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.btoa",
      "path": "windoworworkerglobalscope/btoa",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.caches",
      "path": "windoworworkerglobalscope/caches",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.clearInterval",
      "path": "windoworworkerglobalscope/clearinterval",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.clearTimeout",
      "path": "windoworworkerglobalscope/cleartimeout",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.createImageBitmap",
      "path": "windoworworkerglobalscope/createimagebitmap",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.crossOriginIsolated",
      "path": "windoworworkerglobalscope/crossoriginisolated",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.fetch",
      "path": "windoworworkerglobalscope/fetch",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.indexedDB",
      "path": "windoworworkerglobalscope/indexeddb",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.isSecureContext",
      "path": "windoworworkerglobalscope/issecurecontext",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.origin",
      "path": "windoworworkerglobalscope/origin",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.queueMicrotask",
      "path": "windoworworkerglobalscope/queuemicrotask",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.setInterval",
      "path": "windoworworkerglobalscope/setinterval",
      "type": "Window"
    },
    {
      "name": "WindowOrWorkerGlobalScope.setTimeout",
      "path": "windoworworkerglobalscope/settimeout",
      "type": "Window"
    },
    { "name": "Worker", "path": "worker", "type": "Web Workers" },
    {
      "name": "Worker.constructor",
      "path": "worker/worker",
      "type": "Web Workers"
    },
    {
      "name": "Worker.message event",
      "path": "worker/message_event",
      "type": "Web Workers"
    },
    {
      "name": "Worker.messageerror event",
      "path": "worker/messageerror_event",
      "type": "Web Workers"
    },
    {
      "name": "Worker.onmessage",
      "path": "worker/onmessage",
      "type": "Web Workers"
    },
    {
      "name": "Worker.onmessageerror",
      "path": "worker/onmessageerror",
      "type": "Web Workers"
    },
    {
      "name": "Worker.postMessage",
      "path": "worker/postmessage",
      "type": "Web Workers"
    },
    {
      "name": "Worker.terminate",
      "path": "worker/terminate",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope",
      "path": "workerglobalscope",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.close",
      "path": "workerglobalscope/close",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.console",
      "path": "workerglobalscope/console",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.dump",
      "path": "workerglobalscope/dump",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.importScripts",
      "path": "workerglobalscope/importscripts",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.languagechange event",
      "path": "workerglobalscope/languagechange_event",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.location",
      "path": "workerglobalscope/location",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.navigator",
      "path": "workerglobalscope/navigator",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.onclose",
      "path": "workerglobalscope/onclose",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.onerror",
      "path": "workerglobalscope/onerror",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.onlanguagechange",
      "path": "workerglobalscope/onlanguagechange",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.onoffline",
      "path": "workerglobalscope/onoffline",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.ononline",
      "path": "workerglobalscope/ononline",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.performance",
      "path": "workerglobalscope/performance",
      "type": "Web Workers"
    },
    {
      "name": "WorkerGlobalScope.self",
      "path": "workerglobalscope/self",
      "type": "Web Workers"
    },
    {
      "name": "WorkerLocation",
      "path": "workerlocation",
      "type": "Web Workers"
    },
    {
      "name": "WorkerNavigator",
      "path": "workernavigator",
      "type": "Web Workers"
    },
    {
      "name": "WorkerNavigator.connection",
      "path": "workernavigator/connection",
      "type": "Web Workers"
    },
    {
      "name": "WorkerNavigator.locks",
      "path": "workernavigator/locks",
      "type": "Web Workers"
    },
    {
      "name": "WorkerNavigator.permissions",
      "path": "workernavigator/permissions",
      "type": "Web Workers"
    },
    {
      "name": "WorkerNavigator.serial",
      "path": "workernavigator/serial",
      "type": "Web Workers"
    },
    { "name": "Worklet", "path": "worklet", "type": "Audio" },
    {
      "name": "Worklet.addModule",
      "path": "worklet/addmodule",
      "type": "Miscellaneous"
    },
    {
      "name": "WritableStream",
      "path": "writablestream",
      "type": "Media Streams"
    },
    {
      "name": "WritableStream.abort",
      "path": "writablestream/abort",
      "type": "Media Streams"
    },
    {
      "name": "WritableStream.constructor",
      "path": "writablestream/writablestream",
      "type": "Media Streams"
    },
    {
      "name": "WritableStream.getWriter",
      "path": "writablestream/getwriter",
      "type": "Media Streams"
    },
    {
      "name": "WritableStream.locked",
      "path": "writablestream/locked",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultController",
      "path": "writablestreamdefaultcontroller",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultController.error",
      "path": "writablestreamdefaultcontroller/error",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter",
      "path": "writablestreamdefaultwriter",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.abort",
      "path": "writablestreamdefaultwriter/abort",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.close",
      "path": "writablestreamdefaultwriter/close",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.closed",
      "path": "writablestreamdefaultwriter/closed",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.constructor",
      "path": "writablestreamdefaultwriter/writablestreamdefaultwriter",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.desiredSize",
      "path": "writablestreamdefaultwriter/desiredsize",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.ready",
      "path": "writablestreamdefaultwriter/ready",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.releaseLock",
      "path": "writablestreamdefaultwriter/releaselock",
      "type": "Media Streams"
    },
    {
      "name": "WritableStreamDefaultWriter.write",
      "path": "writablestreamdefaultwriter/write",
      "type": "Media Streams"
    },
    {
      "name": "XDomainRequest",
      "path": "xdomainrequest",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.abort",
      "path": "xdomainrequest/abort",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.onerror",
      "path": "xdomainrequest/onerror",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.onload",
      "path": "xdomainrequest/onload",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.onprogress",
      "path": "xdomainrequest/onprogress",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.ontimeout",
      "path": "xdomainrequest/ontimeout",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.open",
      "path": "xdomainrequest/open",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.responseText",
      "path": "xdomainrequest/responsetext",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.send",
      "path": "xdomainrequest/send",
      "type": "Miscellaneous"
    },
    {
      "name": "XDomainRequest.timeout",
      "path": "xdomainrequest/timeout",
      "type": "Miscellaneous"
    },
    { "name": "XMLDocument", "path": "xmldocument", "type": "Miscellaneous" },
    {
      "name": "XMLDocument.async",
      "path": "xmldocument/async",
      "type": "Miscellaneous"
    },
    {
      "name": "XMLDocument.load",
      "path": "xmldocument/load",
      "type": "Miscellaneous"
    },
    {
      "name": "XMLHttpRequest",
      "path": "xmlhttprequest",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest",
      "path": "xmlhttprequest/xmlhttprequest",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.abort",
      "path": "xmlhttprequest/abort",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.abort event",
      "path": "xmlhttprequest/abort_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.channel",
      "path": "xmlhttprequest/channel",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.error event",
      "path": "xmlhttprequest/error_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.getAllResponseHeaders",
      "path": "xmlhttprequest/getallresponseheaders",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.getResponseHeader",
      "path": "xmlhttprequest/getresponseheader",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.How to check the secruity state of an XMLHTTPRequest over SSL",
      "path": "xmlhttprequest/how_to_check_the_secruity_state_of_an_xmlhttprequest_over_ssl",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.HTML in XMLHttpRequest",
      "path": "xmlhttprequest/html_in_xmlhttprequest",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.load event",
      "path": "xmlhttprequest/load_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.loadend event",
      "path": "xmlhttprequest/loadend_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.loadstart event",
      "path": "xmlhttprequest/loadstart_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.mozAnon",
      "path": "xmlhttprequest/mozanon",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.mozBackgroundRequest",
      "path": "xmlhttprequest/mozbackgroundrequest",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.mozResponseArrayBuffer",
      "path": "xmlhttprequest/mozresponsearraybuffer",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.mozSystem",
      "path": "xmlhttprequest/mozsystem",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.multipart",
      "path": "xmlhttprequest/multipart",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.onreadystatechange",
      "path": "xmlhttprequest/onreadystatechange",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.open",
      "path": "xmlhttprequest/open",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.overrideMimeType",
      "path": "xmlhttprequest/overridemimetype",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.progress event",
      "path": "xmlhttprequest/progress_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.readyState",
      "path": "xmlhttprequest/readystate",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.response",
      "path": "xmlhttprequest/response",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.responseText",
      "path": "xmlhttprequest/responsetext",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.responseType",
      "path": "xmlhttprequest/responsetype",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.responseURL",
      "path": "xmlhttprequest/responseurl",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.responseXML",
      "path": "xmlhttprequest/responsexml",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.send",
      "path": "xmlhttprequest/send",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.Sending and Receiving Binary Data",
      "path": "xmlhttprequest/sending_and_receiving_binary_data",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.setRequestHeader",
      "path": "xmlhttprequest/setrequestheader",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.status",
      "path": "xmlhttprequest/status",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.statusText",
      "path": "xmlhttprequest/statustext",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.Synchronous and Asynchronous Requests",
      "path": "xmlhttprequest/synchronous_and_asynchronous_requests",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.timeout",
      "path": "xmlhttprequest/timeout",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.timeout event",
      "path": "xmlhttprequest/timeout_event",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.upload",
      "path": "xmlhttprequest/upload",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.Using XMLHttpRequest",
      "path": "xmlhttprequest/using_xmlhttprequest",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.Using XMLHttpRequest in IE6",
      "path": "xmlhttprequest/using_xmlhttprequest_in_ie6",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequest.withCredentials",
      "path": "xmlhttprequest/withcredentials",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget",
      "path": "xmlhttprequesteventtarget",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget.onabort",
      "path": "xmlhttprequesteventtarget/onabort",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget.onerror",
      "path": "xmlhttprequesteventtarget/onerror",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget.onload",
      "path": "xmlhttprequesteventtarget/onload",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget.onloadstart",
      "path": "xmlhttprequesteventtarget/onloadstart",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestEventTarget.onprogress",
      "path": "xmlhttprequesteventtarget/onprogress",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLHttpRequestResponseType",
      "path": "xmlhttprequestresponsetype",
      "type": "XMLHTTPRequest"
    },
    {
      "name": "XMLSerializer",
      "path": "xmlserializer",
      "type": "Miscellaneous"
    },
    {
      "name": "XMLSerializer.serializeToString",
      "path": "xmlserializer/serializetostring",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathEvaluator",
      "path": "xpathevaluator",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathEvaluator.createExpression",
      "path": "xpathevaluator/createexpression",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathEvaluator.createNSResolver",
      "path": "xpathevaluator/creatensresolver",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathEvaluator.evaluate",
      "path": "xpathevaluator/evaluate",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathException",
      "path": "xpathexception",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathException.code",
      "path": "xpathexception/code",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathExpression",
      "path": "xpathexpression",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathExpression.evaluate",
      "path": "xpathexpression/evaluate",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathNSResolver",
      "path": "xpathnsresolver",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathNSResolver.lookupNamespaceURI",
      "path": "xpathnsresolver/lookupnamespaceuri",
      "type": "Miscellaneous"
    },
    { "name": "XPathResult", "path": "xpathresult", "type": "Miscellaneous" },
    {
      "name": "XPathResult.booleanValue",
      "path": "xpathresult/booleanvalue",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.invalidIteratorState",
      "path": "xpathresult/invaliditeratorstate",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.iterateNext",
      "path": "xpathresult/iteratenext",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.numberValue",
      "path": "xpathresult/numbervalue",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.resultType",
      "path": "xpathresult/resulttype",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.singleNodeValue",
      "path": "xpathresult/singlenodevalue",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.snapshotItem",
      "path": "xpathresult/snapshotitem",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.snapshotLength",
      "path": "xpathresult/snapshotlength",
      "type": "Miscellaneous"
    },
    {
      "name": "XPathResult.stringValue",
      "path": "xpathresult/stringvalue",
      "type": "Miscellaneous"
    },
    {
      "name": "XRBoundedReferenceSpace",
      "path": "xrboundedreferencespace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRBoundedReferenceSpace.boundsGeometry",
      "path": "xrboundedreferencespace/boundsgeometry",
      "type": "Geometry"
    },
    {
      "name": "XREnvironmentBlendMode",
      "path": "xrenvironmentblendmode",
      "type": "Miscellaneous"
    },
    { "name": "XREye", "path": "xreye", "type": "Miscellaneous" },
    { "name": "XRFrame", "path": "xrframe", "type": "Miscellaneous" },
    {
      "name": "XRFrame.getPose",
      "path": "xrframe/getpose",
      "type": "Miscellaneous"
    },
    {
      "name": "XRFrame.getViewerPose",
      "path": "xrframe/getviewerpose",
      "type": "Miscellaneous"
    },
    {
      "name": "XRFrame.session",
      "path": "xrframe/session",
      "type": "Miscellaneous"
    },
    {
      "name": "XRFrameRequestCallback",
      "path": "xrframerequestcallback",
      "type": "Miscellaneous"
    },
    { "name": "XRHandedness", "path": "xrhandedness", "type": "Miscellaneous" },
    {
      "name": "XRInputSource",
      "path": "xrinputsource",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSource.gripSpace",
      "path": "xrinputsource/gripspace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSource.handedness",
      "path": "xrinputsource/handedness",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSource.profiles",
      "path": "xrinputsource/profiles",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSource.targetRayMode",
      "path": "xrinputsource/targetraymode",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSource.targetRaySpace",
      "path": "xrinputsource/targetrayspace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray",
      "path": "xrinputsourcearray",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray.entries",
      "path": "xrinputsourcearray/entries",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray.forEach",
      "path": "xrinputsourcearray/foreach",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray.keys",
      "path": "xrinputsourcearray/keys",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray.length",
      "path": "xrinputsourcearray/length",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceArray.values",
      "path": "xrinputsourcearray/values",
      "type": "Miscellaneous"
    },
    {
      "name": "XRInputSourceEvent",
      "path": "xrinputsourceevent",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEvent.constructor",
      "path": "xrinputsourceevent/xrinputsourceevent",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEvent.frame",
      "path": "xrinputsourceevent/frame",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEvent.inputSource",
      "path": "xrinputsourceevent/inputsource",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEventInit",
      "path": "xrinputsourceeventinit",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEventInit.frame",
      "path": "xrinputsourceeventinit/frame",
      "type": "Events"
    },
    {
      "name": "XRInputSourceEventInit.inputSource",
      "path": "xrinputsourceeventinit/inputsource",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEvent",
      "path": "xrinputsourceschangeevent",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEvent.added",
      "path": "xrinputsourceschangeevent/added",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEvent.constructor",
      "path": "xrinputsourceschangeevent/xrinputsourceschangeevent",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEvent.removed",
      "path": "xrinputsourceschangeevent/removed",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEvent.session",
      "path": "xrinputsourceschangeevent/session",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEventInit",
      "path": "xrinputsourceschangeeventinit",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEventInit.added",
      "path": "xrinputsourceschangeeventinit/added",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEventInit.removed",
      "path": "xrinputsourceschangeeventinit/removed",
      "type": "Events"
    },
    {
      "name": "XRInputSourcesChangeEventInit.session",
      "path": "xrinputsourceschangeeventinit/session",
      "type": "Events"
    },
    {
      "name": "XRPermissionDescriptor",
      "path": "xrpermissiondescriptor",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPermissionDescriptor.mode",
      "path": "xrpermissiondescriptor/mode",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPermissionDescriptor.optionalFeatures",
      "path": "xrpermissiondescriptor/optionalfeatures",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPermissionDescriptor.requiredFeatures",
      "path": "xrpermissiondescriptor/requiredfeatures",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPermissionStatus",
      "path": "xrpermissionstatus",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPermissionStatus.granted",
      "path": "xrpermissionstatus/granted",
      "type": "Miscellaneous"
    },
    { "name": "XRPose", "path": "xrpose", "type": "Miscellaneous" },
    {
      "name": "XRPose.emulatedPosition",
      "path": "xrpose/emulatedposition",
      "type": "Miscellaneous"
    },
    {
      "name": "XRPose.transform",
      "path": "xrpose/transform",
      "type": "Miscellaneous"
    },
    {
      "name": "XRReferenceSpace",
      "path": "xrreferencespace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRReferenceSpace.getOffsetReferenceSpace",
      "path": "xrreferencespace/getoffsetreferencespace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRReferenceSpace.onreset",
      "path": "xrreferencespace/onreset",
      "type": "Miscellaneous"
    },
    {
      "name": "XRReferenceSpace.reset event",
      "path": "xrreferencespace/reset_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRReferenceSpaceEvent",
      "path": "xrreferencespaceevent",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEvent.constructor",
      "path": "xrreferencespaceevent/xrreferencespaceevent",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEvent.referenceSpace",
      "path": "xrreferencespaceevent/referencespace",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEvent.transform",
      "path": "xrreferencespaceevent/transform",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEventInit",
      "path": "xrreferencespaceeventinit",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEventInit.referenceSpace",
      "path": "xrreferencespaceeventinit/referencespace",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceEventInit.transform",
      "path": "xrreferencespaceeventinit/transform",
      "type": "Events"
    },
    {
      "name": "XRReferenceSpaceType",
      "path": "xrreferencespacetype",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderState",
      "path": "xrrenderstate",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderState.baseLayer",
      "path": "xrrenderstate/baselayer",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderState.depthFar",
      "path": "xrrenderstate/depthfar",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderState.depthNear",
      "path": "xrrenderstate/depthnear",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderState.inlineVerticalFieldOfView",
      "path": "xrrenderstate/inlineverticalfieldofview",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRenderStateInit",
      "path": "xrrenderstateinit",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform",
      "path": "xrrigidtransform",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform.constructor",
      "path": "xrrigidtransform/xrrigidtransform",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform.inverse",
      "path": "xrrigidtransform/inverse",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform.matrix",
      "path": "xrrigidtransform/matrix",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform.orientation",
      "path": "xrrigidtransform/orientation",
      "type": "Miscellaneous"
    },
    {
      "name": "XRRigidTransform.position",
      "path": "xrrigidtransform/position",
      "type": "Miscellaneous"
    },
    { "name": "XRSession", "path": "xrsession", "type": "Miscellaneous" },
    {
      "name": "XRSession.cancelAnimationFrame",
      "path": "xrsession/cancelanimationframe",
      "type": "Animation"
    },
    {
      "name": "XRSession.end",
      "path": "xrsession/end",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.end event",
      "path": "xrsession/end_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.environmentBlendMode",
      "path": "xrsession/environmentblendmode",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.inputSources",
      "path": "xrsession/inputsources",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.inputsourceschange event",
      "path": "xrsession/inputsourceschange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onend",
      "path": "xrsession/onend",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.oninputsourceschange",
      "path": "xrsession/oninputsourceschange",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onselect",
      "path": "xrsession/onselect",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onselectend",
      "path": "xrsession/onselectend",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onselectstart",
      "path": "xrsession/onselectstart",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onsqueeze",
      "path": "xrsession/onsqueeze",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onsqueezeend",
      "path": "xrsession/onsqueezeend",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onsqueezestart",
      "path": "xrsession/onsqueezestart",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.onvisibilitychange",
      "path": "xrsession/onvisibilitychange",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.renderState",
      "path": "xrsession/renderstate",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.requestAnimationFrame",
      "path": "xrsession/requestanimationframe",
      "type": "Animation"
    },
    {
      "name": "XRSession.requestReferenceSpace",
      "path": "xrsession/requestreferencespace",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.select event",
      "path": "xrsession/select_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.selectend event",
      "path": "xrsession/selectend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.selectstart event",
      "path": "xrsession/selectstart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.squeeze event",
      "path": "xrsession/squeeze_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.squeezeend event",
      "path": "xrsession/squeezeend_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.squeezestart event",
      "path": "xrsession/squeezestart_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.updateRenderState",
      "path": "xrsession/updaterenderstate",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.visibilitychange event",
      "path": "xrsession/visibilitychange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSession.visibilityState",
      "path": "xrsession/visibilitystate",
      "type": "Miscellaneous"
    },
    { "name": "XRSessionEvent", "path": "xrsessionevent", "type": "Events" },
    {
      "name": "XRSessionEvent.constructor",
      "path": "xrsessionevent/xrsessionevent",
      "type": "Events"
    },
    {
      "name": "XRSessionEvent.session",
      "path": "xrsessionevent/session",
      "type": "Events"
    },
    {
      "name": "XRSessionEventInit",
      "path": "xrsessioneventinit",
      "type": "Events"
    },
    {
      "name": "XRSessionEventInit.session",
      "path": "xrsessioneventinit/session",
      "type": "Events"
    },
    {
      "name": "XRSessionInit",
      "path": "xrsessioninit",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSessionMode",
      "path": "xrsessionmode",
      "type": "Miscellaneous"
    },
    { "name": "XRSpace", "path": "xrspace", "type": "Miscellaneous" },
    { "name": "XRSystem", "path": "xrsystem", "type": "Miscellaneous" },
    {
      "name": "XRSystem.devicechange event",
      "path": "xrsystem/devicechange_event",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSystem.isSessionSupported",
      "path": "xrsystem/issessionsupported",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSystem.ondevicechange",
      "path": "xrsystem/ondevicechange",
      "type": "Miscellaneous"
    },
    {
      "name": "XRSystem.requestSession",
      "path": "xrsystem/requestsession",
      "type": "Miscellaneous"
    },
    {
      "name": "XRTargetRayMode",
      "path": "xrtargetraymode",
      "type": "Miscellaneous"
    },
    { "name": "XRView", "path": "xrview", "type": "Miscellaneous" },
    { "name": "XRView.eye", "path": "xrview/eye", "type": "Miscellaneous" },
    {
      "name": "XRView.projectionMatrix",
      "path": "xrview/projectionmatrix",
      "type": "Miscellaneous"
    },
    {
      "name": "XRView.transform",
      "path": "xrview/transform",
      "type": "Miscellaneous"
    },
    { "name": "XRViewerPose", "path": "xrviewerpose", "type": "Miscellaneous" },
    {
      "name": "XRViewerPose.views",
      "path": "xrviewerpose/views",
      "type": "Miscellaneous"
    },
    { "name": "XRViewport", "path": "xrviewport", "type": "Miscellaneous" },
    {
      "name": "XRViewport.height",
      "path": "xrviewport/height",
      "type": "Miscellaneous"
    },
    {
      "name": "XRViewport.width",
      "path": "xrviewport/width",
      "type": "Miscellaneous"
    },
    { "name": "XRViewport.x", "path": "xrviewport/x", "type": "Miscellaneous" },
    { "name": "XRViewport.y", "path": "xrviewport/y", "type": "Miscellaneous" },
    {
      "name": "XRVisibilityState",
      "path": "xrvisibilitystate",
      "type": "Miscellaneous"
    },
    { "name": "XRWebGLLayer", "path": "xrwebgllayer", "type": "WebGL" },
    {
      "name": "XRWebGLLayer.antialias",
      "path": "xrwebgllayer/antialias",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.constructor",
      "path": "xrwebgllayer/xrwebgllayer",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.framebuffer",
      "path": "xrwebgllayer/framebuffer",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.framebufferHeight",
      "path": "xrwebgllayer/framebufferheight",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.framebufferWidth",
      "path": "xrwebgllayer/framebufferwidth",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.getNativeFramebufferScaleFactor",
      "path": "xrwebgllayer/getnativeframebufferscalefactor",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.getViewport",
      "path": "xrwebgllayer/getviewport",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayer.ignoreDepthValues",
      "path": "xrwebgllayer/ignoredepthvalues",
      "type": "WebGL"
    },
    { "name": "XRWebGLLayerInit", "path": "xrwebgllayerinit", "type": "WebGL" },
    {
      "name": "XRWebGLLayerInit.alpha",
      "path": "xrwebgllayerinit/alpha",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayerInit.antialias",
      "path": "xrwebgllayerinit/antialias",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayerInit.depth",
      "path": "xrwebgllayerinit/depth",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayerInit.framebufferScaleFactor",
      "path": "xrwebgllayerinit/framebufferscalefactor",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayerInit.ignoreDepthValues",
      "path": "xrwebgllayerinit/ignoredepthvalues",
      "type": "WebGL"
    },
    {
      "name": "XRWebGLLayerInit.stencil",
      "path": "xrwebgllayerinit/stencil",
      "type": "WebGL"
    },
    {
      "name": "XSLTProcessor",
      "path": "xsltprocessor",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.Basic Example",
      "path": "xsltprocessor/basic_example",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.Browser Differences",
      "path": "xsltprocessor/browser_differences",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.Generating HTML",
      "path": "xsltprocessor/generating_html",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.Introduction",
      "path": "xsltprocessor/introduction",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.Resources",
      "path": "xsltprocessor/resources",
      "type": "Miscellaneous"
    },
    {
      "name": "XSLTProcessor.XSL Transformations in Mozilla FAQ",
      "path": "xsltprocessor/xsl_transformations_in_mozilla_faq",
      "type": "Miscellaneous"
    }
  ],
  "types": [
    { "name": "Ambient Light", "count": 6, "slug": "ambient-light" },
    { "name": "Animation", "count": 60, "slug": "animation" },
    { "name": "Audio", "count": 265, "slug": "audio" },
    { "name": "Battery Status", "count": 11, "slug": "battery-status" },
    { "name": "Broadcast Channel", "count": 10, "slug": "broadcast-channel" },
    { "name": "Budget", "count": 3, "slug": "budget" },
    { "name": "Canvas", "count": 133, "slug": "canvas" },
    { "name": "Channel Messaging", "count": 21, "slug": "channel-messaging" },
    { "name": "Clipboard", "count": 21, "slug": "clipboard" },
    { "name": "Console", "count": 1, "slug": "console" },
    {
      "name": "Content Security Policy",
      "count": 14,
      "slug": "content-security-policy"
    },
    {
      "name": "Credential Management",
      "count": 52,
      "slug": "credential-management"
    },
    { "name": "Cryptography", "count": 35, "slug": "cryptography" },
    { "name": "CSS", "count": 318, "slug": "css" },
    { "name": "Custom Elements", "count": 5, "slug": "custom-elements" },
    { "name": "DocumentFragment", "count": 11, "slug": "documentfragment" },
    { "name": "DOM", "count": 102, "slug": "dom" },
    { "name": "Drag & Drop", "count": 41, "slug": "drag-drop" },
    { "name": "Elements", "count": 427, "slug": "elements" },
    { "name": "Encoding", "count": 20, "slug": "encoding" },
    { "name": "Encrypted Media", "count": 37, "slug": "encrypted-media" },
    { "name": "Event", "count": 43, "slug": "event" },
    { "name": "Events", "count": 182, "slug": "events" },
    { "name": "Fetch", "count": 93, "slug": "fetch" },
    { "name": "File", "count": 118, "slug": "file" },
    { "name": "Fullscreen", "count": 16, "slug": "fullscreen" },
    { "name": "Geolocation", "count": 24, "slug": "geolocation" },
    { "name": "Geometry", "count": 2, "slug": "geometry" },
    {
      "name": "GlobalEventHandlers",
      "count": 75,
      "slug": "globaleventhandlers"
    },
    { "name": "History", "count": 13, "slug": "history" },
    { "name": "IndexedDB", "count": 136, "slug": "indexeddb" },
    {
      "name": "Intersection Observer",
      "count": 18,
      "slug": "intersection-observer"
    },
    { "name": "Keyboard", "count": 34, "slug": "keyboard" },
    { "name": "Locks", "count": 8, "slug": "locks" },
    { "name": "Media", "count": 75, "slug": "media" },
    { "name": "Media Session", "count": 17, "slug": "media-session" },
    { "name": "Media Streams", "count": 240, "slug": "media-streams" },
    { "name": "Miscellaneous", "count": 963, "slug": "miscellaneous" },
    {
      "name": "Network Information",
      "count": 9,
      "slug": "network-information"
    },
    { "name": "Nodes", "count": 86, "slug": "nodes" },
    { "name": "Notification", "count": 32, "slug": "notification" },
    { "name": "Payments", "count": 95, "slug": "payments" },
    { "name": "Performance", "count": 142, "slug": "performance" },
    { "name": "Pointer Events", "count": 36, "slug": "pointer-events" },
    { "name": "Presentation", "count": 28, "slug": "presentation" },
    { "name": "Push", "count": 31, "slug": "push" },
    { "name": "Range", "count": 40, "slug": "range" },
    { "name": "Scheduling", "count": 4, "slug": "scheduling" },
    { "name": "Selection", "count": 23, "slug": "selection" },
    { "name": "Sensors", "count": 39, "slug": "sensors" },
    { "name": "Server-Sent Events", "count": 2, "slug": "server-sent-events" },
    { "name": "Service Workers", "count": 92, "slug": "service-workers" },
    { "name": "Shadow DOM", "count": 11, "slug": "shadow-dom" },
    { "name": "Speech", "count": 112, "slug": "speech" },
    { "name": "Storage", "count": 34, "slug": "storage" },
    { "name": "SVG", "count": 162, "slug": "svg" },
    { "name": "Touch Events", "count": 43, "slug": "touch-events" },
    { "name": "TreeWalker", "count": 13, "slug": "treewalker" },
    { "name": "URL", "count": 44, "slug": "url" },
    { "name": "Visual Viewport", "count": 13, "slug": "visual-viewport" },
    { "name": "Web Sockets", "count": 25, "slug": "web-sockets" },
    { "name": "Web Workers", "count": 56, "slug": "web-workers" },
    { "name": "WebGL", "count": 311, "slug": "webgl" },
    { "name": "WebRTC", "count": 392, "slug": "webrtc" },
    { "name": "WebUSB", "count": 51, "slug": "webusb" },
    { "name": "WebVR", "count": 87, "slug": "webvr" },
    { "name": "WebVTT", "count": 20, "slug": "webvtt" },
    { "name": "Window", "count": 214, "slug": "window" },
    { "name": "XMLHTTPRequest", "count": 64, "slug": "xmlhttprequest" }
  ]
}
